{"version":3,"file":"styles.css","mappings":"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EI;A1B+sER;;A0B7sEQ;EACI;A1B+sEZ;;A0BzsEI;;;EAGI;A1B4sER;;ASr/EQ;EAhBQ;EAAA;AT0gFhB;;A2BtvFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A3ByvFR;;A2BtvFI;EACI;EACA;EACA;A3ByvFR;;A2BtvFI;EACI;EACA;EACA;A3ByvFR;;A2BtvFI;EACI;EACA;EACA;EACA;A3ByvFR;;A2BtvFI;EACI;EACA;A3ByvFR;;A2BtvFI;EACI;EACA;EACA;A3ByvFR;;ASliFQ;EAhBQ;EAAA;EAAA;ATwjFhB;;A4BhzFI;EACI;EACA;A5BmzFR;;A4BhzFI;EACI;A5BmzFR;;A4BhzFI;EACI;EACA;A5BmzFR;;A4BjzFQ;EACI;A5BmzFZ;;A4B/yFI;EACI;EACA;EACA;EACA;A5BkzFR;;A4B/yFI;EACI;EACA;A5BkzFR;;A4BhzFQ;EACI;A5BkzFZ;;A4B9yFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A5BizFR;;A4B9yFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A5BizFR;;A4B5yFQ;EACI;EACA;A5B+yFZ;;A4B7yFY;EACI;A5B+yFhB;;A4B1yFY;EACI;A5B4yFhB;;ASvmFQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AT2pFhB;;A6Br7FI;EACI;EACA;EACA;EACA;A7Bw7FR;;A6Bt7FQ;EACI;A7Bw7FZ;;A6Br7FQ;EACI;EACA;A7Bu7FZ;;A6Bp7FQ;EACI;A7Bs7FZ;;A6Bp7FY;EACI;A7Bs7FhB;;A6Bl7FQ;EACI;A7Bo7FZ;;A6Bl7FY;EAEI;A7Bm7FhB;;A6B/6FQ;EACI;EACA;A7Bi7FZ;;A6Bv6FQ;EACI;A7By6FZ;;A6Bv6FY;EAEI;A7Bw6FhB;;A6Bp6FQ;EACI;A7Bs6FZ;;A6Bn6FQ;EACI;EACA;A7Bq6FZ;;A6Bl6FQ;EACI;A7Bo6FZ;;A6Bj6FQ;EACI;A7Bm6FZ;;A6Bz5FQ;EACI;A7B25FZ;;A6Bx5FQ;EACI;A7B05FZ;;A6Bv5FQ;EACI;A7By5FZ;;A6Bt5FQ;EACI;A7Bw5FZ;;A6Bt5FY;EACI;A7Bw5FhB;;A6Bp5FQ;EACI;A7Bs5FZ;;A6Bl5FQ;EACI;A7Bo5FZ;;A6Bh5FY;EACI;A7Bk5FhB;;A6B/4FY;EACI,kEAvHW;A7BwgG3B;;A6B54FI;EACI;EAAkB;A7Bg5F1B;;A6B74FI;EACI;EACA;EACA;EACA;A7Bg5FR;;A6B74FI;EACI;EACA;EACA;A7Bg5FR;;ASzuFQ;EAhBQ;AT6vFhB;;A8Bz/FI;EACI;A9B4/FR;;A8B1/FQ;EACI;A9B4/FZ;;A8Bz/FQ;EACI;A9B2/FZ;;A8Bv/FI;;;;EAII;A9B0/FR;;A8Bv/FI;EACI;EACA;EACA;EACA;EACA;A9B0/FR;;A8Bt/FQ;EACI;A9By/FZ;;A8Bp/FQ;EACI;A9Bu/FZ;;A8Bn/FI;EACI;EACA;EACA;A9Bs/FR;;A8Bp/FQ;EACI;A9Bs/FZ;;A8Bp/FY;EACI;A9Bs/FhB;;A8Bl/FQ;EACI;A9Bo/FZ;;AS7xFQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;ATszFhB;;A+Bl+FI;EACI;A/Bq+FR;;A+Bl+FI;EACI;A/Bq+FR;;A+Bl+FI;EACI;EACA,kBAvCe;EAwCf;EACA;EACA;EACA;EACA;A/Bq+FR;;A+Bn+FQ;EACI;A/Bq+FZ;;A+Bl+FQ;EACI;A/Bo+FZ;;A+Bh+FI;EACI;EACA;EACA,qCApDmB;A/BuhG3B;;A+B59FI;EACI;EACA,uBAtDqB;A/BqhG7B;;A+B59FI;EACI;EACA;A/B+9FR;;A+B79FQ;EAJJ;IAMQ;E/B+9FV;AACF;;A+Bv9FI;EACI;EACA;EACA;EACA,eArEqB;A/B+hG7B;;A+Bp9FQ;EACI;A/Bs9FZ;;AS71FQ;EAhBQ;ATi3FhB;;AgC7mGI;EACI;EACA;EACA;AhCgnGR;;AgC7mGI;EACI;EACA;EAA2B;AhCinGnC;;AgC9mGI;EACI;EACA;EACA;EACA;AhCinGR;;AgC9mGI;EACI;EACA;EAA2B;AhCknGnC;;AS13FQ;EAlBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ATi6FhB;;AS/4FQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ATs7FhB;;AiC1+FI;EACI;AjC6+FR;;AiC1+FI;EACI;EACA;EACA;EACA;EACA;EACA;AjC6+FR;;AiC1+FI;EACI;EACA;EACA;EACA;AjC6+FR;;AiC3+FQ;EACI;AjC6+FZ;;AiCz+FI;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;AjC4+FR;;AiCh+FQ;;EACI;EACA;EACA;EACA;AjCm+FZ;;AiC/9FI;EACI;EACA;EACA;EACA;AjCk+FR;;AiCh+FQ;EACI;EACA;EACA;EACA;AjCk+FZ;;AiC/9FQ;EACI;EACA;AjCi+FZ;;AiC79FI;EACI;EACA;EACA;AjCg+FR;;AiC79FI;EACI;ExBnMJ;EACA;EACA;EwBmMI;AjCk+FR;;AiC/9FI;EACI;EACA;AjCk+FR;;AiCr9FI;EACI;EACA;AjCu9FR;;AiC18FI;;;;;EACI;AjCg9FR;;AiC58FQ;;;;;;;;;;;EAEI;AjCw9FZ;;AiCp9FI;;;EACI;AjCy9FR;;AiCr9FQ;;;;;;;EAEI;AjC69FZ;;AiCz9FI;;;EACI;AjC89FR;;AiC19FQ;;;;;;;EAEI;AjCk+FZ;;AiC99FI;EACI;EACA;EACA;AjCi+FR;;AiC99FI;EACI;EACA;AjCi+FR;;AiCp9FI;EACI;EACA;AjCs9FR;;AiCz8FI;EACI;AjC28FR;;AiCr8FQ;EACI;AjCu8FZ;;AiCn8FI;EACI;EACA;AjCs8FR;;AiCp8FQ;EACI;EACA;AjCs8FZ;;AiCl8FI;EACI;EACA;AjCq8FR;;AiCn8FQ;EACI;EACA;AjCq8FZ;;AiCj8FI;EACI;EACA;AjCo8FR;;AiCj8FI;EACI;EACA;EACA;EACA;AjCo8FR;;AiCl8FQ;EACI;AjCo8FZ;;ASlmGQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AT+nGh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AnCs4FZ;;AmCp4FY;EACI;AnCs4FhB;;AmCj4FI;EACI;EACA;AnCo4FR;;AmCj4FI;E1B3iCA,2EALiB;ATq7HrB;;AmCh4FQ;EACI;EACA;AnCm4FZ;;AmC93FQ;EACI;EACA;EACA;EACA;EACA;EACA;AnCi4FZ;;AmC73FI;EACI;EACA;AnCg4FR;;AmC53FQ;EACI;AnC+3FZ;;AmC53FQ;EACI;AnC83FZ;;AmC53FY;EACI;AnC83FhB;;AmCz3FY;EACI;AnC23FhB;;AmCx3FY;EACI;AnC03FhB;;AmCx3FgB;EACI;AnC03FpB;;AmCn3FQ;EACI;AnCs3FZ;;AmCn3FQ;EACI;AnCq3FZ;;AmCn3FY;EACI;AnCq3FhB;;AmCh3FY;EACI;AnCk3FhB;;AmC/2FY;EACI;AnCi3FhB;;AmC/2FgB;EACI;AnCi3FpB;;AmC32FI;EACI;EACA;EACA;EACA;UAAA;EACA;EACA;EACA;EAEA;AnC62FR;;AmC32FQ;EACI;AnC62FZ;;AmCr2FI;EACI;EACA;EACA;AnCw2FR;;AmCt2FQ;EACI;AnCw2FZ;;AmCr2FQ;EACI;EACA;AnCu2FZ;;AmCn2FI;EACI;EACA;EACA;EACA;EACA;EACA;EACA,oBA9rBW;EA+rBX,iBA9rBW;EA+rBX;EACA;EACA;AnCs2FR;;AmCn2FI;EACI;AnCs2FR;;AmCn2FI;E1B5qCA;EACA;EACA;ATmhIJ;;AmCr2FI;EACI;AnCw2FR;;AmCr2FI;EACI;AnCw2FR;;AmCr2FI;EACI;EACA;AnCw2FR;;AmCr2FI;;EACI;AnCy2FR;;AmCv2FQ;;;;;;;;;;;EAEI;EACA;AnCk3FZ;;AmC92FI;;EAEI;EACA;AnCi3FR;;AmC52FY;EACI;AnC82FhB;;AmCz2FI;EACI;EACA;AnC42FR;;AmC12FQ;EAEI;EACA;AnC22FZ;;AmCx2FQ;EACI;EACA;AnC02FZ;;AmCx2FY;EACI;EACA;AnC02FhB;;AmCt2FQ;EACI;AnCw2FZ;;AmCt2FY;EACI;AnCw2FhB;;AmCn2FI;EACI;EACA;AnCs2FR;;AmCn2FI;EACI;EACA;AnCs2FR;;AmCn2FI;EACI;AnCs2FR;;AmCl2FQ;EACI;EACA;EACA;AnCq2FZ;;AmCh2FQ;EACI;EACA;EACA;AnCm2FZ;;AmC91FQ;EACI;AnCi2FZ;;AmC71FI;EACI;EACA;EACA;AnCg2FR;;AmC71FQ;;;;EAII;EACA;AnC+1FZ;;AmC51FQ;EACI;EACA;AnC81FZ;;AmC31FQ;EACI;AnC61FZ;;AmC11FQ;;EAEI;EACA;AnC41FZ;;AmCz1FQ;EACI;AnC21FZ;;AmCx1FQ;EACI;AnC01FZ;;AmCv1FQ;EACI;AnCy1FZ;;AmCt1FQ;EACI;EACA;AnCw1FZ;;AmCr1FQ;EAEI;EACA;AnCs1FZ;;AmCl1FI;EACI;EACA;EACA;AnCq1FR;;AmCl1FI;EACI;EACA;AnCq1FR;;AmCn1FQ;EACI;EACA;AnCq1FZ;;AmCj1FI;EACI;AnCo1FR;;AmCl1FQ;;;;;EAEI;AnCu1FZ;;AmC/0FI;EACI;AnCi1FR;;AmC10FI;EACI;AnC40FR;;AmCz0FI;EACI;AnC40FR;;AmCz0FI;EACI;AnC40FR;;AmCz0FI;EACI;AnC40FR;;AmCz0FI;EACI;EACA;EACA;EACA,kBAv6BW;EAw6BX,gBAv6BW;EAw6BX;EACA;EACA,8FAh6BiB;EAi6BjB;EACA;EACA;AnC40FR;;AmCz0FI;EACI;EACA;EACA;AnC40FR;;AmCz0FI;EACI;EACA;AnC40FR;;AmCz0FI;EACI;EACA;AnC40FR;;AmCz0FI;E1B95CA;EACA;EACA;E0B85CI,gBA72BiB;EA82BjB;EACA;UAAA;EACA;EACA;EAAc;EAEd;EACA;AnC80FR;;AmC30FI;EACI;AnC80FR;;AmC30FI;EACI;AnC80FR;;AmC30FI;EACI;EACA;EACA;EACA;UAAA;EACA;EAAiB;EACjB;EACA;AnC+0FR;;AmC70FQ;EACI;AnC+0FZ;;AmC50FQ;EACI;EACA;AnC80FZ;;AmC50FY;EACI;EACA;EACA;AnC80FhB;;AmC30FY;EACI;EACA;EACA;EACA;EACA;EACA,iBAx/BJ;EAy/BI;EACA;AnC60FhB;;AmCv0FI;EACI;EACA;EACA;EACA;EACA;AnC00FR;;AmCx0FQ;EACI;AnC00FZ;;AmCt0FY;EACI;AnCw0FhB;;AmCn0FI;E1Bz+CA;EACA;EACA;ATgzIJ;;AmCr0FI;EACI;AnCw0FR;;AmCr0FI;EACI;EACA;EACA;AnCw0FR;;AmCt0FQ;EACI;AnCw0FZ;;AmCt0FY;EACI;AnCw0FhB;;AmCn0FY;EACI;AnCq0FhB;;AmCn0FgB;EAEI;AnCo0FpB;;AmC9zFI;EACI;EACA;AnCi0FR;;AmC/zFQ;EACI;AnCi0FZ;;AmC7zFY;EACI;AnC+zFhB;;AmC7zFgB;EAEI;AnC8zFpB;;AmC1yFQ;EACI;EACA;AnC6yFZ;;AmC3yFY;EACI;AnC6yFhB;;AmCvyFQ;EACI;EACA;AnC0yFZ;;AmCxyFY;EACI;AnC0yFhB;;AmCpyFQ;EACI;AnCuyFZ;;AmCjyFY;EACI;AnCoyFhB;;AmC/xFI;EACI;EACA;AnCkyFR;;AmC/xFI;EACI;AnCkyFR;;AmC/xFI;EACI;AnCkyFR;;AmC/xFI;EACI,iBA3nCkB;EA4nClB;AnCkyFR;;AmChyFQ;EACI;EACA;AnCkyFZ;;AmChyFY;EACI;AnCkyFhB;;AmC7xFI;EACI;EACA;EACA;EACA;EACA;AnCgyFR;;AmC7xFI;EACI;EACA;EACA;EAEA;AnC+xFR;;AmC5xFI;EACI;AnC+xFR;;AmC5xFI;EACI;AnC+xFR;;AmC5xFI;EACI;EACA;EACA;EACA;EACA;EACA;AnC+xFR;;AmC5xFI;EACI;EACA;EACA;EACA;EACA;AnC+xFR;;AmC7xFQ;EAEI;EACA;EACA;EACA;AnC8xFZ;;AmC3xFQ;EACI;AnC6xFZ;;AmC1xFQ;EACI;AnC4xFZ;;AmCxxFI;EACI;EACA;EACA;EACA;AnC2xFR;;AmCzxFQ;EACI;AnC2xFZ;;AmCvxFI;EACI;EACA;AnC0xFR;;AmCxxFQ;EACI;AnC0xFZ;;AmCvxFQ;EACI;AnCyxFZ;;AmCrxFI;EACI;EACA;EACA;EACA;AnCwxFR;;AmCpxFI;;EAEI;EACA;EACA;EACA;EACA;AnCuxFR;;AmCpxFI;EACI;AnCuxFR;;AmCpxFI;EACI;AnCuxFR;;AmCnxFQ;EAEI;AnCqxFZ;;AmClxFQ;EAEI;EACA;EACA;EACA;EACA;EACA;AnCmxFZ;;AmChxFQ;EACI;EACA;EACA;AnCkxFZ;;AmC/wFQ;EACI;EACA;EACA;AnCixFZ;;AmC7wFI;;EAEI;EACA;EACA;EACA;EACA;AnCgxFR;;AmC7wFI;EACI;AnCgxFR;;AmC7wFI;EACI;AnCgxFR;;AmC7wFI;EACI;EACA;EACA;EACA;EACA;AnCgxFR;;AmC7wFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCgxFR;;AmC9wFQ;E1B3xDJ;EACA;EACA;E0B2xDQ;EACA;AnCkxFZ;;AmC/wFQ;EACI;AnCixFZ;;AmC9wFQ;EACI;AnCgxFZ;;AmC5wFI;EACI;EACA;AnC+wFR;;AmC5wFI;EACI;EACA;AnC+wFR;;AmC5wFI;EACI;EACA;AnC+wFR;;AmC5wFI;EACI;EACA;EACA;EACA;AnC+wFR;;AmC5wFI;EACI;AnC+wFR;;AmC5wFY;EACI;AnC8wFhB;;AmCxwFI;EACI;EACA;EACA;EACA;EACA;AnC2wFR;;AmCzwFQ;EACI;EACA;AnC2wFZ;;AmCvwFI;EACI;AnC0wFR;;AmCvwFQ;EACI;AnCywFZ;;AmCtwFQ;EACI;EACA;EACA;EACA;AnCwwFZ;;AmCrwFQ;EACI;AnCuwFZ;;AmCnwFI;EACI;AnCswFR;;AmCnwFI;EACI;AnCswFR;;AmCnwFI;EACI;EACA;EACA;EACA;AnCswFR;;AmCpwFQ;EACI;AnCswFZ;;AmCpwFY;EACI;AnCswFhB;;AmCjwFI;EACI;UAAA;AnCowFR;;AmClwFQ;EACI;EACA;EACA;EACA;AnCowFZ;;AmChwFI;EACI;EACA;EACA;AnCmwFR;;AmC/vFQ;EACI;EACA;EACA,kBA37CO;AnC6rInB;;AmC9vFI;EACI;EACA;AnCiwFR;;AmC7vFQ;EACI;AnCgwFZ;;AmC7vFQ;EACI;AnC+vFZ;;AmC5vFQ;EACI;AnC8vFZ;;AmC1vFY;EACI;AnC4vFhB;;AmC1vFgB;EACI;AnC4vFpB;;AmCtvFI;EACI;EACA;EACA;EACA;EACA;EACA;AnCyvFR;;AmCvvFQ;EACI;AnCyvFZ;;AmCrvFI;EACI;EACA;AnCwvFR;;AmCrvFI;EACI;EACA;AnCwvFR;;AmCrvFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCwvFR;;AmCtvFQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AnCwvFZ;;AmCrvFQ;EACI;EACA;EACA;AnCuvFZ;;AmClvFY;EACI;AnCovFhB;;AmC/uFI;EACI;EACA;AnCkvFR;;AmC/uFI;EACI;EACA;AnCkvFR;;AmC/uFI;EACI;EACA;EACA;EACA;EACA;EACA,+FA3hDiB;EA4hDjB;EACA;EACA;EACA;EACA;EACA;EACA;AnCkvFR;;AmChvFQ;EACI;AnCkvFZ;;AmC/uFQ;EACI;EACA;AnCivFZ;;AmC7uFI;EACI;EACA;EACA;EACA;AnCgvFR;;AmC9uFQ;EACI;EACA;EACA;AnCgvFZ;;AmCxuFI;EACI;EACA;AnC2uFR;;AmCzuFQ;EACI;EACA;AnC2uFZ;;AmCvuFI;EACI;EACA;AnC0uFR;;AmCxuFQ;EACI;EACA;AnC0uFZ;;AmCtuFI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCyuFR;;AmCvuFQ;EACI;EACA;EACA;EACA;EACA;AnCyuFZ;;AmCruFI;EACI;AnCwuFR;;AmCruFI;EACI;EACA;EACA;AnCwuFR;;AmCruFI;EACI;EACA;EACA;AnCwuFR;;AmCruFI;E1B/lEA;EACA;EACA;E0B+lEI;EACA;AnC0uFR;;AmCvuFI;EACI;EACA;EAEA;UAAA;EACA;EACA;EACA;EACA;EACA,sBA7jDqB;EA8jDrB;EACA;AnCyuFR;;AmCvuFQ;EACI;EACA,aArkDe;AnC8yI3B;;AmCtuFQ;EAEI;AnCuuFZ;;AmCruFY;EACI;AnCuuFhB;;AmC9tFI;EACI;EACA;AnCiuFR;;AmC9tFI;EACI;EACA;AnCiuFR;;AmC9tFI;EACI;EACA;EACA;EACA;EACA;AnCiuFR;;AmC9tFI;EACI;AnCiuFR;;AmC9tFI;EACI;AnCiuFR;;AmC9tFI;EACI;EACA;EACA;UAAA;EACA;EACA;AnCiuFR;;AmC/tFQ;EACI;AnCiuFZ;;AmC9tFQ;EACI;AnCguFZ;;AmC5tFI;EACI;AnC+tFR;;AmC7tFQ;EACI;AnC+tFZ;;AmC3tFI;EACI;AnC8tFR;;AmC5tFQ;EACI;AnC8tFZ;;AmCztFQ;EACI;AnC4tFZ;;AmCxtFY;EACI;AnC2tFhB;;AmCvtFQ;EACI;AnC0tFZ;;AmCttFY;EACI;AnCytFhB;;AmCrtFQ;EACI;AnCwtFZ;;AmCptFY;EACI;AnCutFhB;;AmCjvFQ;EACI;AnCovFZ;;AmChvFY;EACI;AnCmvFhB;;AmC/uFQ;EACI;AnCkvFZ;;AmC9uFY;EACI;AnCivFhB;;AmC7uFQ;EACI;AnCgvFZ;;AmC5uFY;EACI;AnC+uFhB;;AmCzwFQ;EACI;AnC4wFZ;;AmCxwFY;EACI;AnC2wFhB;;AmCvwFQ;EACI;AnC0wFZ;;AmCtwFY;EACI;AnCywFhB;;AmCrwFQ;EACI;AnCwwFZ;;AmCpwFY;EACI;AnCuwFhB;;AmCjyFQ;EACI;AnCoyFZ;;AmChyFY;EACI;AnCmyFhB;;AmC/xFQ;EACI;AnCkyFZ;;AmC9xFY;EACI;AnCiyFhB;;AmC7xFQ;EACI;AnCgyFZ;;AmC5xFY;EACI;AnC+xFhB;;AmCzzFQ;EACI;AnC4zFZ;;AmCxzFY;EACI;AnC2zFhB;;AmCvzFQ;EACI;AnC0zFZ;;AmCtzFY;EACI;AnCyzFhB;;AmCrzFQ;EACI;AnCwzFZ;;AmCpzFY;EACI;AnCuzFhB;;AmCj1FQ;EACI;AnCo1FZ;;AmCh1FY;EACI;AnCm1FhB;;AmC/0FQ;EACI;AnCk1FZ;;AmC90FY;EACI;AnCi1FhB;;AmC70FQ;EACI;AnCg1FZ;;AmC50FY;EACI;AnC+0FhB;;AmCz2FQ;EACI;AnC42FZ;;AmCx2FY;EACI;AnC22FhB;;AmCv2FQ;EACI;AnC02FZ;;AmCt2FY;EACI;AnCy2FhB;;AmCr2FQ;EACI;AnCw2FZ;;AmCp2FY;EACI;AnCu2FhB;;AmCj4FQ;EACI;AnCo4FZ;;AmCh4FY;EACI;AnCm4FhB;;AmC/3FQ;EACI;AnCk4FZ;;AmC93FY;EACI;AnCi4FhB;;AmC73FQ;EACI;AnCg4FZ;;AmC53FY;EACI;AnC+3FhB;;AmCz5FQ;EACI;AnC45FZ;;AmCx5FY;EACI;AnC25FhB;;AmCv5FQ;EACI;AnC05FZ;;AmCt5FY;EACI;AnCy5FhB;;AmCr5FQ;EACI;AnCw5FZ;;AmCp5FY;EACI;AnCu5FhB;;AmCj7FQ;EACI;AnCo7FZ;;AmCh7FY;EACI;AnCm7FhB;;AmC/6FQ;EACI;AnCk7FZ;;AmC96FY;EACI;AnCi7FhB;;AmC76FQ;EACI;AnCg7FZ;;AmC56FY;EACI;AnC+6FhB;;AmCz6FQ;EACI;AnC46FZ;;AmCz6FQ;EACI;AnC46FZ;;AmCz6FQ;EACI;AnC46FZ;;AmCr7FQ;EACI;AnCw7FZ;;AmCr7FQ;EACI;AnCw7FZ;;AmCr7FQ;EACI;AnCw7FZ;;AmCj8FQ;EACI;AnCo8FZ;;AmCj8FQ;EACI;AnCo8FZ;;AmCj8FQ;EACI;AnCo8FZ;;AmC78FQ;EACI;AnCg9FZ;;AmC78FQ;EACI;AnCg9FZ;;AmC78FQ;EACI;AnCg9FZ;;AmCz9FQ;EACI;AnC49FZ;;AmCz9FQ;EACI;AnC49FZ;;AmCz9FQ;EACI;AnC49FZ;;AmCr+FQ;EACI;AnCw+FZ;;AmCr+FQ;EACI;AnCw+FZ;;AmCr+FQ;EACI;AnCw+FZ;;AmCj/FQ;EACI;AnCo/FZ;;AmCj/FQ;EACI;AnCo/FZ;;AmCj/FQ;EACI;AnCo/FZ;;AmC7/FQ;EACI;AnCggGZ;;AmC7/FQ;EACI;AnCggGZ;;AmC7/FQ;EACI;AnCggGZ;;AmCzgGQ;EACI;AnC4gGZ;;AmCzgGQ;EACI;AnC4gGZ;;AmCzgGQ;EACI;AnC4gGZ;;AmCrhGQ;EACI;AnCwhGZ;;AmCrhGQ;EACI;AnCwhGZ;;AmCrhGQ;EACI;AnCwhGZ;;AmCjiGQ;EACI;AnCoiGZ;;AmCjiGQ;EACI;AnCoiGZ;;AmCjiGQ;EACI;AnCoiGZ;;AmC7iGQ;EACI;AnCgjGZ;;AmC7iGQ;EACI;AnCgjGZ;;AmC7iGQ;EACI;AnCgjGZ;;AmCzjGQ;EACI;AnC4jGZ;;AmCzjGQ;EACI;AnC4jGZ;;AmCzjGQ;EACI;AnC4jGZ;;AmCrkGQ;EACI;AnCwkGZ;;AmCrkGQ;EACI;AnCwkGZ;;AmCrkGQ;EACI;AnCwkGZ;;AmCjlGQ;EACI;AnColGZ;;AmCjlGQ;EACI;AnColGZ;;AmCjlGQ;EACI;AnColGZ;;AmC7lGQ;EACI;AnCgmGZ;;AmC7lGQ;EACI;AnCgmGZ;;AmC7lGQ;EACI;AnCgmGZ;;AmCzmGQ;EACI;AnC4mGZ;;AmCzmGQ;EACI;AnC4mGZ;;AmCzmGQ;EACI;AnC4mGZ;;AmCrnGQ;EACI;AnCwnGZ;;AmCrnGQ;EACI;AnCwnGZ;;AmCrnGQ;EACI;AnCwnGZ;;AmCjoGQ;EACI;AnCooGZ;;AmCjoGQ;EACI;AnCooGZ;;AmCjoGQ;EACI;AnCooGZ;;AmC7oGQ;EACI;AnCgpGZ;;AmC7oGQ;EACI;AnCgpGZ;;AmC7oGQ;EACI;AnCgpGZ;;AmCzpGQ;EACI;AnC4pGZ;;AmCzpGQ;EACI;AnC4pGZ;;AmCzpGQ;EACI;AnC4pGZ;;AmCrqGQ;EACI;AnCwqGZ;;AmCrqGQ;EACI;AnCwqGZ;;AmCrqGQ;EACI;AnCwqGZ;;AmCjrGQ;EACI;AnCorGZ;;AmCjrGQ;EACI;AnCorGZ;;AmCjrGQ;EACI;AnCorGZ;;AmC7rGQ;EACI;AnCgsGZ;;AmC7rGQ;EACI;AnCgsGZ;;AmC7rGQ;EACI;AnCgsGZ;;AmCzsGQ;EACI;AnC4sGZ;;AmCzsGQ;EACI;AnC4sGZ;;AmCzsGQ;EACI;AnC4sGZ;;AmCxsGI;EACI;EACA;AnC2sGR;;AmCxsGI;EACI;AnC2sGR;;AmCzsGQ;EACI;AnC2sGZ;;AmCxsGQ;EACI;EACA;AnC0sGZ;;AmCtsGI;EACI;EACA;AnCysGR;;AmCvsGQ;EACI;EACA;AnCysGZ;;AmCrsGI;EACI;EACA;EACA;EACA;EACA;AnCwsGR;;AmCrsGI;EACI;EACA;EACA,8FA5yDiB;EA6yDjB,4FA7yDiB;EA8yDjB;EACA;EACA;AnCwsGR;;AmCtsGQ;EACI;EACA;AnCwsGZ;;AmCtsGY;EACI;EACA;EACA;EACA;AnCwsGhB;;AmCnsGI;EACI;EACA;AnCssGR;;AmCnsGI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCssGR;;AmCpsGQ;EACI;EACA;EACA;AnCssGZ;;AmCnsGQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCqsGZ;;AmCjsGI;EACI;AnCosGR;;AmCjsGI;EACI;EACA;AnCosGR;;AmCjsGI;EACI;EACA;AnCosGR;;AmCjsGI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCosGR;;AmClsGQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;AnCmsGZ;;AmChsGQ;EACI;EACA;EACA;EACA;AnCksGZ;;AmC/rGQ;EACI;AnCisGZ;;AmC7rGY;EACI;AnC+rGhB;;AmC7rGgB;EACI;AnC+rGpB;;AmC5rGgB;EACI;AnC8rGpB;;AmCxrGI;EACI;EACA;AnC2rGR;;AmCxrGI;EACI;AnC2rGR;;AmCxrGI;EACI;AnC2rGR;;AmCxrGI;EACI;AnC2rGR;;AmCxrGI;EACI;EACA;EACA;EACA;EACA;AnC2rGR;;AmCzrGQ;EACI;EACA;EACA;AnC2rGZ;;AmCxrGQ;EACI;AnC0rGZ;;AmCtrGY;EACI;EACA;EACA;EACA;EACA;AnCwrGhB;;AmCrrGY;EACI;AnCurGhB;;AmClrGI;EACI;EACA;EACA;EACA;EACA;EACA;AnCqrGR;;AmClrGI;EACI;EACA;EACA;EACA;EACA;EACA;AnCqrGR;;AmCnrGQ;EAEI;EACA;AnCorGZ;;AmC5qGI;EACI;EACA;EACA;EACA;EACA;EACA;AnC+qGR;;AmC7qGQ;EAEI;EACA;AnC8qGZ;;AmCtqGI;EACI;AnCyqGR;;AmCvqGQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCyqGZ;;AmCrqGY;EACI;AnCuqGhB;;AmCnqGQ;EACI;AnCqqGZ;;AmCjqGI;EACI;AnCoqGR;;AmC7pGI;EACI;UAAA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnCgqGR;;AmC9pGQ;EACI;AnCgqGZ;;AmC9pGY;EACI;AnCgqGhB;;AmC3pGY;EACI;AnC6pGhB;;AmCzpGQ;EACI;EACA,eAjhEmB;EAkhEnB,eAlhEmB;AnC6qK/B;;AmCppGQ;EACI;EACA;AnCspGZ;;AmClpGI;EACI;EACA;AnCqpGR;;AmClpGI;EACI;EACA;AnCqpGR;;AmClpGI;EACI;EACA;EACA;AnCqpGR;;AmCnpGQ;EACI;EACA;AnCqpGZ;;AmCjpGI;EACI;AnCopGR;;AmClpGQ;EACI;EACA;AnCopGZ;;AmC/oGQ;EACI;AnCkpGZ;;AmC7oGQ;EACI;AnCgpGZ;;AmC5oGI;EACI;AnC+oGR;;AmC5oGI;EACI;EACA;EACA;EACA;AnC+oGR;;AmC7oGQ;EACI;AnC+oGZ;;AmC3oGI;EACI;EACA;EACA;EACA;AnC8oGR;;AmC5oGQ;EACI;AnC8oGZ;;AmC1oGI;EACI;EACA;EACA;EACA;AnC6oGR;;AmC3oGQ;EACI;AnC6oGZ;;AoCn4LI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;ApCs4LR;;AoCn4LI;EACI;EACA;ApCs4LR;;AoCn4LI;EACI;EACA;EACA;ApCs4LR;;AoCn4LI;EACI;EACA;ApCs4LR;;AoCp4LQ;EACI;EACA;EACA;ApCs4LZ;;AoCj4LQ;EACI;ApCo4LZ;;AoC53LI;EACI;EACA;EACA;EACA;EAEA;ApC83LR;;AShoLQ;;EApBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ATuqLhB;;AgB5xLI;EACI;EACA;EACA,6DAbS;EAcT;AhB8xLR;;AgB5xLQ;EAEI;EACA;EACA;AhB6xLZ;;AgBzxLI;EACI;EACA;EACA;EACA,eA/BmB;EAgCnB;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;EACA;EACA;EACA,6DAtCS;AhBi0LjB;;AgBzxLQ;EACI;AhB2xLZ;;AgBxxLQ;EACI;AhB0xLZ;;AgBvxLQ;EACI;EACA;AhByxLZ;;AgBtxLQ;EACI;EACA;AhBwxLZ;;AgBrxLQ;EACI;EACA;EACA;AhBuxLZ;;AgBpxLQ;EAEI;EACA;AhBqxLZ;;AgBtwLQ;EACI;EACA;AhBwwLZ;;AgBrwLQ;EACI;EACA;EACA;EACA;AhBuwLZ;;AgBpwLQ;EACI;EACA;EACA;EACA;AhBswLZ;;AgBlwLI;EACI;EACA;EACA;EACA;EACA;AhBowLR;;AgBlwLQ;EAEI;EACA;AhBmwLZ;;AgBhwLQ;EACI;AhBkwLZ;;AgBzvLQ;EACI;AhB2vLZ;;AgBzvLY;EACI;EACA;EACA;EACA;EACA;EACA;EACA;AhB2vLhB;;AgBtvLI;EACI;AhBwvLR;;AgBrvLI;EACI;EACA;EACA;AhBuvLR;;AgBrvLQ;EACI,qBAvJa;AhB84LzB;;AgBnvLI;EACI;EPrMJ;EACA;EACA;AT27LJ;;AoC1+LI;EACI;EACA;EACA;EACA;ApC6+LR;;AoC1+LI;EACI;EACA;ApC6+LR;;AoC3+LQ;EACI;ApC6+LZ;;AoC1+LQ;EACI;EACA;ApC4+LZ;;AoCz+LQ;EAEI;ApC0+LZ;;AoCt+LI;EACI;EACA;EACA;ApCy+LR;;AoCv+LQ;;;EAEI;ApC0+LZ;;AoCx+LY;;;EACI;ApC4+LhB;;AoCv+LI;EACI;ApC0+LR;;AoCv+LI;EACI;ApC0+LR;;AoCv+LI;EACI;EACA;ApC0+LR;;AoCx+LQ;EACI;EACA;ApC0+LZ;;AoCv+LQ;EACI;EACA;EACA;ApCy+LZ;;AoCr+LI;EACI;EACA;EACA;ApCw+LR;;AoCt+LQ;EACI;EACA;ApCw+LZ;;AoCp+LI;EACI;ApCu+LR;;AoCn+LQ;EACI;ApCs+LZ;;AoC99LI;EACI;EACA;ApCi+LR;;AoC/9LQ;EACI;EACA;ApCi+LZ;;AoC79LI;EACI;EACA;ApCg+LR;;AoC98LI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;ApCi9LR;;AoC/8LQ;EAEI;ApCg9LZ;;AoCt8LI;EACI;EACA;ApCy8LR;;AoCt8LI;EACI;EACA;EACA;EACA;EACA;ApCy8LR;;AoCv8LQ;EACI;EACA;EACA;EACA;EACA;EACA;ApCy8LZ;;AoCp8LQ;EACI;EACA;ApCu8LZ;;AoCp8LQ;EACI;ApCs8LZ;;AoCn8LQ;EACI;ApCq8LZ;;AoCl8LQ;EACI;ApCo8LZ;;AoCj8LQ;EACI;ApCm8LZ;;AoCh8LQ;EACI;ApCk8LZ;;AoC/7LQ;EACI;ApCi8LZ;;AoC97LQ;EACI;ApCg8LZ;;AoC37LQ;EACI;EACA;ApC87LZ;;AoC37LQ;E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ShsNQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AT0vNhB;;A0C3wNI;EACI;A1C8wNR;;A0C3wNI;EACI;EACA;EACA;A1C8wNR;;A0C5wNQ;;;EAGI;A1C8wNZ;;A0C3wNQ;;;EAGI;A1C6wNZ;;A0C1wNQ;;;;;EAGI;EACA;A1C8wNZ;;A0C3wNQ;EjC7RJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;UAAA;AT2iOJ;;A0CnxNQ;EACI;A1CqxNZ;;A0CjxNQ;EACI;EACA;A1CmxNZ;;A0ChxNQ;;;EAEI;A1CmxNZ;;A0CvvNI;EACI;A1C0vNR;;A0CntNI;EACI;EACA;A1CqtNR;;A0CltNI;EACI;A1CqtNR;;A0CltNI;EACI;UAAA;EACA;A1CqtNR;;A0CxsNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1C0sNR;;A0CvsNI;EACI;A1C0sNR;;A0CvsNI;EACI;A1C0sNR;;A0CvsNI;EACI;EACA;EACA;A1C0sNR;;A0CvsNI;EACI;EACA;EACA;EACA;A1C0sNR;;A0CxsNQ;EAEI;A1CysNZ;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;A1CwsNR;;A0CrsNI;EACI;EAEI;A1CusNZ;;A0CjsNI;EACI;EAEI;A1CmsNZ;;A0C7rNI;EACI;EACA;A1CgsNR;;A0C7rNI;EACI;EACA;A1CgsNR;;A0C7rNI;EAEQ;EAIJ;EACA;EACA;EACA;A1C4rNR;;A0CzrNI;EAEQ;A1C2rNZ;;A0CrrNI;EACI;EACA;EACA;EACA;A1CwrNR;;A0CrrNI;EACI;A1CwrNR;;A0CrrNI;EACI;A1CwrNR;;A0CrrNI;EAEQ;A1CurNZ;;A0CjrNI;EAEQ;A1CmrNZ;;A0C7qNI;EAEQ;A1C+qNZ;;A0CzqNI;EAEQ;A1C2qNZ;;A0CrqNI;EACI;EACA;A1CwqNR;;A0CpqNI;EACI;EACA;A1CuqNR;;A0CrqNQ;;EAGI;A1CsqNZ;;A0CnqNQ;;EAGI;A1CoqNZ;;A0CjqNQ;EACI;EACA;EACA;A1CmqNZ;;A0C/pNI;EACI;EACA;A1CkqNR;;A0ChqNQ;;EAGI;EACA;A1CiqNZ;;A0C9pNQ;;EAGI;A1C+pNZ;;A0C1pNQ;;EAEI;EACA;EACA;A1C6pNZ;;A0CxpNQ;;EAGI;A1C0pNZ;;A0CvpNQ;;EAGI;A1CwpNZ;;A0CppNI;EACI;EACA;A1CupNR;;A0CrpNQ;;EAGI;A1CspNZ;;A0CnpNQ;;EAGI;A1CopNZ;;A0C/oNQ;;EAGI;A1CipNZ;;A0C9oNQ;;EAGI;A1C+oNZ;;A0C3oNI;EACI;EACA;A1C8oNR;;A0C5oNQ;;EAGI;A1C6oNZ;;A0C1oNQ;;EAGI;A1C2oNZ;;A0CtoNQ;EACI;EACA;EACA;EACA;EACA;A1CyoNZ;;A0CpoNQ;EACI;A1CuoNZ;;A0CloNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1CqoNR;;A0CloNI;EACI;EACA;A1CqoNR;;A0CloNI;EACI;EACA;A1CqoNR;;A0CloNI;;EAEI;EACA;A1CqoNR;;A0CloNI;;EAEI;A1CqoNR;;A0CloNI;;EAEI;A1CqoNR;;A0CloNI;EACI;EACA;EACA;A1CqoNR;;A0CloNI;EACI;A1CqoNR;;A0CloNI;EACI;EACA;A1CqoNR;;A0CloNI;;EAGQ;A1CooNZ;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;EACA;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;EACA;EACA;EACA;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;A1CmoNR;;A0ChoNI;EACI;EACA;A1CmoNR;;A0ChoNI;EACI;EACA;A1CmoNR;;A0CtnNI;EACI;EACA;EACA;A1CynNR;;A0CtnNI;EACI;EACA;EACA;A1CynNR;;A0CtnNI;EACI;A1CynNR;;A0CtnNI;EACI;A1CynNR;;A0CtnNI;EACI;A1CynNR;;A0CtnNI;EjCjuBA;EACA;EACA;EiCiuBI;EAEA;EAA4B;EAC5B;EACA;EACA;UAAA;EACA;EACA;EACA;A1C2nNR;;A0CxnNI;EACI;A1C2nNR;;A0CxnNI;EACI;A1C2nNR;;A0CxnNI;EACI;A1C2nNR;;A0CznNQ;;EAEI;A1C2nNZ;;A0CvnNI;EACI;EACA;A1C0nNR;;A0CvnNI;;EAEI;A1C0nNR;;A0CtnNQ;EACI;A1CynNZ;;A0CrnNI;EACI;EACA;EACA;A1CwnNR;;A0CrnNI;EAEI;EACA;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CpnNI;EACI;A1CunNR;;A0CnnNQ;EACI;EACA;EACA;EACA,gBAnsBiB;EAmsByB;EAC1C;A1CunNZ;;A0CnnNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1CsnNR;;A0CpnNQ;EACI;EAA2B;A1CunNvC;;A0ChnNQ;EACI;EACA;EACA;EAAqB;A1CsnNjC;;A0ClnNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A1CqnNR;;A0CnnNQ;EjCx2BJ;EACA;EACA;EiCw2BQ;EACA;EACA;EACA;EACA;EACA;A1CunNZ;;A0CnnNI;EACI;A1CsnNR;;A0CnnNI;EACI;A1CsnNR;;A0CnnNI;EACI;EACA;A1CsnNR;;A0CnnNI;EACI;A1CsnNR;;A0CnnNI;EACI;A1CsnNR;;A0ClnNQ;EACI;EACA;EACA;EAGI;EACA;A1CmnNhB;;A0CpmNQ;EAKI;A1ComNZ;;A0C/lNQ;EACI;A1CkmNZ;;A0C9lNI;;;;;;;EAMI;A1CkmNR;;A0C/lNI;EACI;A1CkmNR;;A0C/lNI;EACI;EACA;A1CkmNR;;A0C/lNI;EACI;A1CkmNR;;A0ChmNQ;EACI;A1CkmNZ;;A0C9lNI;EAEI;EAGA;EAEA;EACA;EACA;EAGA;A1C2lNR;;A0CzlNQ;EACI;EAAgC;A1C4lN5C;;A0CxlNI;EACI;A1C2lNR;;A0CzlNQ;EACI;A1C2lNZ;;A0CvlNI;EACI;EACA;A1C0lNR;;A0CvlNI;EACI;EACA;A1C0lNR;;A0CvlNI;EACI;A1C0lNR;;A0CvlNI;EACI;A1C0lNR;;A0CvlNI;EACI;A1C0lNR;;A0CvlNI;;;;;;;EAEI;EACA;EACA;EACA;EACA;A1C+lNR;;A0C5lNI;;;EAEQ;A1CgmNZ;;A0CllNI;;;EACI;A1CulNR;;A0CplNI;;;;EAEI;A1CylNR;;A0CtlNI;;;;EAEI;EACA;A1C2lNR;;A0CxlNI;;EAEQ;A1C2lNZ;;A0C7kNI;;EAEQ;A1CglNZ;;A0ClkNI;;EACI;A1CskNR;;A0CnkNI;;EACI;A1CukNR;;A0CpkNI;;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A1CwkNR;;A0CtkNQ;;EACI;EACA;EACA;A1CykNZ;;A0CtkNQ;;EACI;A1CykNZ;;A0CrkNI;;EACI;A1CykNR;;A0CvkNQ;;EACI;EACA;EACA;A1C0kNZ;;A0CvkNQ;;EACI;A1C0kNZ;;A0CtkNI;;EACI;EACA;EACA;EACA;EACA;EACA;A1C0kNR;;A0CxkNQ;;EACI;EACA;EACA;A1C2kNZ;;A0CxkNQ;;EACI;A1C2kNZ;;A0CvkNI;;EACI;EACA;EACA;EACA;A1C2kNR;;A0CzkNQ;;EACI;EACA;EACA;A1C4kNZ;;A0CzkNQ;;EACI;A1C4kNZ;;A0CxkNI;;;;;;EAII;EACA;A1C6kNR;;A0C1kNI;;;;;;EAII;EACA;EACA;A1C+kNR;;A0C5kNI;;;EAEI;A1CglNR;;A0C7kNI;;;EAEI;A1CilNR;;A0C9kNI;;;EAEI;A1CklNR;;A0C/kNI;;;EAEI;A1CmlNR;;A0C/kNI;;;;;EAEQ;A1CqlNZ;;A0C7kNI;;;;;EAEQ;A1CmlNZ;;A0C3kNI;;;;;EAEQ;A1CilNZ;;A0CzkNI;;;;;EACI;A1CglNR;;A0C7kNI;;;;EAEI;A1CklNR;;A0C/kNI;EACI;EAAa;EACb;EAAkB;EAClB;EACA;EACA;A1ColNR;;A0CjlNI;EACI;EACA;A1ColNR;;A0CjlNI;EACI;A1ColNR;;A0C7kNI;EACI;A1CglNR;;A0C7kNI;EACI;A1CglNR;;A0C7kNI;EACI;EACA;EACA;EACA;A1CglNR;;A0C9kNQ;EACI;A1CglNZ;;A0C9kNY;EACI;A1CglNhB;;A0C5kNQ;EACI;A1C8kNZ;;A0ClkNI;EACI,oBAloCe;EAkoCqB;EACpC,qBAnoCe;EAmoCsB;A1CukN7C;;A0CpkNI;EACI;A1CukNR;;A0CpkNI;EACI;A1CukNR;;A0CpkNI;EACI;EACA;EACA;A1CukNR;;A0CpkNI;EACI;A1CukNR;;A0CpkNI;EACI;A1CukNR;;A0CpkNI;;EAEI;A1CukNR;;A0CpkNI;;;;;EAEI;A1C0kNR;;A0C3jNQ;;EACI;EACA;A1C+jNZ;;A0C5jNQ;;EACI;EACA;A1C+jNZ;;A0C5jNQ;;EAEI;EACA;A1C8jNZ;;A0C3jNQ;;EAEI;EACA;A1C6jNZ;;A0CjiNI;EACI;A1CoiNR;;A0CvhNI;EACI;EACA;EACA;EACA;A1CyhNR;;A0CthNI;EACI;EACA;A1CyhNR;;A0CthNI;;;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1C2hNR;;A0CzhNQ;;;;EACI;EACA;EACA;EACA;A1C8hNZ;;A0C1hNI;;EACI;EACA;EACA;A1C8hNR;;A0C3hNI;;EACI;EACA;EACA;A1C+hNR;;A0C5hNI;;;;EAEI;EACA;A1CiiNR;;A0C9hNI;;;;EAEI;EACA;EACA;A1CmiNR;;A0CjiNQ;;;;EACI;EACA;EACA;A1CsiNZ;;A0CliNI;;;;EAEI;EACA;EACA;A1CuiNR;;A0CriNQ;;;;EACI;EACA;EACA;A1C0iNZ;;A0CtiNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;EACA;EACA;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;EACA;A1CyiNR;;A0CtiNI;EACI;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;A0CtiNI;EACI;EACA;A1CyiNR;;ASv4PQ;EAhBQ;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;ATm7PhB;;A2Cp7PI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;A3Cu7PR;;A2Ch7PI;EACI;EACA;A3Cm7PR;;A2Ch7PI;EACI;EACA;EACA;EACA;A3Cm7PR;;A2Ch7PI;EACI;EACA;EACA;EACA;EACA;EACA;UAAA;A3Cm7PR;;A2Ch7PI;EACI;A3Cm7PR;;A2Ch7PI;EACI;A3Cm7PR;;A2Ch7PI;EACI;EACA;EACA;EACA;EACA;EACA;A3Cm7PR;;A2Cj7PQ;EACI;EACA;A3Cm7PZ;;A2Cj7PY;EACI;A3Cm7PhB;;A2Ch7PY;EACI;A3Ck7PhB;;A2C/6PY;EACI;A3Ci7PhB;;A2C96PY;EACI;A3Cg7PhB;;A2C96PgB;EACI;A3Cg7PpB;;A2C56PY;EACI;A3C86PhB;;A2C56PgB;EACI;A3C86PpB;;A2Cx6PI;EACI;EACA;EACA;EACA;A3C26PR;;A2Cx6PI;EACI;EACA;EACA;EACA;A3C26PR;;A2Cz6PQ;EACI;A3C26PZ;;A2Cv6PI;EACI;EACA;A3C06PR;;A2Cv6PI;EACI;A3C06PR;;A2Cv6PI;EACI;EACA;EACA;EACA;A3C06PR;;A2Cx6PQ;EACI;A3C06PZ;;A2Cv6PQ;EACI;A3Cy6PZ;;A2Ct6PQ;EACI;A3Cw6PZ;;A2Cp6PI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;A3Cu6PR;;A2Cp6PI;EACI;A3Cu6PR;;A2Cp6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","sources":["./node_modules/@angular/material/prebuilt-themes/deeppurple-amber.css","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-display-container.scss","./src/styles.scss","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-drag.scss","./node_modules/igniteui-angular/lib/core/styles/components/_common/_igx-vhelper.scss","./node_modules/igniteui-angular/lib/core/styles/themes/_core.scss","./node_modules/igniteui-angular/lib/core/styles/base/utilities/_bem.scss","./node_modules/igniteui-angular/lib/core/styles/components/icon/_icon-component.scss","./node_modules/igniteui-angular/lib/core/styles/components/radio/_radio-component.scss","./node_modules/igniteui-angular/lib/core/styles/print/_index.scss","./node_modules/igniteui-angular/lib/core/styles/print/_grid-print.scss","./node_modules/igniteui-angular/lib/core/styles/base/utilities/_mixins.scss","./node_modules/igniteui-angular/lib/core/styles/components/ripple/_ripple-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/avatar/_avatar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/action-strip/_action-strip-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/badge/_badge-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/bottom-nav/_bottom-nav-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/button/_button-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/button-group/_button-group-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/banner/_banner-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/calendar/_calendar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/card/_card-theme.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/entrances/_scale.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/exits/_scale.scss","./node_modules/igniteui-angular/lib/core/styles/components/carousel/_carousel-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/splitter/_splitter-theme.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/generic/_scale.scss","./node_modules/igniteui-angular/lib/core/styles/components/checkbox/_checkbox-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/chip/_chip-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/column-actions/_column-actions-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/combo/_combo-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/date-picker/_date-picker-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/date-range-picker/_date-range-picker-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/dialog/_dialog-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/divider/_divider-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/drop-down/_drop-down-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/expansion-panel/_expansion-panel-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/grid/_grid-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/grid/_excel-filtering-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/grid/_advanced-filtering-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/grid-summary/_grid-summary-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/grid-toolbar/_grid-toolbar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/highlight/highlight-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/icon/_icon-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/input/_input-group-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/list/_list-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/navbar/_navbar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/navdrawer/_navdrawer-theme.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/_easings.scss","./node_modules/igniteui-angular/lib/core/styles/components/overlay/_overlay-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/paginator/_paginator-theme.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/generic/_rotate.scss","./node_modules/igniteui-angular/lib/core/styles/components/progress/_progress-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/radio/_radio-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/scrollbar/scrollbar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/slider/_slider-theme.scss","./node_modules/igniteui-angular/lib/core/styles/base/animations/entrances/_fade.scss","./node_modules/igniteui-angular/lib/core/styles/components/snackbar/_snackbar-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/switch/_switch-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/tabs/_tabs-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/stepper/_stepper-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/toast/_toast-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/tooltip/_tooltip-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/time-picker/_time-picker-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/tree/_tree-theme.scss","./node_modules/igniteui-angular/lib/core/styles/components/watermark/_watermark-theme.scss"],"sourcesContent":[".mat-badge-content{font-weight:600;font-size:12px;font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-badge-small .mat-badge-content{font-size:9px}.mat-badge-large .mat-badge-content{font-size:24px}.mat-h1,.mat-headline,.mat-typography h1{font:400 24px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h2,.mat-title,.mat-typography h2{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h3,.mat-subheading-2,.mat-typography h3{font:400 16px/28px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h4,.mat-subheading-1,.mat-typography h4{font:400 15px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 16px}.mat-h5,.mat-typography h5{font:400 calc(14px * 0.83)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-h6,.mat-typography h6{font:400 calc(14px * 0.67)/20px Roboto, \"Helvetica Neue\", sans-serif;margin:0 0 12px}.mat-body-strong,.mat-body-2{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body,.mat-body-1,.mat-typography{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-body p,.mat-body-1 p,.mat-typography p{margin:0 0 12px}.mat-small,.mat-caption{font:400 12px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-display-4,.mat-typography .mat-display-4{font:300 112px/112px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.05em;margin:0 0 56px}.mat-display-3,.mat-typography .mat-display-3{font:400 56px/56px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.02em;margin:0 0 64px}.mat-display-2,.mat-typography .mat-display-2{font:400 45px/48px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:-0.005em;margin:0 0 64px}.mat-display-1,.mat-typography .mat-display-1{font:400 34px/40px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0 0 64px}.mat-bottom-sheet-container{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-button,.mat-raised-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button,.mat-fab,.mat-mini-fab{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-button-toggle{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-card-title{font-size:24px;font-weight:500}.mat-card-header .mat-card-title{font-size:20px}.mat-card-subtitle,.mat-card-content{font-size:14px}.mat-checkbox{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-checkbox-layout .mat-checkbox-label{line-height:24px}.mat-chip{font-size:14px;font-weight:500}.mat-chip .mat-chip-trailing-icon.mat-icon,.mat-chip .mat-chip-remove.mat-icon{font-size:18px}.mat-table{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-header-cell{font-size:12px;font-weight:500}.mat-cell,.mat-footer-cell{font-size:14px}.mat-calendar{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-calendar-body{font-size:13px}.mat-calendar-body-label,.mat-calendar-period-button{font-size:14px;font-weight:500}.mat-calendar-table-header th{font-size:11px;font-weight:400}.mat-dialog-title{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-expansion-panel-header{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:15px;font-weight:400}.mat-expansion-panel-content{font:400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field{font-size:inherit;font-weight:400;line-height:1.125;font-family:Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-form-field-wrapper{padding-bottom:1.34375em}.mat-form-field-prefix .mat-icon,.mat-form-field-suffix .mat-icon{font-size:150%;line-height:1.125}.mat-form-field-prefix .mat-icon-button,.mat-form-field-suffix .mat-icon-button{height:1.5em;width:1.5em}.mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-suffix .mat-icon-button .mat-icon{height:1.125em;line-height:1.125}.mat-form-field-infix{padding:.5em 0;border-top:.84375em solid transparent}.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34375em) scale(0.75);width:133.3333333333%}.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.34374em) scale(0.75);width:133.3333433333%}.mat-form-field-label-wrapper{top:-0.84375em;padding-top:.84375em}.mat-form-field-label{top:1.34375em}.mat-form-field-underline{bottom:1.34375em}.mat-form-field-subscript-wrapper{font-size:75%;margin-top:.6666666667em;top:calc(100% - 1.7916666667em)}.mat-form-field-appearance-legacy .mat-form-field-wrapper{padding-bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-infix{padding:.4375em 0}.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.001px);width:133.3333333333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00101px);width:133.3333433333%}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28125em) scale(0.75) perspective(100px) translateZ(0.00102px);width:133.3333533333%}.mat-form-field-appearance-legacy .mat-form-field-label{top:1.28125em}.mat-form-field-appearance-legacy .mat-form-field-underline{bottom:1.25em}.mat-form-field-appearance-legacy .mat-form-field-subscript-wrapper{margin-top:.5416666667em;top:calc(100% - 1.6666666667em)}@media print{.mat-form-field-appearance-legacy.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28122em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.28121em) scale(0.75)}.mat-form-field-appearance-legacy.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.2812em) scale(0.75)}}.mat-form-field-appearance-fill .mat-form-field-infix{padding:.25em 0 .75em 0}.mat-form-field-appearance-fill .mat-form-field-label{top:1.09375em;margin-top:-0.5em}.mat-form-field-appearance-fill.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-fill.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-0.59374em) scale(0.75);width:133.3333433333%}.mat-form-field-appearance-outline .mat-form-field-infix{padding:1em 0 1em 0}.mat-form-field-appearance-outline .mat-form-field-label{top:1.84375em;margin-top:-0.25em}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label,.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59375em) scale(0.75);width:133.3333333333%}.mat-form-field-appearance-outline.mat-form-field-can-float .mat-input-server[label]:not(:label-shown)+.mat-form-field-label-wrapper .mat-form-field-label{transform:translateY(-1.59374em) scale(0.75);width:133.3333433333%}.mat-grid-tile-header,.mat-grid-tile-footer{font-size:14px}.mat-grid-tile-header .mat-line,.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2),.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:12px}input.mat-input-element{margin-top:-0.0625em}.mat-menu-item{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:400}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px}.mat-radio-button{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-select-trigger{height:1.125em}.mat-slide-toggle-content{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-slider-thumb-label-text{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-stepper-vertical,.mat-stepper-horizontal{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-step-label{font-size:14px;font-weight:400}.mat-step-sub-label-error{font-weight:normal}.mat-step-label-error{font-size:14px}.mat-step-label-selected{font-size:14px;font-weight:500}.mat-tab-group{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tab-label,.mat-tab-link{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-toolbar,.mat-toolbar h1,.mat-toolbar h2,.mat-toolbar h3,.mat-toolbar h4,.mat-toolbar h5,.mat-toolbar h6{font:500 20px/32px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal;margin:0}.mat-tooltip{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:10px;padding-top:6px;padding-bottom:6px}.mat-tooltip-handset{font-size:14px;padding-top:8px;padding-bottom:8px}.mat-list-item{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-option{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-list-base .mat-list-item{font-size:16px}.mat-list-base .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-item .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-list-option{font-size:16px}.mat-list-base .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base .mat-list-option .mat-line:nth-child(n+2){font-size:14px}.mat-list-base .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px;font-weight:500}.mat-list-base[dense] .mat-list-item{font-size:12px}.mat-list-base[dense] .mat-list-item .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-item .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-list-option{font-size:12px}.mat-list-base[dense] .mat-list-option .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-list-base[dense] .mat-list-option .mat-line:nth-child(n+2){font-size:12px}.mat-list-base[dense] .mat-subheader{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:12px;font-weight:500}.mat-option{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:16px}.mat-optgroup-label{font:500 14px/24px Roboto, \"Helvetica Neue\", sans-serif;letter-spacing:normal}.mat-simple-snackbar{font-family:Roboto, \"Helvetica Neue\", sans-serif;font-size:14px}.mat-simple-snackbar-action{line-height:1;font-family:inherit;font-size:inherit;font-weight:500}.mat-tree{font-family:Roboto, \"Helvetica Neue\", sans-serif}.mat-tree-node,.mat-nested-tree-node{font-weight:400;font-size:14px}.mat-ripple{overflow:hidden;position:relative}.mat-ripple:not(:empty){transform:translateZ(0)}.mat-ripple.mat-ripple-unbounded{overflow:visible}.mat-ripple-element{position:absolute;border-radius:50%;pointer-events:none;transition:opacity,transform 0ms cubic-bezier(0, 0, 0.2, 1);transform:scale(0)}.cdk-high-contrast-active .mat-ripple-element{display:none}.cdk-visually-hidden{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;white-space:nowrap;outline:0;-webkit-appearance:none;-moz-appearance:none}.cdk-overlay-container,.cdk-global-overlay-wrapper{pointer-events:none;top:0;left:0;height:100%;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:flex;max-width:100%;max-height:100%}.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);opacity:0}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:flex;flex-direction:column;min-width:1px;min-height:1px}.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}.mat-focus-indicator{position:relative}.mat-mdc-focus-indicator{position:relative}.mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-option{color:rgba(0,0,0,.87)}.mat-option:hover:not(.mat-option-disabled),.mat-option:focus:not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled){background:rgba(0,0,0,.04)}.mat-option.mat-active{background:rgba(0,0,0,.04);color:rgba(0,0,0,.87)}.mat-option.mat-option-disabled{color:rgba(0,0,0,.38)}.mat-primary .mat-option.mat-selected:not(.mat-option-disabled){color:#673ab7}.mat-accent .mat-option.mat-selected:not(.mat-option-disabled){color:#ffd740}.mat-warn .mat-option.mat-selected:not(.mat-option-disabled){color:#f44336}.mat-optgroup-label{color:rgba(0,0,0,.54)}.mat-optgroup-disabled .mat-optgroup-label{color:rgba(0,0,0,.38)}.mat-pseudo-checkbox{color:rgba(0,0,0,.54)}.mat-pseudo-checkbox::after{color:#fafafa}.mat-pseudo-checkbox-disabled{color:#b0b0b0}.mat-primary .mat-pseudo-checkbox-checked,.mat-primary .mat-pseudo-checkbox-indeterminate{background:#673ab7}.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-indeterminate,.mat-accent .mat-pseudo-checkbox-checked,.mat-accent .mat-pseudo-checkbox-indeterminate{background:#ffd740}.mat-warn .mat-pseudo-checkbox-checked,.mat-warn .mat-pseudo-checkbox-indeterminate{background:#f44336}.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background:#b0b0b0}.mat-app-background{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-elevation-z0{box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z1{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z2{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z3{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z4{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z5{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 5px 8px 0px rgba(0, 0, 0, 0.14),0px 1px 14px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z6{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-elevation-z7{box-shadow:0px 4px 5px -2px rgba(0, 0, 0, 0.2),0px 7px 10px 1px rgba(0, 0, 0, 0.14),0px 2px 16px 1px rgba(0, 0, 0, 0.12)}.mat-elevation-z8{box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z9{box-shadow:0px 5px 6px -3px rgba(0, 0, 0, 0.2),0px 9px 12px 1px rgba(0, 0, 0, 0.14),0px 3px 16px 2px rgba(0, 0, 0, 0.12)}.mat-elevation-z10{box-shadow:0px 6px 6px -3px rgba(0, 0, 0, 0.2),0px 10px 14px 1px rgba(0, 0, 0, 0.14),0px 4px 18px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z11{box-shadow:0px 6px 7px -4px rgba(0, 0, 0, 0.2),0px 11px 15px 1px rgba(0, 0, 0, 0.14),0px 4px 20px 3px rgba(0, 0, 0, 0.12)}.mat-elevation-z12{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z13{box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 13px 19px 2px rgba(0, 0, 0, 0.14),0px 5px 24px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z14{box-shadow:0px 7px 9px -4px rgba(0, 0, 0, 0.2),0px 14px 21px 2px rgba(0, 0, 0, 0.14),0px 5px 26px 4px rgba(0, 0, 0, 0.12)}.mat-elevation-z15{box-shadow:0px 8px 9px -5px rgba(0, 0, 0, 0.2),0px 15px 22px 2px rgba(0, 0, 0, 0.14),0px 6px 28px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z16{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z17{box-shadow:0px 8px 11px -5px rgba(0, 0, 0, 0.2),0px 17px 26px 2px rgba(0, 0, 0, 0.14),0px 6px 32px 5px rgba(0, 0, 0, 0.12)}.mat-elevation-z18{box-shadow:0px 9px 11px -5px rgba(0, 0, 0, 0.2),0px 18px 28px 2px rgba(0, 0, 0, 0.14),0px 7px 34px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z19{box-shadow:0px 9px 12px -6px rgba(0, 0, 0, 0.2),0px 19px 29px 2px rgba(0, 0, 0, 0.14),0px 7px 36px 6px rgba(0, 0, 0, 0.12)}.mat-elevation-z20{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 20px 31px 3px rgba(0, 0, 0, 0.14),0px 8px 38px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z21{box-shadow:0px 10px 13px -6px rgba(0, 0, 0, 0.2),0px 21px 33px 3px rgba(0, 0, 0, 0.14),0px 8px 40px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z22{box-shadow:0px 10px 14px -6px rgba(0, 0, 0, 0.2),0px 22px 35px 3px rgba(0, 0, 0, 0.14),0px 8px 42px 7px rgba(0, 0, 0, 0.12)}.mat-elevation-z23{box-shadow:0px 11px 14px -7px rgba(0, 0, 0, 0.2),0px 23px 36px 3px rgba(0, 0, 0, 0.14),0px 9px 44px 8px rgba(0, 0, 0, 0.12)}.mat-elevation-z24{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-theme-loaded-marker{display:none}.mat-autocomplete-panel{background:#fff;color:rgba(0,0,0,.87)}.mat-autocomplete-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover){background:#fff}.mat-autocomplete-panel .mat-option.mat-selected:not(.mat-active):not(:hover):not(.mat-option-disabled){color:rgba(0,0,0,.87)}.mat-badge{position:relative}.mat-badge-hidden .mat-badge-content{display:none}.mat-badge-content{position:absolute;text-align:center;display:inline-block;border-radius:50%;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;pointer-events:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:16px;height:16px;line-height:16px}.mat-badge-small.mat-badge-above .mat-badge-content{top:-8px}.mat-badge-small.mat-badge-below .mat-badge-content{bottom:-8px}.mat-badge-small.mat-badge-before .mat-badge-content{left:-16px}[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content{left:auto;right:-16px}.mat-badge-small.mat-badge-after .mat-badge-content{right:-16px}[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content{right:auto;left:-16px}.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-8px}.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-8px}[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-8px}.mat-badge-medium .mat-badge-content{width:22px;height:22px;line-height:22px}.mat-badge-medium.mat-badge-above .mat-badge-content{top:-11px}.mat-badge-medium.mat-badge-below .mat-badge-content{bottom:-11px}.mat-badge-medium.mat-badge-before .mat-badge-content{left:-22px}[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content{left:auto;right:-22px}.mat-badge-medium.mat-badge-after .mat-badge-content{right:-22px}[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content{right:auto;left:-22px}.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-11px}.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-11px}[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-11px}.mat-badge-large .mat-badge-content{width:28px;height:28px;line-height:28px}.mat-badge-large.mat-badge-above .mat-badge-content{top:-14px}.mat-badge-large.mat-badge-below .mat-badge-content{bottom:-14px}.mat-badge-large.mat-badge-before .mat-badge-content{left:-28px}[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content{left:auto;right:-28px}.mat-badge-large.mat-badge-after .mat-badge-content{right:-28px}[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content{right:auto;left:-28px}.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content{left:auto;right:-14px}.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:-14px}[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content{right:auto;left:-14px}.mat-badge-content{color:#fff;background:#673ab7}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-accent .mat-badge-content{background:#ffd740;color:rgba(0,0,0,.87)}.mat-badge-warn .mat-badge-content{color:#fff;background:#f44336}.mat-badge-disabled .mat-badge-content{background:#b9b9b9;color:rgba(0,0,0,.38)}.mat-bottom-sheet-container{box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12);background:#fff;color:rgba(0,0,0,.87)}.mat-button,.mat-icon-button,.mat-stroked-button{color:inherit;background:transparent}.mat-button.mat-primary,.mat-icon-button.mat-primary,.mat-stroked-button.mat-primary{color:#673ab7}.mat-button.mat-accent,.mat-icon-button.mat-accent,.mat-stroked-button.mat-accent{color:#ffd740}.mat-button.mat-warn,.mat-icon-button.mat-warn,.mat-stroked-button.mat-warn{color:#f44336}.mat-button.mat-primary.mat-button-disabled,.mat-button.mat-accent.mat-button-disabled,.mat-button.mat-warn.mat-button-disabled,.mat-button.mat-button-disabled.mat-button-disabled,.mat-icon-button.mat-primary.mat-button-disabled,.mat-icon-button.mat-accent.mat-button-disabled,.mat-icon-button.mat-warn.mat-button-disabled,.mat-icon-button.mat-button-disabled.mat-button-disabled,.mat-stroked-button.mat-primary.mat-button-disabled,.mat-stroked-button.mat-accent.mat-button-disabled,.mat-stroked-button.mat-warn.mat-button-disabled,.mat-stroked-button.mat-button-disabled.mat-button-disabled{color:rgba(0,0,0,.26)}.mat-button.mat-primary .mat-button-focus-overlay,.mat-icon-button.mat-primary .mat-button-focus-overlay,.mat-stroked-button.mat-primary .mat-button-focus-overlay{background-color:#673ab7}.mat-button.mat-accent .mat-button-focus-overlay,.mat-icon-button.mat-accent .mat-button-focus-overlay,.mat-stroked-button.mat-accent .mat-button-focus-overlay{background-color:#ffd740}.mat-button.mat-warn .mat-button-focus-overlay,.mat-icon-button.mat-warn .mat-button-focus-overlay,.mat-stroked-button.mat-warn .mat-button-focus-overlay{background-color:#f44336}.mat-button.mat-button-disabled .mat-button-focus-overlay,.mat-icon-button.mat-button-disabled .mat-button-focus-overlay,.mat-stroked-button.mat-button-disabled .mat-button-focus-overlay{background-color:transparent}.mat-button .mat-ripple-element,.mat-icon-button .mat-ripple-element,.mat-stroked-button .mat-ripple-element{opacity:.1;background-color:currentColor}.mat-button-focus-overlay{background:#000}.mat-stroked-button:not(.mat-button-disabled){border-color:rgba(0,0,0,.12)}.mat-flat-button,.mat-raised-button,.mat-fab,.mat-mini-fab{color:rgba(0,0,0,.87);background-color:#fff}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{color:#fff}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{color:rgba(0,0,0,.87)}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{color:#fff}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{color:rgba(0,0,0,.26)}.mat-flat-button.mat-primary,.mat-raised-button.mat-primary,.mat-fab.mat-primary,.mat-mini-fab.mat-primary{background-color:#673ab7}.mat-flat-button.mat-accent,.mat-raised-button.mat-accent,.mat-fab.mat-accent,.mat-mini-fab.mat-accent{background-color:#ffd740}.mat-flat-button.mat-warn,.mat-raised-button.mat-warn,.mat-fab.mat-warn,.mat-mini-fab.mat-warn{background-color:#f44336}.mat-flat-button.mat-primary.mat-button-disabled,.mat-flat-button.mat-accent.mat-button-disabled,.mat-flat-button.mat-warn.mat-button-disabled,.mat-flat-button.mat-button-disabled.mat-button-disabled,.mat-raised-button.mat-primary.mat-button-disabled,.mat-raised-button.mat-accent.mat-button-disabled,.mat-raised-button.mat-warn.mat-button-disabled,.mat-raised-button.mat-button-disabled.mat-button-disabled,.mat-fab.mat-primary.mat-button-disabled,.mat-fab.mat-accent.mat-button-disabled,.mat-fab.mat-warn.mat-button-disabled,.mat-fab.mat-button-disabled.mat-button-disabled,.mat-mini-fab.mat-primary.mat-button-disabled,.mat-mini-fab.mat-accent.mat-button-disabled,.mat-mini-fab.mat-warn.mat-button-disabled,.mat-mini-fab.mat-button-disabled.mat-button-disabled{background-color:rgba(0,0,0,.12)}.mat-flat-button.mat-primary .mat-ripple-element,.mat-raised-button.mat-primary .mat-ripple-element,.mat-fab.mat-primary .mat-ripple-element,.mat-mini-fab.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-flat-button.mat-accent .mat-ripple-element,.mat-raised-button.mat-accent .mat-ripple-element,.mat-fab.mat-accent .mat-ripple-element,.mat-mini-fab.mat-accent .mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-flat-button.mat-warn .mat-ripple-element,.mat-raised-button.mat-warn .mat-ripple-element,.mat-fab.mat-warn .mat-ripple-element,.mat-mini-fab.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-stroked-button:not([class*=mat-elevation-z]),.mat-flat-button:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-raised-button:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 5px 5px -3px rgba(0, 0, 0, 0.2),0px 8px 10px 1px rgba(0, 0, 0, 0.14),0px 3px 14px 2px rgba(0, 0, 0, 0.12)}.mat-raised-button.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not([class*=mat-elevation-z]),.mat-mini-fab:not([class*=mat-elevation-z]){box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]),.mat-mini-fab:not(.mat-button-disabled):active:not([class*=mat-elevation-z]){box-shadow:0px 7px 8px -4px rgba(0, 0, 0, 0.2),0px 12px 17px 2px rgba(0, 0, 0, 0.14),0px 5px 22px 4px rgba(0, 0, 0, 0.12)}.mat-fab.mat-button-disabled:not([class*=mat-elevation-z]),.mat-mini-fab.mat-button-disabled:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone,.mat-button-toggle-group{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{box-shadow:none}.mat-button-toggle{color:rgba(0,0,0,.38)}.mat-button-toggle .mat-button-toggle-focus-overlay{background-color:rgba(0,0,0,.12)}.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87);background:#fff}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:#000}.mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:solid 1px rgba(0,0,0,.12)}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle+.mat-button-toggle{border-left:none;border-right:none;border-top:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-checked{background-color:#e0e0e0;color:rgba(0,0,0,.54)}.mat-button-toggle-checked.mat-button-toggle-appearance-standard{color:rgba(0,0,0,.87)}.mat-button-toggle-disabled{color:rgba(0,0,0,.26);background-color:#eee}.mat-button-toggle-disabled.mat-button-toggle-appearance-standard{background:#fff}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:#bdbdbd}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border:solid 1px rgba(0,0,0,.12)}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{line-height:48px}.mat-card{background:#fff;color:rgba(0,0,0,.87)}.mat-card:not([class*=mat-elevation-z]){box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12)}.mat-card.mat-card-flat:not([class*=mat-elevation-z]){box-shadow:0px 0px 0px 0px rgba(0, 0, 0, 0.2),0px 0px 0px 0px rgba(0, 0, 0, 0.14),0px 0px 0px 0px rgba(0, 0, 0, 0.12)}.mat-card-subtitle{color:rgba(0,0,0,.54)}.mat-checkbox-frame{border-color:rgba(0,0,0,.54)}.mat-checkbox-checkmark{fill:#fafafa}.mat-checkbox-checkmark-path{stroke:#fafafa !important}.mat-checkbox-mixedmark{background-color:#fafafa}.mat-checkbox-indeterminate.mat-primary .mat-checkbox-background,.mat-checkbox-checked.mat-primary .mat-checkbox-background{background-color:#673ab7}.mat-checkbox-indeterminate.mat-accent .mat-checkbox-background,.mat-checkbox-checked.mat-accent .mat-checkbox-background{background-color:#ffd740}.mat-checkbox-indeterminate.mat-warn .mat-checkbox-background,.mat-checkbox-checked.mat-warn .mat-checkbox-background{background-color:#f44336}.mat-checkbox-disabled.mat-checkbox-checked .mat-checkbox-background,.mat-checkbox-disabled.mat-checkbox-indeterminate .mat-checkbox-background{background-color:#b0b0b0}.mat-checkbox-disabled:not(.mat-checkbox-checked) .mat-checkbox-frame{border-color:#b0b0b0}.mat-checkbox-disabled .mat-checkbox-label{color:rgba(0,0,0,.54)}.mat-checkbox .mat-ripple-element{background-color:#000}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-primary .mat-ripple-element{background:#673ab7}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-accent .mat-ripple-element{background:#ffd740}.mat-checkbox-checked:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element,.mat-checkbox:active:not(.mat-checkbox-disabled).mat-warn .mat-ripple-element{background:#f44336}.mat-chip.mat-standard-chip{background-color:#e0e0e0;color:rgba(0,0,0,.87)}.mat-chip.mat-standard-chip .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}.mat-chip.mat-standard-chip:not(.mat-chip-disabled):active{box-shadow:0px 3px 3px -2px rgba(0, 0, 0, 0.2),0px 3px 4px 0px rgba(0, 0, 0, 0.14),0px 1px 8px 0px rgba(0, 0, 0, 0.12)}.mat-chip.mat-standard-chip:not(.mat-chip-disabled) .mat-chip-remove:hover{opacity:.54}.mat-chip.mat-standard-chip.mat-chip-disabled{opacity:.4}.mat-chip.mat-standard-chip::after{background:#000}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary{background-color:#673ab7;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-primary .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn{background-color:#f44336;color:#fff}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-chip-remove{color:#fff;opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-warn .mat-ripple-element{background-color:rgba(255,255,255,.1)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent{background-color:#ffd740;color:rgba(0,0,0,.87)}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-chip-remove{color:rgba(0,0,0,.87);opacity:.4}.mat-chip.mat-standard-chip.mat-chip-selected.mat-accent .mat-ripple-element{background-color:rgba(0,0,0,.1)}.mat-table{background:#fff}.mat-table thead,.mat-table tbody,.mat-table tfoot,mat-header-row,mat-row,mat-footer-row,[mat-header-row],[mat-row],[mat-footer-row],.mat-table-sticky{background:inherit}mat-row,mat-header-row,mat-footer-row,th.mat-header-cell,td.mat-cell,td.mat-footer-cell{border-bottom-color:rgba(0,0,0,.12)}.mat-header-cell{color:rgba(0,0,0,.54)}.mat-cell,.mat-footer-cell{color:rgba(0,0,0,.87)}.mat-calendar-arrow{fill:rgba(0,0,0,.54)}.mat-datepicker-toggle,.mat-datepicker-content .mat-calendar-next-button,.mat-datepicker-content .mat-calendar-previous-button{color:rgba(0,0,0,.54)}.mat-calendar-table-header-divider::after{background:rgba(0,0,0,.12)}.mat-calendar-table-header,.mat-calendar-body-label{color:rgba(0,0,0,.54)}.mat-calendar-body-cell-content,.mat-date-range-input-separator{color:rgba(0,0,0,.87);border-color:transparent}.mat-calendar-body-disabled>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){color:rgba(0,0,0,.38)}.mat-form-field-disabled .mat-date-range-input-separator{color:rgba(0,0,0,.38)}.mat-calendar-body-in-preview{color:rgba(0,0,0,.24)}.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.38)}.mat-calendar-body-disabled>.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){border-color:rgba(0,0,0,.18)}.mat-calendar-body-in-range::before{background:rgba(103,58,183,.2)}.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-calendar-body-comparison-bridge-start::before,[dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(103, 58, 183, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-comparison-bridge-end::before,[dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(103, 58, 183, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-calendar-body-selected{background-color:#673ab7;color:#fff}.mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(103,58,183,.4)}.mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(103,58,183,.3)}@media(hover: hover){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(103,58,183,.3)}}.mat-datepicker-content{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12);background-color:#fff;color:rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before{background:rgba(255,215,64,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(255, 215, 64, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(255, 215, 64, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-accent .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-accent .mat-calendar-body-selected{background-color:#ffd740;color:rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(255,215,64,.4)}.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px rgba(0,0,0,.87)}.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(255,215,64,.3)}@media(hover: hover){.mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(255,215,64,.3)}}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before{background:rgba(244,67,54,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before{background:rgba(249,171,0,.2)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before{background:linear-gradient(to right, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before{background:linear-gradient(to left, rgba(244, 67, 54, 0.2) 50%, rgba(249, 171, 0, 0.2) 50%)}.mat-datepicker-content.mat-warn .mat-calendar-body-in-range>.mat-calendar-body-comparison-identical,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after{background:#a8dab5}.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range>.mat-calendar-body-selected{background:#46a35e}.mat-datepicker-content.mat-warn .mat-calendar-body-selected{background-color:#f44336;color:#fff}.mat-datepicker-content.mat-warn .mat-calendar-body-disabled>.mat-calendar-body-selected{background-color:rgba(244,67,54,.4)}.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected{box-shadow:inset 0 0 0 1px #fff}.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}@media(hover: hover){.mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical){background-color:rgba(244,67,54,.3)}}.mat-datepicker-content-touch{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12)}.mat-datepicker-toggle-active{color:#673ab7}.mat-datepicker-toggle-active.mat-accent{color:#ffd740}.mat-datepicker-toggle-active.mat-warn{color:#f44336}.mat-date-range-input-inner[disabled]{color:rgba(0,0,0,.38)}.mat-dialog-container{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0, 0, 0, 0.12);background:#fff;color:rgba(0,0,0,.87)}.mat-divider{border-top-color:rgba(0,0,0,.12)}.mat-divider-vertical{border-right-color:rgba(0,0,0,.12)}.mat-expansion-panel{background:#fff;color:rgba(0,0,0,.87)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-action-row{border-top-color:rgba(0,0,0,.12)}.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]),.mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]),.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]){background:rgba(0,0,0,.04)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover{background:#fff}}.mat-expansion-panel-header-title{color:rgba(0,0,0,.87)}.mat-expansion-panel-header-description,.mat-expansion-indicator::after{color:rgba(0,0,0,.54)}.mat-expansion-panel-header[aria-disabled=true]{color:rgba(0,0,0,.26)}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header{height:48px}.mat-expansion-panel-header.mat-expanded{height:64px}.mat-form-field-label{color:rgba(0,0,0,.6)}.mat-hint{color:rgba(0,0,0,.6)}.mat-form-field.mat-focused .mat-form-field-label{color:#673ab7}.mat-form-field.mat-focused .mat-form-field-label.mat-accent{color:#ffd740}.mat-form-field.mat-focused .mat-form-field-label.mat-warn{color:#f44336}.mat-focused .mat-form-field-required-marker{color:#ffd740}.mat-form-field-ripple{background-color:rgba(0,0,0,.87)}.mat-form-field.mat-focused .mat-form-field-ripple{background-color:#673ab7}.mat-form-field.mat-focused .mat-form-field-ripple.mat-accent{background-color:#ffd740}.mat-form-field.mat-focused .mat-form-field-ripple.mat-warn{background-color:#f44336}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) .mat-form-field-infix::after{color:#673ab7}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-accent .mat-form-field-infix::after{color:#ffd740}.mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid).mat-warn .mat-form-field-infix::after{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-label.mat-accent,.mat-form-field.mat-form-field-invalid .mat-form-field-label .mat-form-field-required-marker{color:#f44336}.mat-form-field.mat-form-field-invalid .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple.mat-accent{background-color:#f44336}.mat-error{color:#f44336}.mat-form-field-appearance-legacy .mat-form-field-label{color:rgba(0,0,0,.54)}.mat-form-field-appearance-legacy .mat-hint{color:rgba(0,0,0,.54)}.mat-form-field-appearance-legacy .mat-form-field-underline{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-standard .mat-form-field-underline{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-image:linear-gradient(to right, rgba(0, 0, 0, 0.42) 0%, rgba(0, 0, 0, 0.42) 33%, transparent 0%);background-size:4px 100%;background-repeat:repeat-x}.mat-form-field-appearance-fill .mat-form-field-flex{background-color:rgba(0,0,0,.04)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{background-color:rgba(0,0,0,.02)}.mat-form-field-appearance-fill .mat-form-field-underline::before{background-color:rgba(0,0,0,.42)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}.mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-underline::before{background-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline{color:rgba(0,0,0,.12)}.mat-form-field-appearance-outline .mat-form-field-outline-thick{color:rgba(0,0,0,.87)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{color:#673ab7}.mat-form-field-appearance-outline.mat-focused.mat-accent .mat-form-field-outline-thick{color:#ffd740}.mat-form-field-appearance-outline.mat-focused.mat-warn .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-invalid.mat-form-field-invalid .mat-form-field-outline-thick{color:#f44336}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-label{color:rgba(0,0,0,.38)}.mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:rgba(0,0,0,.06)}.mat-icon.mat-primary{color:#673ab7}.mat-icon.mat-accent{color:#ffd740}.mat-icon.mat-warn{color:#f44336}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{color:rgba(0,0,0,.54)}.mat-input-element:disabled,.mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after{color:rgba(0,0,0,.38)}.mat-input-element{caret-color:#673ab7}.mat-input-element::placeholder{color:rgba(0,0,0,.42)}.mat-input-element::-moz-placeholder{color:rgba(0,0,0,.42)}.mat-input-element::-webkit-input-placeholder{color:rgba(0,0,0,.42)}.mat-input-element:-ms-input-placeholder{color:rgba(0,0,0,.42)}.mat-form-field.mat-accent .mat-input-element{caret-color:#ffd740}.mat-form-field.mat-warn .mat-input-element,.mat-form-field-invalid .mat-input-element{caret-color:#f44336}.mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after{color:#f44336}.mat-list-base .mat-list-item{color:rgba(0,0,0,.87)}.mat-list-base .mat-list-option{color:rgba(0,0,0,.87)}.mat-list-base .mat-subheader{color:rgba(0,0,0,.54)}.mat-list-item-disabled{background-color:#eee}.mat-list-option:hover,.mat-list-option:focus,.mat-nav-list .mat-list-item:hover,.mat-nav-list .mat-list-item:focus,.mat-action-list .mat-list-item:hover,.mat-action-list .mat-list-item:focus{background:rgba(0,0,0,.04)}.mat-list-single-selected-option,.mat-list-single-selected-option:hover,.mat-list-single-selected-option:focus{background:rgba(0,0,0,.12)}.mat-menu-panel{background:#fff}.mat-menu-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-menu-item{background:transparent;color:rgba(0,0,0,.87)}.mat-menu-item[disabled],.mat-menu-item[disabled] .mat-menu-submenu-icon,.mat-menu-item[disabled] .mat-icon-no-color{color:rgba(0,0,0,.38)}.mat-menu-item .mat-icon-no-color,.mat-menu-submenu-icon{color:rgba(0,0,0,.54)}.mat-menu-item:hover:not([disabled]),.mat-menu-item.cdk-program-focused:not([disabled]),.mat-menu-item.cdk-keyboard-focused:not([disabled]),.mat-menu-item-highlighted:not([disabled]){background:rgba(0,0,0,.04)}.mat-paginator{background:#fff}.mat-paginator,.mat-paginator-page-size .mat-select-trigger{color:rgba(0,0,0,.54)}.mat-paginator-decrement,.mat-paginator-increment{border-top:2px solid rgba(0,0,0,.54);border-right:2px solid rgba(0,0,0,.54)}.mat-paginator-first,.mat-paginator-last{border-top:2px solid rgba(0,0,0,.54)}.mat-icon-button[disabled] .mat-paginator-decrement,.mat-icon-button[disabled] .mat-paginator-increment,.mat-icon-button[disabled] .mat-paginator-first,.mat-icon-button[disabled] .mat-paginator-last{border-color:rgba(0,0,0,.38)}.mat-paginator-container{min-height:56px}.mat-progress-bar-background{fill:#d5cae9}.mat-progress-bar-buffer{background-color:#d5cae9}.mat-progress-bar-fill::after{background-color:#673ab7}.mat-progress-bar.mat-accent .mat-progress-bar-background{fill:#fbf1cc}.mat-progress-bar.mat-accent .mat-progress-bar-buffer{background-color:#fbf1cc}.mat-progress-bar.mat-accent .mat-progress-bar-fill::after{background-color:#ffd740}.mat-progress-bar.mat-warn .mat-progress-bar-background{fill:#f9ccc9}.mat-progress-bar.mat-warn .mat-progress-bar-buffer{background-color:#f9ccc9}.mat-progress-bar.mat-warn .mat-progress-bar-fill::after{background-color:#f44336}.mat-progress-spinner circle,.mat-spinner circle{stroke:#673ab7}.mat-progress-spinner.mat-accent circle,.mat-spinner.mat-accent circle{stroke:#ffd740}.mat-progress-spinner.mat-warn circle,.mat-spinner.mat-warn circle{stroke:#f44336}.mat-radio-outer-circle{border-color:rgba(0,0,0,.54)}.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-outer-circle{border-color:#673ab7}.mat-radio-button.mat-primary .mat-radio-inner-circle,.mat-radio-button.mat-primary .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-primary.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-primary:active .mat-radio-persistent-ripple{background-color:#673ab7}.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-outer-circle{border-color:#ffd740}.mat-radio-button.mat-accent .mat-radio-inner-circle,.mat-radio-button.mat-accent .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-accent.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-accent:active .mat-radio-persistent-ripple{background-color:#ffd740}.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-outer-circle{border-color:#f44336}.mat-radio-button.mat-warn .mat-radio-inner-circle,.mat-radio-button.mat-warn .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),.mat-radio-button.mat-warn.mat-radio-checked .mat-radio-persistent-ripple,.mat-radio-button.mat-warn:active .mat-radio-persistent-ripple{background-color:#f44336}.mat-radio-button.mat-radio-disabled.mat-radio-checked .mat-radio-outer-circle,.mat-radio-button.mat-radio-disabled .mat-radio-outer-circle{border-color:rgba(0,0,0,.38)}.mat-radio-button.mat-radio-disabled .mat-radio-ripple .mat-ripple-element,.mat-radio-button.mat-radio-disabled .mat-radio-inner-circle{background-color:rgba(0,0,0,.38)}.mat-radio-button.mat-radio-disabled .mat-radio-label-content{color:rgba(0,0,0,.38)}.mat-radio-button .mat-ripple-element{background-color:#000}.mat-select-value{color:rgba(0,0,0,.87)}.mat-select-placeholder{color:rgba(0,0,0,.42)}.mat-select-disabled .mat-select-value{color:rgba(0,0,0,.38)}.mat-select-arrow{color:rgba(0,0,0,.54)}.mat-select-panel{background:#fff}.mat-select-panel:not([class*=mat-elevation-z]){box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0, 0, 0, 0.12)}.mat-select-panel .mat-option.mat-selected:not(.mat-option-multiple){background:rgba(0,0,0,.12)}.mat-form-field.mat-focused.mat-primary .mat-select-arrow{color:#673ab7}.mat-form-field.mat-focused.mat-accent .mat-select-arrow{color:#ffd740}.mat-form-field.mat-focused.mat-warn .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-invalid .mat-select-arrow{color:#f44336}.mat-form-field .mat-select.mat-select-disabled .mat-select-arrow{color:rgba(0,0,0,.38)}.mat-drawer-container{background-color:#fafafa;color:rgba(0,0,0,.87)}.mat-drawer{background-color:#fff;color:rgba(0,0,0,.87)}.mat-drawer.mat-drawer-push{background-color:#fff}.mat-drawer:not(.mat-drawer-side){box-shadow:0px 8px 10px -5px rgba(0, 0, 0, 0.2),0px 16px 24px 2px rgba(0, 0, 0, 0.14),0px 6px 30px 5px rgba(0, 0, 0, 0.12)}.mat-drawer-side{border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-side.mat-drawer-end{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side{border-left:solid 1px rgba(0,0,0,.12);border-right:none}[dir=rtl] .mat-drawer-side.mat-drawer-end{border-left:none;border-right:solid 1px rgba(0,0,0,.12)}.mat-drawer-backdrop.mat-drawer-shown{background-color:rgba(0,0,0,.6)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background-color:#ffd740}.mat-slide-toggle.mat-checked .mat-slide-toggle-bar{background-color:rgba(255,215,64,.54)}.mat-slide-toggle.mat-checked .mat-ripple-element{background-color:#ffd740}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-thumb{background-color:#673ab7}.mat-slide-toggle.mat-primary.mat-checked .mat-slide-toggle-bar{background-color:rgba(103,58,183,.54)}.mat-slide-toggle.mat-primary.mat-checked .mat-ripple-element{background-color:#673ab7}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-thumb{background-color:#f44336}.mat-slide-toggle.mat-warn.mat-checked .mat-slide-toggle-bar{background-color:rgba(244,67,54,.54)}.mat-slide-toggle.mat-warn.mat-checked .mat-ripple-element{background-color:#f44336}.mat-slide-toggle:not(.mat-checked) .mat-ripple-element{background-color:#000}.mat-slide-toggle-thumb{box-shadow:0px 2px 1px -1px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14),0px 1px 3px 0px rgba(0, 0, 0, 0.12);background-color:#fafafa}.mat-slide-toggle-bar{background-color:rgba(0,0,0,.38)}.mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-primary .mat-slider-track-fill,.mat-primary .mat-slider-thumb,.mat-primary .mat-slider-thumb-label{background-color:#673ab7}.mat-primary .mat-slider-thumb-label-text{color:#fff}.mat-primary .mat-slider-focus-ring{background-color:rgba(103,58,183,.2)}.mat-accent .mat-slider-track-fill,.mat-accent .mat-slider-thumb,.mat-accent .mat-slider-thumb-label{background-color:#ffd740}.mat-accent .mat-slider-thumb-label-text{color:rgba(0,0,0,.87)}.mat-accent .mat-slider-focus-ring{background-color:rgba(255,215,64,.2)}.mat-warn .mat-slider-track-fill,.mat-warn .mat-slider-thumb,.mat-warn .mat-slider-thumb-label{background-color:#f44336}.mat-warn .mat-slider-thumb-label-text{color:#fff}.mat-warn .mat-slider-focus-ring{background-color:rgba(244,67,54,.2)}.mat-slider:hover .mat-slider-track-background,.mat-slider.cdk-focused .mat-slider-track-background{background-color:rgba(0,0,0,.38)}.mat-slider-disabled .mat-slider-track-background,.mat-slider-disabled .mat-slider-track-fill,.mat-slider-disabled .mat-slider-thumb{background-color:rgba(0,0,0,.26)}.mat-slider-disabled:hover .mat-slider-track-background{background-color:rgba(0,0,0,.26)}.mat-slider-min-value .mat-slider-focus-ring{background-color:rgba(0,0,0,.12)}.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing .mat-slider-thumb-label{background-color:rgba(0,0,0,.87)}.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb,.mat-slider-min-value.mat-slider-thumb-label-showing.cdk-focused .mat-slider-thumb-label{background-color:rgba(0,0,0,.26)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing) .mat-slider-thumb{border-color:rgba(0,0,0,.26);background-color:transparent}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused .mat-slider-thumb{border-color:rgba(0,0,0,.38)}.mat-slider-min-value:not(.mat-slider-thumb-label-showing):hover.mat-slider-disabled .mat-slider-thumb,.mat-slider-min-value:not(.mat-slider-thumb-label-showing).cdk-focused.mat-slider-disabled .mat-slider-thumb{border-color:rgba(0,0,0,.26)}.mat-slider-has-ticks .mat-slider-wrapper::after{border-color:rgba(0,0,0,.7)}.mat-slider-horizontal .mat-slider-ticks{background-image:repeating-linear-gradient(to right, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent);background-image:-moz-repeating-linear-gradient(0.0001deg, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent)}.mat-slider-vertical .mat-slider-ticks{background-image:repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7) 2px, transparent 0, transparent)}.mat-step-header.cdk-keyboard-focused,.mat-step-header.cdk-program-focused,.mat-step-header:hover:not([aria-disabled]),.mat-step-header:hover[aria-disabled=false]{background-color:rgba(0,0,0,.04)}.mat-step-header:hover[aria-disabled=true]{cursor:default}@media(hover: none){.mat-step-header:hover{background:none}}.mat-step-header .mat-step-label,.mat-step-header .mat-step-optional{color:rgba(0,0,0,.54)}.mat-step-header .mat-step-icon{background-color:rgba(0,0,0,.54);color:#fff}.mat-step-header .mat-step-icon-selected,.mat-step-header .mat-step-icon-state-done,.mat-step-header .mat-step-icon-state-edit{background-color:#673ab7;color:#fff}.mat-step-header.mat-accent .mat-step-icon{color:rgba(0,0,0,.87)}.mat-step-header.mat-accent .mat-step-icon-selected,.mat-step-header.mat-accent .mat-step-icon-state-done,.mat-step-header.mat-accent .mat-step-icon-state-edit{background-color:#ffd740;color:rgba(0,0,0,.87)}.mat-step-header.mat-warn .mat-step-icon{color:#fff}.mat-step-header.mat-warn .mat-step-icon-selected,.mat-step-header.mat-warn .mat-step-icon-state-done,.mat-step-header.mat-warn .mat-step-icon-state-edit{background-color:#f44336;color:#fff}.mat-step-header .mat-step-icon-state-error{background-color:transparent;color:#f44336}.mat-step-header .mat-step-label.mat-step-label-active{color:rgba(0,0,0,.87)}.mat-step-header .mat-step-label.mat-step-label-error{color:#f44336}.mat-stepper-horizontal,.mat-stepper-vertical{background-color:#fff}.mat-stepper-vertical-line::before{border-left-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header::before,.mat-horizontal-stepper-header::after,.mat-stepper-horizontal-line{border-top-color:rgba(0,0,0,.12)}.mat-horizontal-stepper-header{height:72px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,.mat-vertical-stepper-header{padding:24px 24px}.mat-stepper-vertical-line::before{top:-16px;bottom:-16px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before{top:36px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{top:36px}.mat-sort-header-arrow{color:#757575}.mat-tab-nav-bar,.mat-tab-header{border-bottom:1px solid rgba(0,0,0,.12)}.mat-tab-group-inverted-header .mat-tab-nav-bar,.mat-tab-group-inverted-header .mat-tab-header{border-top:1px solid rgba(0,0,0,.12);border-bottom:none}.mat-tab-label,.mat-tab-link{color:rgba(0,0,0,.87)}.mat-tab-label.mat-tab-disabled,.mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.38)}.mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.87)}.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:rgba(0,0,0,.38)}.mat-tab-group[class*=mat-background-]>.mat-tab-header,.mat-tab-nav-bar[class*=mat-background-]{border-bottom:none;border-top:none}.mat-tab-group.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(209,196,233,.3)}.mat-tab-group.mat-primary .mat-ink-bar,.mat-tab-nav-bar.mat-primary .mat-ink-bar{background-color:#673ab7}.mat-tab-group.mat-primary.mat-background-primary>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-primary.mat-background-primary>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-primary.mat-background-primary>.mat-tab-link-container .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,229,127,.3)}.mat-tab-group.mat-accent .mat-ink-bar,.mat-tab-nav-bar.mat-accent .mat-ink-bar{background-color:#ffd740}.mat-tab-group.mat-accent.mat-background-accent>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-accent.mat-background-accent>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-accent.mat-background-accent>.mat-tab-link-container .mat-ink-bar{background-color:rgba(0,0,0,.87)}.mat-tab-group.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-warn .mat-ink-bar,.mat-tab-nav-bar.mat-warn .mat-ink-bar{background-color:#f44336}.mat-tab-group.mat-warn.mat-background-warn>.mat-tab-header .mat-ink-bar,.mat-tab-group.mat-warn.mat-background-warn>.mat-tab-link-container .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn>.mat-tab-header .mat-ink-bar,.mat-tab-nav-bar.mat-warn.mat-background-warn>.mat-tab-link-container .mat-ink-bar{background-color:#fff}.mat-tab-group.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-primary .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(209,196,233,.3)}.mat-tab-group.mat-background-primary>.mat-tab-header,.mat-tab-group.mat-background-primary>.mat-tab-link-container,.mat-tab-group.mat-background-primary>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination{background-color:#673ab7}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-tab-link{color:#fff}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-primary>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-group.mat-background-primary>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-focus-indicator::before{border-color:#fff}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-primary>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#fff;opacity:.4}.mat-tab-group.mat-background-primary>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-primary>.mat-tab-link-container .mat-ripple-element,.mat-tab-group.mat-background-primary>.mat-tab-header-pagination .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-primary>.mat-tab-header-pagination .mat-ripple-element{background-color:#fff;opacity:.12}.mat-tab-group.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-accent .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,229,127,.3)}.mat-tab-group.mat-background-accent>.mat-tab-header,.mat-tab-group.mat-background-accent>.mat-tab-link-container,.mat-tab-group.mat-background-accent>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination{background-color:#ffd740}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-tab-link{color:rgba(0,0,0,.87)}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(0,0,0,.4)}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-accent>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-group.mat-background-accent>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-focus-indicator::before{border-color:rgba(0,0,0,.87)}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-accent>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#000;opacity:.4}.mat-tab-group.mat-background-accent>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-accent>.mat-tab-link-container .mat-ripple-element,.mat-tab-group.mat-background-accent>.mat-tab-header-pagination .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-accent>.mat-tab-header-pagination .mat-ripple-element{background-color:#000;opacity:.12}.mat-tab-group.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-group.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-label.cdk-program-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-keyboard-focused:not(.mat-tab-disabled),.mat-tab-nav-bar.mat-background-warn .mat-tab-link.cdk-program-focused:not(.mat-tab-disabled){background-color:rgba(255,205,210,.3)}.mat-tab-group.mat-background-warn>.mat-tab-header,.mat-tab-group.mat-background-warn>.mat-tab-link-container,.mat-tab-group.mat-background-warn>.mat-tab-header-pagination,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination{background-color:#f44336}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-label,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-tab-link,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-label,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-tab-link{color:#fff}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-tab-link.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-label.mat-tab-disabled,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-tab-link.mat-tab-disabled{color:rgba(255,255,255,.4)}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-warn>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-group.mat-background-warn>.mat-tab-header .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-focus-indicator::before,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-focus-indicator::before{border-color:#fff}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-group.mat-background-warn>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron{border-color:#fff;opacity:.4}.mat-tab-group.mat-background-warn>.mat-tab-header .mat-ripple-element,.mat-tab-group.mat-background-warn>.mat-tab-link-container .mat-ripple-element,.mat-tab-group.mat-background-warn>.mat-tab-header-pagination .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn>.mat-tab-link-container .mat-ripple-element,.mat-tab-nav-bar.mat-background-warn>.mat-tab-header-pagination .mat-ripple-element{background-color:#fff;opacity:.12}.mat-toolbar{background:#f5f5f5;color:rgba(0,0,0,.87)}.mat-toolbar.mat-primary{background:#673ab7;color:#fff}.mat-toolbar.mat-accent{background:#ffd740;color:rgba(0,0,0,.87)}.mat-toolbar.mat-warn{background:#f44336;color:#fff}.mat-toolbar .mat-form-field-underline,.mat-toolbar .mat-form-field-ripple,.mat-toolbar .mat-focused .mat-form-field-ripple{background-color:currentColor}.mat-toolbar .mat-form-field-label,.mat-toolbar .mat-focused .mat-form-field-label,.mat-toolbar .mat-select-value,.mat-toolbar .mat-select-arrow,.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow{color:inherit}.mat-toolbar .mat-input-element{caret-color:currentColor}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}.mat-tooltip{background:rgba(97,97,97,.9)}.mat-tree{background:#fff}.mat-tree-node,.mat-nested-tree-node{color:rgba(0,0,0,.87)}.mat-tree-node{min-height:48px}.mat-snack-bar-container{color:rgba(255,255,255,.7);background:#323232;box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2),0px 6px 10px 0px rgba(0, 0, 0, 0.14),0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-simple-snackbar-action{color:#ffd740}\n","@use '../../base' as *;\n\n%display-container {\n    display: inherit;\n    flex-flow: inherit;\n    position: relative;\n    width: 100%;\n    overflow: hidden;\n    flex-shrink: 0;\n}\n\n%display-container--inactive {\n    width: 100%;\n}\n\n@mixin component {\n    @include b(igx-display-container) {\n        @extend %display-container !optional;\n\n        @include m(inactive) {\n            @extend %display-container--inactive !optional;\n        }\n    }\n}\n","// CSS Reset, comment out if not required or using a different module\r\n// @import '~minireset.css/minireset';\r\n\r\n@import '~igniteui-angular/lib/core/styles/themes/index';\r\n@include igx-core();\r\n@include igx-theme(\r\n    $default-palette,\r\n    $exclude: (\r\n        'bullet-graph',\r\n        'linear-gauge',\r\n        'radial-gauge',\r\n        'category-chart',\r\n        'data-chart',\r\n        'doughnut-chart',\r\n        'financial-chart',\r\n        'funnel-chart',\r\n        'geo-map',\r\n        'pie-chart',\r\n        'shape-chart',\r\n        'sparkline'));\r\n\r\n/* autoprefixer grid: on */\r\nhtml,\r\nbody {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n\r\n.sample-wrapper {\r\n    // width: inherit;\r\n    width: 100%;\r\n    position: relative;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    background: transparent;\r\n}\r\n\r\n.sample-content {\r\n    display: flex;\r\n    flex-grow: 1;\r\n    flex-flow: row wrap;\r\n    justify-content: flex-start;\r\n    padding: 0;\r\n    -webkit-animation: fade-in .3s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n    -moz-animation: fade-in .3s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n    animation: fade-in .3s cubic-bezier(0.390, 0.575, 0.565, 1.000) both;\r\n}\r\n\r\n.sample-column {\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    flex: 1 0 25%;\r\n    align-content: flex-start;\r\n    margin: 16px;\r\n    min-width: 280px;\r\n}\r\n\r\n.sample-title {\r\n    color: #0375be;\r\n    margin-bottom: 12px;\r\n    margin-top: 12px;\r\n}\r\n\r\n.sample-title .light {\r\n    font-weight: 400;\r\n}\r\n\r\n.sample-description {\r\n    font-size: 14px;\r\n    font-weight: normal;\r\n    color: #717171;\r\n}\r\n\r\n@-webkit-keyframes color-change-2x {\r\n    0% {\r\n        background: #fdf8f0;\r\n    }\r\n    100% {\r\n        background: #f6e7ec;\r\n    }\r\n}\r\n\r\n@keyframes color-change-2x {\r\n    0% {\r\n        background: #fdf8f0;\r\n    }\r\n    100% {\r\n        background: #f6e7ec;\r\n    }\r\n}\r\n\r\n@-webkit-keyframes fade-in {\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n@keyframes fade-in {\r\n    0% {\r\n        opacity: 0;\r\n    }\r\n    100% {\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n.headerAlignStyle {\r\n    text-align: right !important;\r\n}\r\n\r\n// $green-palette: igx-palette($primary: #09f,$secondary: #72da67, $surface: #333);\r\n\r\n// .fin-dark-theme {\r\n//     @include igx-dark-theme($green-palette);\r\n//      background: #333;\r\n\r\n//      ::-moz-placeholder {\r\n//          opacity: 1;\r\n//      }\r\n//  }\r\n\r\n// .dark-theme {\r\n//     background: #333;\r\n//     color: #fff;\r\n//     @include igx-dark-theme($green-palette);\r\n// }\r\n\r\n// added to fix SB layout:\r\n.nav-bar {\r\n    background: #09f;\r\n    padding: 0.5rem;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.nav-bar > div {\r\n    // background: #c300ff;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.nav-bar > nav {\r\n    // background: #ff0000;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.igx-navbar__left {\r\n    // background: rgb(255, 136, 0);\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.igx-navbar__left > igx-icon {\r\n    align-self: center;\r\n    padding-right: 1rem;\r\n}\r\n\r\n.igx-navbar__left > h1 {\r\n    margin-block-start: 0.3em;\r\n    margin-block-end: 0.3em;\r\n}\r\n\r\n.nav-sidebar {\r\n    // max-height: 500px;\r\n    // height: 500px;\r\n    overflow-y: auto;\r\n    overflow-x: hidden;\r\n}\r\n\r\n\r\n// .sample {\r\n//     box-sizing: border-box;\r\n// }\r\n\r\n.nav-bar-title {\r\n    font-weight: 600;\r\n    font-size: 1.25rem;\r\n    letter-spacing: 0.009375rem;\r\n    text-transform: none;\r\n    line-height: 1.5rem;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.igx-input-group__bundle {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.nav-search-box {\r\n    padding: 1rem;\r\n    max-width: 260px;\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n\r\n.nav-search-box > * {\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding-left: 1rem;\r\n}\r\n\nhtml, body { height: 100%; }\nbody { margin: 0; font-family: Roboto, \"Helvetica Neue\", sans-serif; }\n","@use '../../base' as *;\n\n%drag {\n    touch-action: none;\n}\n\n%drag--select-disabled {\n    user-select: none;\n}\n\n%drag-handle {\n    user-select: none;\n}\n\n@mixin component {\n    @include b(igx-drag) {\n        @extend %drag !optional;\n\n        @include e(handle) {\n            @extend %drag-handle !optional;\n        }\n\n        @include m(select-disabled) {\n            @extend %drag--select-disabled !optional;\n        }\n    }\n}\n","@use '../../base' as *;\n\n/// @group themes\n/// @access private\n$_right: if-ltr(right, left);\n\n%vhelper-display {\n    display: block;\n    overflow: auto;\n    z-index: 10001;\n}\n\n%vhelper--vertical {\n    position: absolute;\n    top: 0;\n    #{$_right}: 0;\n}\n\n%vhelper--horizontal {\n    width: 100%;\n}\n\n%vhelper-content--vertical {\n    width: 1px;\n}\n\n%vhelper-content--horizontal {\n    height: 1px;\n}\n\n@mixin component {\n    @include b(igx-vhelper) {\n        @include m(vertical) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--vertical !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--vertical !optional;\n            }\n        }\n\n        @include m(horizontal) {\n            @extend %vhelper-display !optional;\n            @extend %vhelper--horizontal !optional;\n\n            @include e(placeholder-content) {\n                @extend %vhelper-content--horizontal !optional;\n            }\n        }\n    }\n}\n","////\n/// @group themes\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n@use 'utilities' as *;\n\n// Common components\n@use '../components/_common/igx-control';\n@use '../components/_common/igx-display-container' as display-container;\n@use '../components/_common/igx-drag' as drag;\n@use '../components/_common/igx-vhelper' as vhelper;\n@use '../components/ripple/ripple-component' as ripple;\n\n// Other components\n@use '../components/action-strip/action-strip-component' as action-strip;\n@use '../components/avatar/avatar-component' as avatar;\n@use '../components/badge/badge-component' as badge;\n@use '../components/bottom-nav/bottom-nav-component' as bottom-nav;\n@use '../components/button/button-component' as button;\n@use '../components/divider/divider-component' as divider;\n@use '../components/button-group/button-group-component' as button-group;\n@use '../components/banner/banner-component' as banner;\n@use '../components/calendar/calendar-component' as calendar;\n@use '../components/card/card-component' as card;\n@use '../components/carousel/carousel-component' as carousel;\n@use '../components/checkbox/checkbox-component' as checkbox;\n@use '../components/chip/chip-component' as chip;\n@use '../components/column-actions/column-actions-component' as column-actions;\n@use '../components/combo/combo-component' as combo;\n@use '../components/charts/category-chart-component' as category-chart;\n@use '../components/charts/data-chart-component' as data-chart;\n@use '../components/charts/doughnut-chart-component' as doughnut-chart;\n@use '../components/charts/financial-chart-component' as financial-chart;\n@use '../components/charts/funnel-chart-component' as funnel-chart;\n@use '../components/charts/gauge-component' as gauge;\n@use '../components/charts/geo-map-component' as geo-map;\n@use '../components/charts/graph-component' as graph;\n@use '../components/charts/pie-chart-component' as pie-chart;\n@use '../components/charts/shape-chart-component' as shape-chart;\n@use '../components/charts/sparkline-component' as sparkline;\n@use '../components/date-picker/date-picker-component' as date-picker;\n@use '../components/date-range-picker/date-range-picker-component' as date-range-picker;\n@use '../components/dialog/dialog-component' as dialog;\n@use '../components/dock-manager/dock-manager-component' as dock-manager;\n@use '../components/drop-down/drop-down-component' as drop-down;\n@use '../components/expansion-panel/expansion-panel-component' as expansion-panel;\n@use '../components/grid/grid-component' as grid;\n@use '../components/grid-summary/grid-summary-component' as grid-summary;\n@use '../components/grid-toolbar/grid-toolbar-component' as grid-toolbar;\n@use '../components/highlight/highlight-component' as highlight;\n@use '../components/icon/icon-component' as icon;\n@use '../components/input/input-group-component' as input-group;\n@use '../components/list/list-component' as list;\n@use '../components/navbar/navbar-component' as navbar;\n@use '../components/navdrawer/navdrawer-component' as navdrawer;\n@use '../components/overlay/overlay-component' as overlay;\n@use '../components/paginator/paginator-component' as paginator;\n@use '../components/progress/progress-component' as progress;\n@use '../components/radio/radio-component' as radio;\n@use '../components/scrollbar/scrollbar-component' as scrollbar;\n@use '../components/slider/slider-component' as slider;\n@use '../components/splitter/splitter-component' as splitter;\n@use '../components/snackbar/snackbar-component' as snackbar;\n@use '../components/switch/switch-component' as switch;\n@use '../components/stepper/stepper-component' as stepper;\n@use '../components/tabs/tabs-component' as tabs;\n@use '../components/toast/toast-component' as toast;\n@use '../components/tooltip/tooltip-component' as tooltip;\n@use '../components/time-picker/time-picker-component' as time-picker;\n@use '../components/tree/tree-component' as tree;\n@use '../components/watermark/watermark-component' as watermark;\n@use '../print';\n\n/// @param {boolean} $print-layout [true] - Activates the printing styles of the components.\n/// @param {string} $direction [ltr] - Sets the layout direction. Can be 'ltr' or 'rtl'.\n/// @param {boolean} $enhanced-accesibility [false] - Switches component colors and other properties to more accessible values.\n/// @requires {mixin} igx-vhelper\n/// @requires {mixin} igx-print-layout\n@mixin igx-core(\n    $print-layout: true,\n    $direction: $direction,\n    $enhanced-accessibility: $enhanced-accessibility\n) {\n    @if $direction != ltr and $direction != rtl {\n        $direction: ltr !global;\n    } @else {\n        $direction: $direction !global;\n    }\n\n    $enhanced-accessibility: $enhanced-accessibility !global;\n\n    // Angular hack for binding to [hidden] property\n    // not working\n    [hidden] {\n        display: none !important;\n    }\n\n    // Common styles\n    @include vhelper.component();\n    @include display-container.component();\n    @include drag.component();\n\n    // Includes the base for each theme.\n    [class^='igx-'] {\n        &,\n        *,\n        *::before,\n        *::after {\n            box-sizing: border-box;\n        }\n    }\n\n    // Component styles\n    @include ripple.component();\n    @include action-strip.component();\n    @include avatar.component();\n    @include badge.component();\n    @include banner.component();\n    @include bottom-nav.component();\n    @include button.component();\n    @include button-group.component();\n    @include divider.component();\n    @include calendar.component();\n    @include card.component();\n    @include carousel.component();\n    @include checkbox.component();\n    @include chip.component();\n    @include column-actions.component();\n    @include combo.component();\n    @include category-chart.component();\n    @include data-chart.component();\n    @include doughnut-chart.component();\n    @include financial-chart.component();\n    @include funnel-chart.component();\n    @include gauge.component();\n    @include geo-map.component();\n    @include graph.component();\n    @include pie-chart.component();\n    @include shape-chart.component();\n    @include sparkline.component();\n    @include date-picker.component();\n    @include date-range-picker.component();\n    @include dialog.component();\n    @include dock-manager.component();\n    @include drop-down.component();\n    @include expansion-panel.component();\n    @include grid.component();\n    @include grid-summary.component();\n    @include grid-toolbar.component();\n    @include highlight.component();\n    @include icon.component();\n    @include input-group.component();\n    @include list.component();\n    @include navbar.component();\n    @include navdrawer.component();\n    @include overlay.component();\n    @include paginator.component();\n    @include progress.component();\n    @include radio.component();\n    @include scrollbar.component();\n    @include slider.component();\n    @include splitter.component();\n    @include snackbar.component();\n    @include switch.component();\n    @include stepper.component();\n    @include tabs.component();\n    @include toast.component();\n    @include tooltip.component();\n    @include time-picker.component();\n    @include tree.component();\n    @include watermark.component();\n\n    @if $print-layout == true {\n        @include print.layout();\n    }\n}\n\n","@use 'sass:string';\n@use 'sass:meta';\n@use 'sass:list';\n@use 'sass:selector';\n\n////\n/// @group bem\n/// @author <a href=\"https://github.com/runningskull\" target=\"_blank\">Juan Patten</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type String - The Element separator used. Default '__'.\n$bem--sep-elem: if(meta.variable-exists(bem--sep-elem), $bem--sep-elem, '__');\n/// @type String - The Modifier separator used. Default '--'.\n$bem--sep-mod: if(meta.variable-exists(bem--sep-mod), $bem--sep-mod, '--');\n/// @type String - The Modifier Value separator used. Default '-'.\n$bem--sep-mod-val: if(meta.variable-exists(bem--sep-mod-val), $bem--sep-mod-val, '-');\n\n/// Converts a passed selector value into plain string.\n/// @access private\n/// @param {String} $s - The selector to be converted.\n/// @returns {String}\n@function bem--selector-to-string($s) {\n    @if $s == null {\n        @return '';\n    }\n\n    @return string.slice(meta.inspect($s), 2, -3);\n}\n\n/// Prepends a dot to the passed BEM selector.\n/// @access private\n/// @param {String} $x - The BEM selector to prepend a dot to.\n/// @returns {String}\n/// @example scss - Returns\n///   .#{$x}\n@function bem--with-dot($x) {\n    $first: string.slice($x, 0, 1);\n    @return if($first == '.', $x, string.insert($x, '.', -100));\n}\n\n/// Converts a key-value map into a modifier string.\n/// @access private\n/// @param {List} $m - The modifier list to get converted.\n/// @returns {String}\n@function bem--mod-str($m) {\n    @if meta.type-of($m) == 'map' {\n        $mm: list.nth($m, 1);\n        @return list.nth($mm, 1) + $bem--sep-mod-val + list.nth($mm, 2);\n    } @else {\n        @return $m;\n    }\n}\n\n/// Prefixes the block name to an element selector string,\n/// with the element separator string used as a divider.\n/// @access private\n/// @param {String} $b - The block name.\n/// @param {String} $e - The element name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block__element\n@function bem--elem-str($b, $e) {\n    @return $b + $bem--sep-elem + $e;\n}\n\n/// Returns a block selector string affixed by the modifier selector,\n/// followed by the element selector string.\n/// @access private\n/// @param {String} $block - The block name.\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $mod - The modifier name.\n/// @returns {String}\n/// @example scss - Returns\n///   .block--modifier .block__element\n@function bem--bem-str($block, $elem, $mod) {\n    $elem: if($elem, ' ' + $elem, '');\n    @return ($block + $bem--sep-mod + bem--mod-str($mod) + $elem);\n}\n\n/// Checks if the element separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the element separator name is not part of the passed string.\n@function bem--contains-elem($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-elem);\n}\n\n/// Checks if the modifier separator string is part of the passed string.\n/// @access private\n/// @param {String} $x - The string to check.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the modifier separator string is not part of the passed string.\n@function bem--contains-mod($x) {\n    // if you set the separators to common strings, this could fail\n    @return string.index($x, $bem--sep-mod);\n}\n\n/// Checks if the passed selector string contains a colon.\n/// @access private\n/// @param {String} $x - The string to check for colons.\n/// @returns {number|null} Will return the index of the occurance,\n/// or null if the string does not contain any colons.\n@function bem--contains-pseudo($x) {\n    @return string.index($x, ':');\n}\n\n/// Returns the BEM block-name that generated `$x`. Does not include leading \".\".\n/// @access private\n/// @param {String} $x - The block name.\n@function bem--extract-block($x) {\n    @if bem--contains-mod($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-mod)-1);\n    } @else if bem--contains-elem($x) {\n        @return string.slice($x, 1, string.index($x, $bem--sep-elem)-1);\n    } @else if bem--contains-pseudo($x) {\n        @return string.slice($x, 1, string.index($x, ':')-1);\n    }\n    @return $x;\n}\n\n/// Returns the first selector of a nested selector string.\n/// @access private\n/// @param {String} $x - The selector to search for.\n/// @returns {String}\n@function bem--extract-first-selector($x) {\n    $eow: string.index($x, ' ') or -1;\n    @return string.slice($x, 1, $eow);\n}\n\n/// Generates a full BEM selector.\n/// @access public\n/// @param {String} $block - Required. A string block name.\n/// @param {String|List} $elem - Optional. A sub-element name. If `$mod` is not present, it is\n/// joined with $block. If $mod is present, it is nested under `$block--$mod`.\n/// @param {String|Map} $mod - Optional. A block modifier.\n/// @example scss Include a block\n///   @include bem-selector(block); // outputs .block\n/// @example scss Include a block and an element\n///   @include bem-selector(block, $e:elem); // outputs .block__elem\n/// @example scss Include block, element, and element modifier\n///   @include bem-selector(block, $e:(elem,emod); // outputs .block__elem-emod\n/// @example scss Include block and block modifier\n///   @include bem-selector(block, $m:mod) // outputs .block--mod\n/// @example scss Include block and modifier value\n///   @include bem-selector(block, $m:(mod:val)); // outputs .block--mod-val\n/// @example scss Include block modifier followed by block sub-element\n///   @include bem-selector(block, $m:mod, $e:elem); // outputs .block--mod .block__elem\n@function bem-selector($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    $block: bem--with-dot($block);\n    $elem: $e or $elem;\n    // Return early if possible\n    $mods: $m or $mod or $mods;\n    @if not ($elem or $mods) {\n        @return $block;\n    }\n    @if $elem {\n        // User passed an element-specific modifier\n        @if (meta.type-of($elem) == list) and list.nth($elem, 2) {\n            // For now we don't support multiple elem-mods at once\n            @if meta.type-of(list.nth($elem, 2)) == 'list' {\n                @error 'Only one element-modifier allowed.';\n            }\n            $elem: string.slice(bem-selector(list.nth($elem, 1), $m: list.nth($elem, 2)), 2);\n        }\n        $elem: bem--elem-str($block, $elem);\n    }\n    @if not $mods {\n        @return bem--with-dot($elem);\n    }\n    @if meta.type-of($mods) != 'list' {\n        $mods: ($mods, );\n    }\n    $bemcls: '';\n    @for $i from 1 to list.length($mods) {\n        $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, $i)) + ', ';\n    }\n    $bemcls: $bemcls + bem--bem-str($block, $elem, list.nth($mods, -1));\n    @return $bemcls;\n}\n\n/// Simply unrolls into a class-selector. The main purpose of using this mixin\n/// is to clearly denote the start of a BEM block.\n/// @access public\n/// @param {String} $block - The block name.\n@mixin bem-block($block) {\n    @at-root {\n        #{bem-selector($block)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a proper BEM element selector, depending on the context.\n/// Inside just a block, yields a root-level `.block__elem`.\n/// Inside a mod or pseudo-selector, yields a nested `.block--mod .block__elem`.\n/// If $mod is included, it is appended to the block selector. Multiple\n/// $mods are not supported.\n/// @access public\n/// @param {String} $elem - The sub-element name.\n/// @param {String} $m - The modifier name.\n/// @param {String} $mod - An alias of `$m`.\n@mixin bem-elem($elem, $m: null, $mod: null, $mods: null) {\n    $this: bem--selector-to-string(&);\n    $block: bem--extract-block($this);\n    $first: bem--extract-first-selector($this);\n    $nested: bem--contains-pseudo($this) or bem--contains-mod($this);\n\n    $mod: $m or $mod;\n    $mx: ();\n\n    @if $this == '' {\n        @error 'Detected an Element that is not inside a Block: #{$elem}';\n    }\n\n    @if bem--contains-elem($this) {\n        @error 'Detected a multi-level nested Element (#{$this} #{$elem})! Bemerald doesn\\'t support nested ' + 'elements because they do not have BEM nature (www.getbem.com/faq/#css-nested-elements). ' + 'If you must do it, use a hardcoded selector like &__subsubelem ';\n    }\n\n    @if $mods != null and meta.type-of($mods) == 'list' {\n        @each $i in $mods {\n            $mx: list.append($mx, #{bem-selector($block, $e: ($elem, $i))})\n        }\n    }\n\n    @if not($nested) {\n        // Normal case, no pseudo-selector present or mod, so no nesting.\n        // .block__elem { ... }\n        @at-root {\n            @if $mods == null {\n                #{bem-selector($block, $e: ($elem, $mod))} {\n                    @content;\n                }\n            } @else {\n                #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    } @else {\n        // pseudo-element or mod present, so we have nesting.\n        // .block:active .block__elem { ... }\n        // .block--mod .block__elem { ... }\n        @at-root {\n            $selector: $first + ' ' + bem-selector($block, $e: ($elem, $mod));\n\n            @if $mods == null {\n                #{$selector} {\n                    @content;\n                }\n            } @else {\n                #{$first} #{selector.append($mx...)} {\n                    @content;\n                }\n            }\n        }\n    }\n}\n\n/// Unrolls into a BEM block-modifier selector.\n/// This mixin does not generate element-modifiers, the bem-elem mixin instead.\n/// Nesting bem-mod inside a pseudo-selector is not supported, because what\n/// that should mean isn't clear.\n/// @access public\n/// @param {String} $mod - The modifier name.\n@mixin bem-mod($mod) {\n    $skip: false;\n    $this: bem--selector-to-string(&);\n    @if $this == '' {\n        @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n    }\n    @if (bem--contains-elem($this)) {\n        @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n    }\n    @if (bem--contains-pseudo($this)) {\n        @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n    }\n    @at-root {\n        #{bem-selector($this, $m: $mod)} {\n            @content;\n        }\n    }\n}\n\n/// Unrolls into a block--modifier.[block--modifier...] .block__el\n/// This mixin is useful when we want to apply classes to a block,\n/// or block element when two or more modifiers are applied in tandem\n/// @access public\n/// @param {List} $mods - A list of modifiers\n@mixin bem-mods($mods...) {\n    $this: bem--selector-to-string(&);\n    $mod-classes: ();\n    @each $mod in $mods {\n        @if $this == '' {\n            @error 'Detected a Modifier that is not inside a Block: ' + $mod;\n        }\n        @if (bem--contains-elem($this)) {\n            @error 'Nesting a Modifier inside an Element (#{$this} #{$mod}) ' + 'is not supported. Instead, use bem-elem(myelem, elem-mod) syntax.';\n        }\n        @if (bem--contains-pseudo($this)) {\n            @error 'Nesting a Modifier inside a pseudo-selector is not supported: #{$this} #{$mod}';\n        }\n        $mod-classes: list.append($mod-classes, #{bem-selector($block: $this, $m: $mod)})\n    }\n    @at-root {\n        #{selector.append($mod-classes...)} {\n            @content;\n        }\n    }\n}\n\n/// @alias bem-selector\n/// @see bem-selector\n@mixin bem($block, $e: null, $elem: null, $m: null, $mod: null, $mods: null) {\n    #{bem-selector($block, $e: $e, $elem: $elem, $m: $m, $mod: $mod, $mods: $mods)} {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin block($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin elem($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin mod($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mods($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n\n/// @alias bem-block\n/// @see bem-block\n@mixin b($block) {\n    @include bem-block($block) {\n        @content;\n    }\n}\n\n/// @alias bem-elem\n/// @see bem-elem\n@mixin e($elem, $m: null, $mod: null, $mods: null) {\n    @include bem-elem($elem, $m: $m, $mod: $mod, $mods: $mods) {\n        @content;\n    }\n}\n\n/// @alias bem-mod\n/// @see bem-mod\n@mixin m($mod) {\n    @include bem-mod($mod) {\n        @content;\n    }\n}\n\n/// @alias bem-mods\n/// @see bem-mods\n@mixin mx($mods...) {\n    @include bem-mods($mods...) {\n        @content;\n    }\n}\n","@use '../../base' as *;\n@use 'sass:string';\n\n//// Icon\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\n\n@mixin component {\n    @include b(igx-icon) {\n        $this: bem--selector-to-string(&);\n        @include register-component(\n            $name: string.slice($this, 2, -1),\n            $deps: ()\n        );\n\n        @extend %igx-icon-display !optional;\n\n        @include m(inactive) {\n            @extend %igx-icon--inactive !optional;\n        }\n\n        @include m(success) {\n            @extend %igx-icon--success !optional;\n        }\n\n        @include m(error) {\n            @extend %igx-icon--error !optional;\n        }\n    }\n\n    @include b(igx-svg-container) {\n        visibility: hidden;\n        width: 0;\n        height: 0;\n        font-size: 0;\n        overflow: hidden;\n    }\n}\n","@use '../../base' as *;\n@use 'sass:string';\n\n////\n/// @group components\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @requires {mixin} bem-block\n/// @requires {mixin} bem-elem\n/// @requires {mixin} bem-mod\n////\n\n@mixin component {\n    @include b(igx-radio) {\n        $this: bem--selector-to-string(&);\n        @include register-component(\n            $name: string.slice($this, 2, -1),\n            $deps: ()\n        );\n\n        @extend %radio-display !optional;\n\n        &:hover {\n            @include e(composite) {\n                @extend %igx-radio-hover__composite !optional;\n            }\n\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-unchecked !optional;\n            }\n        }\n\n        &:active {\n            @include e(composite) {\n                @extend %igx-radio-hover__composite !optional;\n            }\n\n            @include e(ripple) {\n                @extend %radio-ripple--hover !optional;\n                @extend %radio-ripple--hover-unchecked !optional;\n                @extend %radio-ripple--pressed !optional;\n            }\n        }\n\n        @include e(input) {\n            @extend %radio-input !optional;\n        }\n\n        @include e(composite) {\n            @extend %radio-composite !optional;\n        }\n\n        @include e(label) {\n            @extend %radio-label !optional;\n            @extend %radio-label--after !optional;\n        }\n\n        @include e(label, $m: before) {\n            @extend %radio-label !optional;\n            @extend %radio-label--before !optional;\n        }\n\n        @include e(ripple) {\n            @extend %radio-ripple !optional;\n        }\n\n        @include m(focused) {\n            @extend %igx-radio--focused !optional;\n\n            @include e(ripple) {\n                @extend %radio-ripple--focused !optional;\n            }\n        }\n\n        @include mx(focused, checked) {\n            @extend  %igx-radio--focused-checked !optional;\n        }\n\n        @include m(checked) {\n            @include e(composite) {\n                @extend %radio-composite--x !optional;\n            }\n\n            &:hover {\n                @include e(composite) {\n                    @extend %igx-radio--checked-active__composite !optional;\n                }\n\n                @include e(ripple) {\n                    @extend %radio-ripple--hover !optional;\n                    @extend %radio-ripple--hover-checked !optional;\n                }\n            }\n\n            &:active {\n                @include e(composite) {\n                    @extend %igx-radio--checked-active__composite !optional;\n                }\n\n                @include e(ripple) {\n                    @extend %radio-ripple--hover !optional;\n                    @extend %radio-ripple--hover-checked !optional;\n                    @extend %radio-ripple--pressed !optional;\n                }\n            }\n        }\n\n        @include m(disabled) {\n            @extend %radio-display--disabled !optional;\n\n            @include e(composite) {\n                @extend %radio-composite--disabled !optional;\n            }\n        }\n\n        @include mx(focused, checked) {\n            @include e(ripple) {\n                @extend %radio-ripple--focused !optional;\n                @extend %radio-ripple--focused-checked !optional;\n            }\n        }\n\n        @include mx(checked, disabled) {\n            @include e(composite) {\n                @extend %radio-composite--x--disabled !optional;\n            }\n        }\n    }\n\n    @include b(igx-radio-group) {\n        display: block;\n\n        @include m(vertical) {\n            display: flex;\n            flex-flow: column;\n        }\n    }\n}\n","@use 'grid-print';\n\n/// Defines printing styles for all components in the library.\n/// @group print\n/// @requires {mixin} igx-grid-print\n@mixin layout {\n    @media print {\n        html,\n        body,\n        app-root {\n            min-height: 100vh;\n            min-width: 100vw;\n            margin: 0;\n            display: block;\n        }\n\n        * {\n            background: transparent !important;\n            background-color: transparent !important;\n            color: #000 !important;\n            box-shadow: none !important;\n            text-shadow: none !important;\n            -webkit-print-color-adjust: exact;\n        }\n\n        a[href^='http']::after {\n            content: '[' attr(href) ']';\n            color: blue;\n        }\n\n        .igx-no-print,\n        igx-nav-drawer {\n            display: none !important;\n        }\n\n        @include grid-print.layout();\n\n        .igx-bottom-nav__menu,\n        .igx-button-group,\n        .igx-ripple,\n        igx-slider,\n        igx-snackbar,\n        igx-input-group,\n        igx-checkbox,\n        igx-radio,\n        .igx-tooltip--desktop,\n        igx-toast,\n        igx-navbar,\n        igx-virtual-helper,\n        [igx-button],\n        igx-switch,\n        .igx-grid__tbody-scrollbar,\n        .igx-grid__cbx-selection,\n        igx-circular-bar,\n        igx-linear-bar,\n        .igx-carousel__indicators,\n        .igx-carousel__arrow--prev,\n        .igx-carousel__arrow--next {\n            display: none !important;\n        }\n    }\n}\n","$border-color: #ddd;\n$border-pin-color: #999;\n$print-background: #f9f9f9;\n$print-background: #eee;\n\n/// Defines printing styles for the igx-grid component.\n/// @group print\n@mixin layout {\n    igx-grid {\n        igx-input-group,\n        igx-checkbox,\n        igx-radio,\n        .igx-grid-grouparea,\n        .igx-tooltip--desktop,\n        .igx-nav-drawer__aside,\n        .igx-overlay,\n        .igx-ripple,\n        igx-slider,\n        igx-snackbar,\n        igx-switch,\n        igx-time-picker,\n        igx-toast,\n        igx-tabs,\n        igx-navbar,\n        [igx-button],\n        .igx-grid__tbody-scrollbar,\n        igx-virtual-helper,\n        igx-paginator,\n        .igx-grid-toolbar__actions,\n        .igx-grid__cbx-selection,\n        .igx-drop-area__icon,\n        .igx-drop-area__text,\n        .igx-grid__header-indentation,\n        .igx-grid__grouping-indicator,\n        .igx-grid__row-indentation,\n        .igx-grid__hierarchical-expander {\n            display: none !important;\n        }\n\n        .igx-grid-grouparea,\n        igx-paginator,\n        .igx-grid-toolbar__actions,\n        .igx-drop-area__icon,\n        .igx-drop-area__text,\n        .igx-grid__header-indentation,\n        .igx-grid__grouping-indicator,\n        .igx-grid__row-indentation,\n        .igx-grid__hierarchical-expander,\n        .igx-expansion-panel__header-icon--end,\n        .igx-expansion-panel__header-icon--start,\n        .igx-grid__summaries-patch {\n            display: none !important;\n        }\n\n\n        .igx-grid__grouping-indicator {\n            igx-icon {\n                display: none !important;\n            }\n        }\n\n        .igx-grid__filtering-cell {\n            height: 0 !important;\n            border-top: none !important;\n            border-right: none !important;\n        }\n\n        .igx-grid__tfoot,\n        .igx-grid-grouparea,\n        .igx-grid__filtering-cell,\n        .igx-grid__group-row,\n        .igx-grid-thead__title,\n        igx-grid-toolbar,\n        igx-grid-row,\n        .igx-grid-thead {\n            border-color: $border-color !important;\n        }\n\n        igx-grid {\n            igx-icon {\n                color: #666 !important;\n            }\n        }\n\n        .igx-grid-thead,\n        igx-grid-toolbar,\n        .igx-grid__group-row,\n        .igx-grid__tfoot {\n            background: $print-background !important;\n        }\n\n        .igx-grid-th__title,\n        .igx-grid__td-text {\n            white-space: unset !important;\n            text-overflow: initial !important;\n            overflow: visible !important;\n        }\n\n        .igx-grid-thead__title {\n            igx-icon {\n                display: none;\n            }\n        }\n\n        .igx-grid__summaries-patch {\n            display: none;\n        }\n\n        .igx-grid-th--pinned-last {\n            border-right: 2px solid red !important;\n        }\n    }\n}\n","@use '../variables' as *;\n@use 'functions' as *;\n@use 'sass:color';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n////\n/// @group Utilities\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @access private\n@mixin icon-w-margin($margin, $left) {\n    > * {\n        margin-#{$left}: $margin;\n\n        &:first-child {\n            margin-#{$left}: 0;\n        }\n    }\n}\n\n/// Hides the element from the DOM.\n/// @access public\n/// @example scss - Sample usage\n///   input[type=\"checkbox\"] {\n///     @include hide-default();\n///   }\n@mixin hide-default {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    border: none;\n    clip: rect(0, 0, 0, 0);\n    outline: 0;\n    pointer-events: none;\n    overflow: hidden;\n    appearance: none;\n}\n\n/// Generates a linear gradient.\n/// @access public\n/// @param {string} $direction - The direction of the gradient.\n/// @param {List} $color-stops - A list of color stops to be used in the gradient.\n/// @example scss - Sample usage\n///   .bozo {\n///     background: @include linear-gradient(\"to right\", red, orange);\n///   }\n/// @outputs The CSS representation of linear-gradient.\n@mixin linear-gradient($direction, $color-stops...) {\n    // Direction has been omitted and happens to be a color-stop\n    @if is-direction($direction) == false {\n        $color-stops: $direction, $color-stops;\n        $direction: 180deg;\n    }\n    background: linear-gradient($direction, $color-stops);\n}\n\n/// Registers a keyframes animation in the global keyframes registry list.\n/// @access public\n/// @group animations\n/// @param {String} $name - The name of the keyframes animation.\n@mixin keyframes($name) {\n    $keyframe: map.get($keyframes, $name);\n\n    @if $keyframe == null {\n        $keyframe: string.unique-id();\n        $keyframes: map.merge($keyframes, (#{$name}: $keyframe)) !global;\n\n        @at-root {\n            @keyframes #{$name} {\n                @content;\n            }\n        }\n    }\n}\n\n/// Registers a component to the list of known components.\n/// @access private\n/// @param {String} $name - The component name to register.\n@mixin register-component($name, $deps: ()) {\n    $component: map.get($components, $name);\n\n    @if $component == null {\n        $components: map.merge($components, (\n            #{$name}: (\n                usedBy: ()\n            ),\n        )) !global;\n    }\n\n    @each $dep in $deps {\n        @include register-component($dep);\n\n        @if map.has-key($components, $dep) {\n            $component: map.get($components, $dep);\n            $usedBy: map.get($component, 'usedBy');\n\n            $components: map.merge($components, (\n                #{$dep}: map.merge($component, (\n                    usedBy: list.append($usedBy, $name, $separator: comma)\n                ))\n            )) !global;\n        }\n    }\n}\n\n/// Animates an element.\n/// @access public\n/// @group animations\n/// @param {List} $animate - The list of animation properties.\n/// @example scss - Animating an element\n///  @include fade-in(); // include the 'fade-in' keyframes animation mixin\n///\n///  .bozo {\n///     @include animation('fade-in' .3s ease-out);\n///  }\n@mixin animation($animate...) {\n    $max: list.length($animate);\n    $animations: '';\n    @for $i from 1 through $max {\n        $animations: #{$animations + list.nth($animate, $i)};\n        @if $i < $max {\n            $animations: #{$animations + ', '};\n        }\n    }\n    animation: $animations;\n}\n\n/// Applies text-overflow ellipsis to e text element.\n/// This won't work on display flex elements.\n/// @access public\n@mixin ellipsis() {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n}\n\n/// Generates a CSS class name for a color from a\n/// given name, variant, prefix and suffix\n/// @access private\n/// @param {string} $name - The main class name.\n/// @param {string} $variant - An additional string to be attached to the main class name.\n/// @param {string} $prefix - A prefix to be attached to the name and variant string.\n/// @param {string} $prefix - A suffix to be attached to the name and variant string.\n@mixin gen-color-class($name, $variant, $prefix, $suffix) {\n    $prefix: if($prefix, '#{$prefix}-', '');\n    $suffix: if($suffix, '-#{$suffix}', '');\n\n    .#{$prefix}#{$name}-#{$variant}#{$suffix} {\n        @content;\n    }\n}\n\n// stylelint-disable max-nesting-depth\n/// Generates CSS class names for all colors from\n/// for a given property and color palette, with\n/// optional prefix and suffix attached to the class name.\n/// @access private\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix - A prefix to be attached to the class name.\n/// @param {string} $suffix - A suffix to be attached to the class name.\n/// @param {Map} $palette [$default-palette] - The igx palette to use to generate css class names for.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .my-primary-500-bg { ... };\n///   @include gen-color-classes(\n///     $prop: 'background-color',\n///     $prefix: 'my',\n///     $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-class\n@mixin gen-color-classes($prop, $prefix, $suffix, $palette: $default-palette) {\n    @each $name, $color in $palette {\n        @each $variant, $value in $color {\n            @if meta.type-of($value) != 'map' {\n                @include gen-color-class($name, $variant, $prefix, $suffix) {\n                    #{$prop}: igx-color($color: $name, $variant: $variant);\n                }\n            }\n        }\n    }\n}\n\n/// Generates CSS variables for a given palette.\n/// @access public\n/// @param {Map} $palette [null] - The igx palette to use to generate CSS variables for.\n/// @param {bool} $contrast [true] - Specify if contrast colors should be included.\n///\n/// @example scss Generate css variables for the `$default-palette`.\n///    @include igx-palette-vars($default-palette);\n///\n@mixin igx-palette-vars($palette, $contrast: true) {\n    $scope: if(is-root(), ':root', '&');\n    $_meta: map.get($palette, '_meta');\n    $theme: if($_meta, map.get($_meta, 'variant'), null);\n    $gray: if($_meta, map.get($_meta, 'grays'), #fff);\n\n    #{$scope} {\n        @each $name, $color in $palette {\n            @each $variant, $value in $color {\n                $_valid-base: meta.type-of(map.get($color, 500)) == 'color' and $theme;\n                $_valid-variant: not(string.index(#{$variant}, 'contrast')) and not(string.index(#{$variant}, 'variant')) and $theme;\n\n                @if $_valid-base and $variant == 500 {\n                    --igx-#{$name}-h: #{math.round(color.hue($value))};\n                    --igx-#{$name}-s: #{math.round(color.saturation($value))};\n                    --igx-#{$name}-l: #{math.round(color.lightness($value))};\n\n                    @if $name != 'grays' {\n                        --igx-#{$name}-a: #{color.alpha($value)};\n                    } @else {\n                        --igx-#{$name}-a: 1;\n                    }\n                }\n\n                @if $_valid-base and $_valid-variant {\n                    --igx-#{$name}-#{$variant}: #{gen-hsla-color($name, $variant, $theme, $gray)};\n                } @else if $name != '_meta' {\n                    --igx-#{$name}-#{$variant}: #{$value};\n                }\n            }\n        }\n    }\n}\n// stylelint-enable max-nesting-depth\n\n/// Generates CSS variables for a given elevations map.\n/// @access public\n/// @param {Map} $elevations - The igx elevations map to use to generate CSS variables for.\n///\n/// @example scss Generate CSS variables for elevations.\n///    $elevations: igx-elevations(red, green, blue); // umbra, penumbra, ambient\n///    @include igx-elevation-vars($elevations);\n///\n@mixin igx-elevation-vars($elevations) {\n    $scope: if(is-root(), ':root', '&');\n\n    #{$scope} {\n        @each $level, $shadow in $elevations {\n            --igx-elevation-#{$level}: #{$shadow};\n        }\n    }\n}\n\n/// Generates CSS class names for all colors from\n/// for a given property and color palette, with\n/// optional prefix and suffix attached to the class name.\n/// @access public\n/// @param {string} $prop - The CSS property to assign the palette color to.\n/// @param {string} $prefix [igx] - A prefix to be attached to the class name.\n/// @param {string} $suffix [null] - A suffix to be attached to the class name.\n/// @param {Map} $palette [$default-palette] - The igx palette to use to generate css class names for.\n/// @example scss Generate background classes with colors from the palette.\n///   // Will generate class names like\n///   // .igx-primary-500-bg { ... };\n///   @include igx-color-classes(\n///     $prop: 'background-color',\n///     $suffix: 'bg'\n///   );\n/// @requires {mixin} gen-color-classes\n@mixin igx-color-classes($prop, $suffix: null, $prefix: 'igx', $palette: $default-palette) {\n    @include gen-color-classes($prop, $prefix, $suffix, $palette);\n}\n\n/// Parses a map of key value pairs\n/// from component themes to css variables.\n/// @access private\n/// @param {map} $theme - The component theme to be used to generate css variables.\n/// @example scss Convert theme colors to css variables.\n///   $my-theme: igx-avatar-theme($icon-color: red);\n///   :root {\n///     @include css-vars-from-theme($my-theme);\n///   }\n@mixin css-vars-from-theme($theme, $prefix: null) {\n    $name: map.get($theme, 'name');\n    $ignore: ('name', 'palette', 'variant', 'selector');\n    $webc-prefix: 'igc';\n    $webc: list.nth(str-split($name, '-'), 1) == $webc-prefix;\n    $themes: map.get($theme, 'themes');\n\n    @if not($prefix) and $webc {\n        $prefix: $webc-prefix;\n    }\n\n    @if not($name) or string.length($name) == 0 {\n        @error 'Theme should have a non-null or empty name property. Example: my-theme: (name: my-theme)';\n    }\n\n    @if $themes and meta.type-of($themes) == 'map' {\n        @each $theme in $themes {\n            @include igx-css-vars(list.nth($theme, 2));\n        }\n    }\n\n    @each $key, $value in $theme {\n        $elevation: string.index($key, 'elevation');\n\n        @if not(list.index($ignore, $key) or $elevation) and meta.type-of($value) != 'map' {\n            @if $prefix {\n                --#{$prefix}-#{$key}: var(--#{$name}-#{$key}, #{$value});\n            } @else {\n                --#{$key}: var(--#{$name}-#{$key}, #{$value});\n            }\n        }\n    }\n}\n\n/// Add theme colors to a scope.\n/// @access public\n/// @param {map} $theme - The component theme to be used\n/// @requires {mixin} css-vars-from-theme\n@mixin igx-css-vars($theme, $scope: null, $prefix: null) {\n    $s: map.get($theme, 'selector');\n    $n: map.get($theme, 'name');\n    $name: if($scope, $scope, $s or $n);\n\n    @if is-root() {\n        #{$name} {\n            @include css-vars-from-theme($theme, $prefix);\n        }\n    } @else {\n        &,\n        #{$name} {\n            @include css-vars-from-theme($theme, $prefix);\n        }\n    }\n}\n\n/// Scopes CSS rules to a predefined top-level parent selector.\n/// Respects specificity and selector scopes.\n/// @access private\n/// @param {String} $parent - The selector to be used as top level scope.\n/// @example scss Apply mixin style rules only when '.igx-typography' selector is present.\n///    @mixin igx-card-typography {\n///       @include igx-scope('.igx-typography') {\n///         // style rules...\n///       }\n///    }\n///\n///    // Later\n///    .my-selector {\n///      @include igx-card-typography();\n///    }\n///\n///    // Generated CSS\n///    // .igx-typography .my-selector {\n///    //    ...styles rules as output by igx-card-typography mixin\n///    // }\n@mixin igx-scope($parent) {\n    @each $selector in & {\n        $len: list.length($selector);\n        @if $len == null {\n            $parent: $parent;\n        } @else {\n            @for $i from 1 through $len {\n                $parent: list.append($parent, list.nth($selector, $i));\n            }\n        }\n\n        @at-root #{$parent} {\n            @content;\n        }\n    }\n}\n\n/// Compiles the passed content to CSS only if\n/// the global $direction variable is set to 'ltr'.\n/// @example scss Include content only if $direction is set to ltr (default)\n///    @include if-ltr {\n///      margin-right: 8px;\n///    }\n@mixin if-ltr {\n    $dir: if(meta.global-variable-exists('direction'), $direction, 'ltr');\n\n    @if $dir != 'rtl' {\n        @content;\n    }\n}\n\n/// Compiles the passed content to CSS only if\n/// the global $direction variable is set to 'rtl'.\n/// @example scss Include content only if $direction is set to rtl\n///    @include if-rtl {\n///      margin-left: 8px;\n///    }\n@mixin if-rtl {\n    $dir: if(meta.global-variable-exists('direction'), $direction, 'ltr');\n\n    @if $dir == 'rtl' {\n        @content;\n    }\n}\n\n/// Truncates text at a specific number of lines\n/// @param {number|string} $lines - The number of lines to show\n/// @param {Boolean} $inline - Sets whether an element displays inline-box or box\n/// @param {Boolean} $vertical - Sets whether an element lays out its contents horizontally or vertically\n/// @example scss Truncates text after the fourth line\n///    @include line-clamp(4, true, true);\n@mixin line-clamp($lines, $inline, $vertical) {\n    display: if($inline, -webkit-inline-box, -webkit-box);\n    -webkit-line-clamp: if($lines, $lines, initial);\n    -webkit-box-orient: if($vertical, vertical, initial);\n    overflow: hidden;\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $color [null] - The color of the ripple.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the color\n///   $my-ripple-theme: igx-ripple-theme($color: yellow);\n///   // Pass the theme to the igx-ripple component mixin\n///   igx-ripple($my-ripple-theme);\n@function igx-ripple-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-ripple';\n    $selector: '[igxRipple]';\n\n    $ripple-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $ripple-schema: map.get($schema, $name);\n    } @else {\n        $ripple-schema: $schema;\n    }\n\n    $theme: apply-palette($ripple-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        color: $color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n@mixin igx-ripple($theme) {\n    @include igx-css-vars($theme);\n\n    %igx-ripple-display {\n        display: block;\n        position: absolute;\n        border-radius: 50%;\n        background: var-get($theme, 'color');\n        pointer-events: none;\n        transform-origin: center;\n        transform: translate3d(0, 0, 0) scale(0);\n        will-change: opacity, transform;\n        opacity: .5;\n        margin: 0 !important;\n        border: none !important;\n    }\n\n    %igx-ripple-wrapper {\n        overflow: hidden;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The text color used of the avatar.\n/// @param {Color} $background [null] - The background color used of the avatar.\n/// @param {number} $border-radius [null] - The border-radius used of the avatar.\n/// @param {number} $size [null] - The size of the avatar.\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background and icon colors in icon avatars\n///   $my-avatar-theme: igx-avatar-theme($icon-background: black, $icon-color: white);\n///   // Pass the theme to the igx-avatar component mixin\n///   @include igx-avatar($my-avatar-theme);\n@function igx-avatar-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $background: null,\n    $color: null,\n    $border-radius: null,\n    $size: null,\n) {\n    $name: 'igx-avatar';\n    $avatar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $avatar-schema: map.get($schema, $name);\n    } @else {\n        $avatar-schema: $schema;\n    }\n\n    $theme: apply-palette($avatar-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($avatar-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($color) and $background {\n        $color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        color: $color,\n        border-radius: $border-radius,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-avatar($theme) {\n    @include igx-css-vars($theme);\n\n    $size: map.get($theme, 'size');\n    $small-size: rem(40px);\n    $medium-size: rem(64px);\n    $large-size: rem(88px);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $box-shadow: map.get((\n        material: null,\n        fluent: null,\n        bootstrap: 0 0 0 rem(3px) var-get($theme, 'background'),\n        indigo-design: null,\n    ), $variant);\n\n    %igx-avatar-outline {\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        opacity: .5;\n    }\n\n    %igx-avatar-display {\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        user-select: none;\n        color: var-get($theme, 'color');\n        background: var-get($theme, 'background');\n        vertical-align: middle;\n        border-radius: var-get($theme, 'border-radius');\n        outline-style: none;\n        flex-shrink: 0;\n\n        &::after {\n            box-shadow: none;\n            @if $bootstrap-theme {\n                @extend %igx-avatar-outline;\n            }\n            transition: box-shadow .15s $ease-in-out-quad;\n        }\n\n        &:focus::after {\n            box-shadow: $box-shadow;\n        }\n    }\n\n    %igx-avatar-image {\n        width: 100%;\n        height: 100%;\n        border-radius: inherit;\n        background-color: var-get($theme, 'background');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n    }\n\n    %igx-avatar--rounded {\n        --igx-avatar-border-radius: 44px;\n        border-radius: var-get(('border-radius': 44px), 'border-radius');\n    }\n\n    %igx-avatar--initials {\n        text-transform: uppercase;\n    }\n\n    %igx-avatar-initials--small {\n        --size: #{$size or $small-size};\n        font-size: calc(#{var-get(('size': $size or $small-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $small-size), 'size')} / 2);\n    }\n\n    %igx-avatar-initials--medium {\n        --size: #{$size or $medium-size};\n        font-size: calc(#{var-get(('size': $size or $medium-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $medium-size), 'size')} / 2);\n    }\n\n    %igx-avatar-initials--large {\n        --size: #{$size or $large-size};\n        font-size: calc(#{var-get(('size': $size or $large-size), 'size')} / 2);\n        line-height: calc(#{var-get(('size': $size or $large-size), 'size')} / 2);\n    }\n\n    %igx-avatar--small {\n        --size: #{$size or $small-size};\n        width: var-get(('size': $size or $small-size), 'size');\n        height: var-get(('size': $size or $small-size), 'size');\n    }\n\n    %igx-avatar--medium {\n        --size: #{$size or $medium-size};\n        width: var-get(('size': $size or $medium-size), 'size');\n        height: var-get(('size': $size or $medium-size), 'size');\n    }\n\n    %igx-avatar--large {\n        --size: #{$size or $large-size};\n        width: var-get(('size': $size or $large-size), 'size');\n        height: var-get(('size': $size or $large-size), 'size');\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $icon-color [null] - The color used for the actions icons.\n/// @param {Color} $background [null] - The color used for the action strip component content background.\n/// @param {Color} $actions-background [null] - The color used for the actions background.\n/// @param {Color} $delete-action [null] - The color used for the delete icon in action strip component.\n/// @param {actions-border-radius} $actions-border-radius [null] - The border radius used for actions container inside action strip component.\n///\n/// @requires extend\n/// @requires round-borders\n/// @requires apply-palette\n/// @requires text-contrast\n///\n/// @example scss Change the background and icon colors in action strip\n///   $my-action-strip-theme: igx-action-strip-theme($background: black);\n///   // Pass the theme to the igx-action-strip component mixin\n///   @include igx-action-strip($my-action-strip-theme);\n@function igx-action-strip-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $background: null,\n    $actions-background: null,\n    $icon-color: null,\n    $delete-action: null,\n    $actions-border-radius: null,\n) {\n    $name: 'igx-action-strip';\n    $action-strip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $action-strip-schema: map.get($schema, $name);\n    } @else {\n        $action-strip-schema: $schema;\n    }\n\n    $theme: apply-palette($action-strip-schema, $palette);\n\n    $actions-border-radius: round-borders(\n        if($actions-border-radius, $actions-border-radius, map.get($action-strip-schema, 'actions-border-radius')), 0, 24px\n    );\n\n    @if not($icon-color) and $actions-background {\n        $icon-color: text-contrast($actions-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        actions-background: $actions-background,\n        icon-color: $icon-color,\n        delete-action: $delete-action,\n        actions-border-radius: $actions-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-action-strip($theme) {\n    @include igx-css-vars($theme);\n\n    $padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $variant: map.get($theme, variant);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-action-strip-display {\n        display: flex;\n        align-items: center;\n        justify-content: flex-end;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        pointer-events: none;\n        top: 0;\n        #{$left}: 0;\n        background: var-get($theme, 'background');\n        color: inherit;\n        padding: map.get($padding, 'comfortable');\n        z-index: 9999;\n    }\n\n    %action-icons-density {\n        [igxButton='icon'] {\n            width: rem(28px);\n            height: rem(28px);\n\n            igx-icon {\n                width: rem(14px);\n                height: rem(14px);\n                font-size: rem(14px);\n            }\n        }\n    }\n\n    %igx-action-strip--cosy {\n        @extend %action-icons-density;\n        padding: map.get($padding, 'cosy');\n    }\n\n    %igx-action-strip--compact {\n        @extend %action-icons-density;\n        padding: map.get($padding, 'compact');\n    }\n\n    %igx-action-strip__editing-actions,\n    %igx-action-strip__pinning-actions {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    %igx-action-strip__menu-item {\n        [igxLabel] {\n            cursor: pointer;\n        }\n\n        igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n        }\n\n        igx-icon + [igxLabel] {\n            margin-#{$left}: rem(12px);\n        }\n\n        &%igx-drop-down__item--cosy {\n            igx-icon + [igxLabel] {\n                margin-#{$left}: rem(10px);\n            }\n        }\n\n        &%igx-drop-down__item--compact {\n            igx-icon + [igxLabel] {\n                margin-#{$left}: rem(8px);\n            }\n        }\n    }\n\n    %igx-action-strip__menu-item--danger {\n        color: igx-color(map.get($theme, 'palette'), 'error');\n\n        &:hover {\n            color: igx-color(map.get($theme, 'palette'), 'error');\n        }\n    }\n\n    %igx-action-strip__menu-button {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-action-strip__actions {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        pointer-events: all;\n        position: relative;\n        color: var-get($theme, 'icon-color');\n        border-radius: var-get($theme, 'actions-border-radius');\n        background: var-get($theme, 'actions-background');\n        max-height: 36px;\n\n        &:last-child {\n            margin-#{$right}: 0;\n        }\n\n        igx-icon {\n            color: var-get($theme, 'icon-color');\n        }\n\n        [igxButton='icon'] {\n            igx-icon {\n                color: var-get($theme, 'icon-color');\n            }\n\n            @if $variant == 'indigo-design' {\n                border-radius: var-get($theme, 'actions-border-radius');\n            }\n        }\n    }\n\n    %igx-action-strip__editing-actions {\n        > [igxButton] {\n            margin-#{$left}: rem(4px);\n\n            &:first-of-type {\n                margin-#{$left}: 0;\n            }\n        }\n    }\n\n    %igx-action-strip__delete {\n        igx-icon {\n            color: var-get($theme, 'delete-action');\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $icon-color [null] - The icon color used.\n/// @param {Color} $text-color [null] - The text color used.\n/// @param {Color} $border-color [null] - The border color used.\n/// @param {Number} $border-width [null] - The border width of the badge component.\n/// @param {Color} $background-color [null] - The background color used.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the badge.\n/// @param {border-radius} $border-radius [null] - The border radius used for badge component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires rem\n/// @requires round-borders\n///\n/// @example scss Change the text and icon colors in a badge\n///   $my-badge-theme: igx-badge-theme($icon-color: black, $background-color: white);\n///   // IE Supported theme - Pass the theme to the igx-badge component mixin\n///   @include igx-badge($my-badge-theme);\n///\n///   // Theming using css variables (not supported in IE11):\n///   @include igx-css-vars($my-badge-theme);\n@function igx-badge-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $icon-color: null,\n    $text-color: null,\n\n    $border-color: null,\n    $border-radius: null,\n    $border-width: null,\n\n    $background-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-badge';\n    $badge-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $badge-schema: map.get($schema, $name);\n    } @else {\n        $badge-schema: $schema;\n    }\n\n    $theme: apply-palette($badge-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($badge-schema, 'border-radius')), 0, 11px\n    );\n\n    @if not($icon-color) and $background-color {\n        $icon-color: text-contrast($background-color);\n    }\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($badge-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        icon-color: $icon-color,\n        text-color: $text-color,\n        border-color: $border-color,\n        border-radius: $border-radius,\n        background-color: $background-color,\n        shadow: $shadow,\n        border-width: $border-width\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires igx-color\n/// @requires rem\n/// @requires var-get\n@mixin igx-badge($theme) {\n    @include igx-css-vars($theme);\n\n    $palette: map.get($theme, 'palette');\n\n    $badge-width: 22px;\n    $badge-height: $badge-width;\n\n    $badge-font-size: rem(11px);\n    $badge-font-weight: normal;\n\n    $badge-icon-font-size: rem(12px);\n\n    $badge-value-padding: rem(4px);\n    $border-type: solid;\n\n    %igx-badge-display {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $badge-width;\n        height: $badge-height;\n        font-size: $badge-font-size;\n        font-weight: $badge-font-weight;\n        color: var-get($theme, 'text-color');\n        line-height: 1;\n        background: var-get($theme, 'background-color');\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: var-get($theme, 'shadow');\n        border-width: var-get($theme, 'border-width');\n        border-color: var-get($theme, 'border-color');\n        border-style: $border-type;\n        overflow: hidden;\n\n        igx-icon {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: $badge-width - 2px;\n            height: $badge-width - 2px;\n            font-size: $badge-icon-font-size;\n            font-weight: $badge-font-weight;\n            color: var-get($theme, 'icon-color');\n        }\n    }\n\n    %igx-badge-value {\n        white-space: nowrap;\n        padding: $badge-value-padding;\n    }\n\n    %igx-badge--success {\n        background: igx-color($palette, 'success');\n    }\n\n    %igx-badge--info {\n        background: igx-color($palette, 'info');\n    }\n\n    %igx-badge--warn {\n        background: igx-color($palette, 'warn');\n    }\n\n    %igx-badge--error {\n        background: igx-color($palette, 'error');\n    }\n\n    %igx-badge--hidden {\n        visibility: hidden;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $idle-item-color [null] - The text-color used for the idle color.\n/// @param {Color} $active-item-color [null] - The text-color used for the active color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the bar.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires $igx-elevations\n///\n/// @example scss Set a custom background color\n///   $my-bottom-nav-theme: igx-bottom-nav-theme($background: black);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-bottom-nav($my-bottom-nav-theme);\n@function igx-bottom-nav-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $idle-item-color: null,\n    $active-item-color: null,\n    $shadow: null\n) {\n    $name: 'igx-bottom-nav';\n    $bottom-nav-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $bottom-nav-schema: map.get($schema, $name);\n    } @else {\n        $bottom-nav-schema: $schema;\n    }\n\n    $theme: apply-palette($bottom-nav-schema, $palette);\n\n    @if not($idle-item-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $idle-item-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($bottom-nav-schema, 'elevation');\n        $shadow: igx-elevation($igx-elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        idle-item-color: $idle-item-color,\n        active-item-color: $active-item-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-bottom-nav-theme\n/// @requires igx-color\n/// @requires extend\n/// @requires rem\n/// @requires $ease-in-out-quad\n/// @requires var-get\n@mixin igx-bottom-nav($theme) {\n    @include igx-css-vars($theme);\n\n    $menu-height: rem(56px);\n    $item-min-width: rem(80px);\n    $item-max-width: rem(168px);\n    $item-padding: 0 rem(12px, 16px);\n\n    %igx-bottom-nav-panel {\n        display: block;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-bottom-nav-menu {\n        display: flex;\n        position: fixed;\n        justify-content: center;\n        align-items: center;\n        left: 0;\n        right: 0;\n        height: $menu-height;\n        background: var-get($theme, 'background');\n        overflow: hidden;\n        z-index: 8;\n    }\n\n    %igx-bottom-nav-menu--top {\n        top: 0;\n        bottom: inherit;\n        box-shadow: var-get($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu--bottom {\n        top: inherit;\n        bottom: 0;\n        box-shadow: var-get($theme, 'shadow');\n    }\n\n    %igx-bottom-nav-menu-item {\n        display: flex;\n        position: relative;\n        flex-flow: column nowrap;\n        flex: 1;\n        align-items: center;\n        justify-content: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        height: 100%;\n        color: var-get($theme, 'idle-item-color');\n        cursor: pointer;\n        user-select: none;\n        overflow: hidden;\n        padding: $item-padding;\n        -webkit-tap-highlight-color: transparent;\n        outline-style: none;\n    }\n\n    %igx-bottom-nav-menu-item--disabled {\n        opacity: .5;\n        cursor: default;\n        pointer-events: none;\n    }\n\n    %igx-bottom-nav-menu-item--selected {\n        color: var-get($theme, 'active-item-color');\n        transition: color .15s $ease-in-out-quad, opacity .25s $ease-in-out-quad;\n    }\n\n    %igx-tab-label {\n        @include ellipsis();\n        padding-top: 4px;\n        max-width: 100%;\n        text-align: center;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        height: 24px;\n        padding: 0 8px;\n        transform: translateZ(0);\n        transition: transform .15s $ease-in-out-quad;\n        z-index: 1;\n    }\n\n    %igx-tab-icon--selected {\n        transform: translateY(-2px);\n    }\n\n    %igx-tab-label--selected {\n        transform: translateY(-2px) scale(1.166667);\n    }\n}\n\n/// Adds typography styles for the igx-bottom-nav component.\n/// Uses the 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'caption')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-bottom-nav-typography($type-scale, $categories: (label: 'caption')) {\n    $label: map.get($categories, 'label');\n\n    %igx-tab-label {\n        @include igx-type-style($type-scale, $label) {\n            margin: 0\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [null] - The palette used as basis for the component theme.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The background color of the button.\n/// @param {Color} $foreground [null] - The text color of the button.\n/// @param {Color} $hover-background [null] - The hover background color of the button.\n/// @param {Color} $hover-foreground [null] - The hover text color of the button.\n/// @param {Color} $focus-background [null] - The focus background color of the button.\n/// @param {Color} $focus-foreground [null] - The focus text color of the button.\n/// @param {Number} $border-radius [null] - The border radius of the button.\n/// @param {Color} $border-color [null] - The border color of the button.\n/// @param {Color} $shadow-color [null] - The shadow color of the button.\n/// @param {Color} $resting-shadow [null] - The shadow of the button in its idle state.\n/// @param {Color} $hover-shadow [null] - The shadow of the button in its hover state.\n/// @param {Color} $focus-shadow [null] - The shadow of the button in its focus state.\n/// @param {Color} $disabled-background [null] - The disabled background color of the button.\n/// @param {Color} $disabled-foreground [null] - The disabled text color of the button.\n/// @param {Color} $disabled-border-color [null] - The disabled border color of the button.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the background and text colors in raised buttons\n///   $my-button-theme: igx-button-theme(\n///     $foreground: white,\n///     $background: black\n///   );\n///   // Pass the theme to the igx-button component mixin\n///   @include igx-button($my-button-theme);\n@function igx-button-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $foreground: null,\n\n    $hover-background: null,\n    $hover-foreground: null,\n\n    $focus-background: null,\n    $focus-foreground: null,\n\n    $border-radius: null,\n    $border-color: null,\n\n    $shadow-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $focus-shadow: null,\n\n    $disabled-background: null,\n    $disabled-foreground: null,\n    $disabled-border-color: null,\n) {\n    $name: 'igx-button';\n    $button-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $button-schema: map.get($schema, $name);\n    } @else {\n        $button-schema: $schema;\n    }\n\n    $themes: ();\n    $variant: null;\n\n    $_minmax-radius: (\n        flat: (0, 20px),\n        outlined: (0, 20px),\n        raised: (0, 20px),\n        fab: (12px, 28px),\n        icon: (0, 20px),\n    );\n\n    @each $_name, $_schema in $button-schema {\n        $_border-radius: round-borders(\n            if(\n                $border-radius,\n                $border-radius,\n                map.get($_schema, 'border-radius')\n            ),\n            map.get($_minmax-radius, $_name)...\n        );\n\n        $_resting-shadow: $resting-shadow;\n        $_hover-shadow: $hover-shadow;\n        $_focus-shadow: $focus-shadow;\n\n        @if not($variant) {\n            $variant: map.get($_schema, 'variant');\n        }\n\n        @if not($foreground) and $background {\n            $foreground: text-contrast($background);\n        }\n\n        @if not($hover-background) and $background {\n            $hover-background: lighten-color($background, 5%);\n        }\n\n        @if not($focus-background) and $background {\n            $focus-background: lighten-color($background, 5%);\n        }\n\n        @if not($hover-foreground) and $hover-background {\n            $hover-foreground: text-contrast($hover-background);\n        }\n\n        @if not($focus-foreground) and $focus-background {\n            $focus-foreground: text-contrast($focus-background);\n        }\n\n        @if not($_resting-shadow) {\n            $resting-elevation: map.get($_schema, 'resting-elevation');\n            $_resting-shadow: igx-elevation($elevations, $resting-elevation);\n        }\n\n        @if not($_hover-shadow) {\n            $hover-elevation: map.get($_schema, 'hover-elevation');\n            $_hover-shadow: igx-elevation($elevations, $hover-elevation);\n        }\n\n        @if not($_focus-shadow) {\n            $focus-elevation: map.get($_schema, 'focus-elevation');\n            $_focus-shadow: igx-elevation($elevations, $focus-elevation);\n        }\n\n        $themes: map.merge($themes, (\n            $_name: extend(apply-palette($_schema, $palette), (\n                name: $name,\n                background: $background,\n                foreground: $foreground,\n\n                hover-background: $hover-background,\n                hover-foreground: $hover-foreground,\n\n                focus-background: $focus-background,\n                focus-foreground: $focus-foreground,\n\n                border-radius: $_border-radius,\n                border-color: $border-color,\n\n                shadow-color: $shadow-color,\n\n                resting-shadow: $_resting-shadow,\n                hover-shadow: $_hover-shadow,\n                focus-shadow: $_focus-shadow,\n\n                disabled-background: $disabled-background,\n                disabled-foreground: $disabled-foreground,\n                disabled-border-color: $disabled-border-color,\n            ))\n        ));\n    }\n\n    @return (\n        palette: $palette,\n        name: $name,\n        variant: $variant,\n        themes: $themes,\n    );\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-button($theme) {\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n    $button-border: 1px solid transparent;\n    $button-width: rem(88px);\n\n    $variant: map.get($theme, variant);\n\n    $flat-theme: map.get(map.get($theme, 'themes'), 'flat');\n    $outlined-theme: map.get(map.get($theme, 'themes'), 'outlined');\n    $raised-theme: map.get(map.get($theme, 'themes'), 'raised');\n    $fab-theme: map.get(map.get($theme, 'themes'), 'fab');\n    $icon-theme: map.get(map.get($theme, 'themes'), 'icon');\n\n    @include igx-css-vars($flat-theme);\n    @include igx-css-vars($outlined-theme);\n    @include igx-css-vars($raised-theme);\n    @include igx-css-vars($fab-theme);\n    @include igx-css-vars($icon-theme);\n\n    $time: map.get((\n        material: .1s,\n        fluent: .1s,\n        bootstrap: .15s,\n        indigo-design: .15s\n    ), $variant);\n\n    $button-transition: color $time ease-in-out,\n        background-color $time ease-in-out,\n        border-color $time ease-in-out,\n        box-shadow $time ease-in-out;\n\n    $button-disabled-shadow: none;\n\n    $button-floating-width: rem(56px);\n    $button-floating-height: $button-floating-width;\n\n    $button-icon-width: rem(36px, 16px);\n    $button-icon-height: $button-icon-width;\n    $button-icon-font-size: rem(24px, 24px);\n    $button-icon-padding: 0;\n\n    $button-padding-material: (\n        comfortable: rem(9px, 16px) rem(16px, 16px),\n        cosy: rem(6px, 16px) rem(16px, 16px),\n        compact: rem(3px, 16px) rem(16px, 16px)\n    );\n\n    $outlined-button-padding-material: (\n        comfortable: rem(7px, 16px) rem(14px, 16px),\n        cosy: rem(4px, 16px) rem(14px, 16px),\n        compact: rem(1px, 16px) rem(14px, 16px)\n    );\n\n    $button-padding-fluent: (\n        comfortable: 0 rem(16px, 16px),\n        cosy: 0 rem(16px, 16px),\n        compact: 0 rem(16px, 16px)\n    );\n\n    $button-padding-bootstrap: (\n        comfortable: rem(8px, 16px) rem(16px, 16px),\n        cosy: rem(6px, 16px) rem(12px, 16px),\n        compact: rem(4px, 16px) rem(8px, 16px)\n    );\n\n    $outlined-button-padding-indigo: (\n        comfortable: rem(6px, 16px) rem(14px, 16px),\n        cosy: rem(4px, 16px) rem(10px, 16px),\n        compact: rem(2px, 16px) rem(6px, 16px)\n    );\n\n    $button-padding: map.get((\n        material: $button-padding-material,\n        fluent: $button-padding-fluent,\n        bootstrap: $button-padding-bootstrap,\n        indigo-design: $button-padding-bootstrap,\n    ), $variant);\n\n    $outlined-button-padding: map.get((\n        material: $outlined-button-padding-material,\n        fluent: $button-padding-fluent,\n        bootstrap: $button-padding-bootstrap,\n        indigo-design: $outlined-button-padding-indigo\n    ), $variant);\n\n    $button--size-material: (\n        comfortable: rem(36px),\n        cosy: rem(30px),\n        compact: rem(24px)\n    );\n\n    $button--size-fluent: (\n        comfortable: rem(32px),\n        cosy: rem(28px),\n        compact: rem(24px)\n    );\n\n    $button--size-bootstrap: (\n        comfortable: rem(48px),\n        cosy: rem(38px),\n        compact: rem(31px)\n    );\n\n    $button--size-indigo: (\n        comfortable: rem(36px),\n        cosy: rem(32px),\n        compact: rem(24px)\n    );\n\n    $button-size: map.get((\n        material: $button--size-material,\n        fluent: $button--size-fluent,\n        bootstrap: $button--size-bootstrap,\n        indigo-design: $button--size-indigo,\n    ), $variant);\n\n    $button-floating-padding: (\n        comfortable: rem(8px) rem(14px),\n        cosy: rem(4px) rem(10px),\n        compact: 0 rem(6px)\n    );\n\n    $button-floating-size: (\n        comfortable: rem(48px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $icon-in-button-margin: (\n        comfortable: rem(12px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $icon-in-button-size: rem(18px);\n\n    $raised-shadow: map.get((\n        material: var-get($raised-theme, 'resting-shadow'),\n        fluent: var-get($raised-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--hover: map.get((\n        material: var-get($raised-theme, 'hover-shadow'),\n        fluent: var-get($raised-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $raised-shadow--focus: map.get((\n        material: var-get($raised-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color')\n    ), $variant);\n\n    $fab-shadow: map.get((\n        material: var-get($fab-theme, 'resting-shadow'),\n        fluent: var-get($fab-theme, 'resting-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--hover: map.get((\n        material: var-get($fab-theme, 'hover-shadow'),\n        fluent: var-get($fab-theme, 'hover-shadow'),\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $fab-shadow--focus: map.get((\n        material: var-get($fab-theme, 'focus-shadow'),\n        fluent:  0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color')\n    ), $variant);\n\n    $icon-shadow: map.get((\n        material: var-get($icon-theme, 'focus-shadow'),\n        fluent: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        bootstrap: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'),\n        indigo-design: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color')\n    ), $variant);\n\n    %igx-button-display {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        min-width: $button-width;\n        padding: map.get($button-padding, 'comfortable');\n        min-height: map.get($button-size, 'comfortable');\n        border: none;\n        cursor: pointer;\n        user-select: none;\n        outline-style: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: $button-transition;\n        font-family: inherit;\n\n        igx-icon {\n            width: $icon-in-button-size;\n            height: $icon-in-button-size;\n            font-size: $icon-in-button-size;\n            color: inherit;\n        }\n\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'comfortable'),\n            $left\n        );\n    }\n\n    %igx-button-display--cosy {\n        padding: map.get($button-padding, 'cosy');\n        min-height: map.get($button-size, 'cosy');\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'cosy'),\n            $left\n        );\n    }\n\n    %igx-button-display--compact {\n        padding: map.get($button-padding, 'compact');\n        min-height: map.get($button-size, 'compact');\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'compact'),\n            $left\n        );\n    }\n\n    %igx-button--flat {\n        background: var-get($flat-theme, 'background');\n        color: var-get($flat-theme, 'foreground');\n        border-radius: var-get($flat-theme, 'border-radius');\n\n        &:hover {\n            background: var-get($flat-theme, 'hover-background');\n            color: var-get($flat-theme, 'hover-foreground');\n        }\n\n        &:focus,\n        &:active {\n            background: var-get($flat-theme, 'focus-background');\n            color: var-get($flat-theme, 'focus-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($flat-theme, 'shadow-color');\n        }\n    }\n\n    %igx-button--outlined {\n        background: var-get($outlined-theme, 'background');\n        color: var-get($outlined-theme, 'foreground');\n        border-radius: var-get($outlined-theme, 'border-radius');\n        padding: map.get($outlined-button-padding, 'comfortable');\n\n        @if $variant != 'indigo-design' {\n            border: $button-border;\n            border-color: var-get($outlined-theme, 'border-color');\n        } @else {\n            border: {\n                width: 2px;\n                style: solid;\n                color: var-get($outlined-theme, 'border-color');\n            }\n        }\n\n        &:hover {\n            background: var-get($outlined-theme, 'hover-background');\n            color: var-get($outlined-theme, 'hover-foreground');\n        }\n\n        &:focus,\n        &:active {\n            background: var-get($outlined-theme, 'focus-background');\n            color: var-get($outlined-theme, 'focus-foreground');\n            box-shadow: 0 0 0 rem(3px) var-get($outlined-theme, 'shadow-color');\n        }\n    }\n\n    %igx-button--outlined-cosy {\n        padding: map.get($outlined-button-padding, 'cosy');\n        min-height: map.get($button-size, 'cosy');\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'cosy'),\n            $left\n        );\n    }\n\n    %igx-button--outlined-compact {\n        padding: map.get($outlined-button-padding, 'compact');\n        min-height: map.get($button-size, 'compact');\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'compact'),\n            $left\n        );\n    }\n\n    %igx-button--raised {\n        color: var-get($raised-theme, 'foreground');\n        background: var-get($raised-theme, 'background');\n        box-shadow: $raised-shadow;\n        border-radius: var-get($raised-theme, 'border-radius');\n\n        &:hover {\n            color: var-get($raised-theme, 'hover-foreground');\n            background: var-get($raised-theme, 'hover-background');\n            box-shadow: $raised-shadow--hover;\n        }\n\n        &:focus,\n        &:active {\n            color: var-get($raised-theme, 'focus-foreground');\n            background: var-get($raised-theme, 'focus-background');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($raised-theme, 'shadow-color'), $raised-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n    }\n\n    %igx-button--round {\n        display: inline-flex;\n        position: relative;\n        flex-direction: row;\n        justify-content: center;\n        align-items: center;\n        border: $button-border;\n        outline: none;\n        cursor: pointer;\n        transition: $button-transition;\n        user-select: none;\n        -webkit-tap-highlight-color: transparent;\n        overflow: hidden;\n        // hack to allow circular overflow in safari...\n        filter: blur(0);\n    }\n\n    %igx-button--fab {\n        padding: map.get($button-floating-padding, 'comfortable');\n        min-width: map.get($button-floating-size, 'comfortable');\n        min-height: map.get($button-floating-size, 'comfortable');\n        line-height: unset;\n        white-space: nowrap;\n        color: var-get($fab-theme, 'foreground');\n        background: var-get($fab-theme, 'background');\n        box-shadow: $fab-shadow;\n        border-radius: var-get($fab-theme, 'border-radius');\n\n        &:hover {\n            color: var-get($fab-theme, 'hover-foreground');\n            background: var-get($fab-theme, 'hover-background');\n            box-shadow: $fab-shadow;\n        }\n\n        &:focus,\n        &:active {\n            color: var-get($fab-theme, 'focus-foreground');\n            background: var-get($fab-theme, 'focus-background');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($fab-theme, 'shadow-color'), $fab-shadow--focus;\n            } @else {\n                box-shadow: $raised-shadow--focus;\n            }\n        }\n\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'comfortable'),\n            $left\n        );\n    }\n\n    %igx-button--fab-cosy {\n        padding: map.get($button-floating-padding, 'cosy');\n        min-width: map.get($button-floating-size, 'cosy');\n        min-height: map.get($button-floating-size, 'cosy');\n\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'cosy'),\n            $left\n        );\n    }\n\n    %igx-button--fab-compact {\n        padding: map.get($button-floating-padding, 'compact');\n        min-width: map.get($button-floating-size, 'compact');\n        min-height: map.get($button-floating-size, 'compact');\n\n        @include icon-w-margin(\n            map.get($icon-in-button-margin, 'compact'),\n            $left\n        );\n    }\n\n    %igx-button--icon {\n        width: $button-icon-width;\n        height: $button-icon-width;\n        min-width: unset;\n        min-height: unset;\n        font-size: $button-icon-font-size;\n        padding: $button-icon-padding;\n        color: var-get($icon-theme, 'foreground');\n        background: var-get($icon-theme, 'background');\n        border-radius: var-get($icon-theme, 'border-radius');\n\n        &:hover {\n            transition: $button-transition;\n            color: var-get($icon-theme, 'hover-foreground');\n            background: var-get($icon-theme, 'hover-background');\n        }\n\n        &:focus,\n        &:active {\n            color: var-get($icon-theme, 'focus-foreground');\n            background: var-get($icon-theme, 'focus-background');\n\n            @if $variant == 'material' or  $variant == 'fluent' {\n                box-shadow: 0 0 0 rem(3px) var-get($icon-theme, 'shadow-color'), $icon-shadow;\n            } @else {\n                box-shadow: $icon-shadow;\n            }\n        }\n    }\n\n    %igx-button--disabled {\n        pointer-events: none;\n        box-shadow: none;\n        color: var-get($flat-theme, 'disabled-foreground');\n        background: transparent;\n\n        &%igx-button--raised,\n        &%igx-button--fab {\n            background: var-get($flat-theme, 'disabled-background');\n        }\n\n        &%igx-button--outlined {\n            border-color: var-get($flat-theme, 'disabled-border-color');\n        }\n\n        &:focus {\n            box-shadow: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-button component.\n/// Uses the 'button' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {String} $categories [(text: 'button')] - The category from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-button-typography($type-scale, $categories: (text: 'button')) {\n    $text: map.get($categories, 'text');\n\n    %igx-button-display {\n        @include igx-type-style($type-scale, $text) {\n            text-align: center;\n        }\n    }\n\n    %igx-button--fab {\n        @include igx-type-style($type-scale, $text) {\n            text-align: center;\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {box-shadow} $shadow [null] - The shadow to be applied for the button group.\n/// @param {Color} $item-text-color [null]- The text color for button group items.\n/// @param {Color} $item-background [null] - The background color for button group items .\n/// @param {Color} $item-border-color [null] - The border color between button group items.\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\n///\n/// @param {Color} $item-hover-text-color [null] - The hover text color for button group items.\n/// @param {Color} $item-hover-background [null] - The hover background color for button group items.\n///\n/// @param {Color} $disabled-text-color [null]- The text/icon color for a disabled item in the button group.\n/// @param {Color} $disabled-background-color [null] - The background color for a disabled item in the button group.\n/// @param {Color} $item-disabled-border [null] - The border color for a disabled item in the button group.\n///\n/// @param {Color} $item-selected-text-color [null]- The text color for a selected item in the button group.\n/// @param {Color} $item-selected-background [null] - The background color for a selected item in the button group.\n/// @param {Color} $item-selected-border-color [null] - The border color for a selected item from the button group.\n/// @param {Color} $item-selected-hover-background [null] - The background color for a selected item in hover or focus state in the button group.\n/// @param {Color} $selected-shadow-color [null] - The outline color of focused/selected button group items.\n/// @param {Color} $idle-shadow-color [null] - The outline color of focused button group items.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for button-group component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the background, text, and border colors\n///   $my-button-group-theme: igx-button-group-theme(\n///     $item-text-color: white,\n///     $item-background: rgba(0, 0, 0, .8),\n///     $item-border-color: #dadada\n///   );\n///   // Pass the theme to the igx-button-group component mixin\n///   @include igx-button-group($my-button-group-theme);\n@function igx-button-group-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $shadow: null,\n    $item-text-color: null,\n    $item-background: null,\n    $item-border-color: null,\n    $item-disabled-border: null,\n    $border-radius: null,\n\n    $item-hover-text-color: null,\n    $item-hover-background: null,\n    $idle-shadow-color: null,\n\n    $disabled-text-color: null,\n    $disabled-background-color: null,\n\n    $item-selected-text-color: null,\n    $item-selected-background: null,\n    $item-selected-border-color: null,\n    $item-selected-hover-background: null,\n    $selected-shadow-color: null\n) {\n    $name: 'igx-button-group';\n    $selector: 'igx-buttongroup';\n\n    $button-group-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $button-group-schema: map.get($schema, $name);\n    } @else {\n        $button-group-schema: $schema;\n    }\n\n    $theme: apply-palette($button-group-schema, $palette);\n\n    $border: 1px solid map.get($theme, 'item-selected-border-color');\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($button-group-schema, 'border-radius')), 0, 20px\n    );\n\n    @if not($item-text-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        @if meta.type-of($item-hover-background) == 'color' {\n            $item-hover-text-color: text-contrast($item-hover-background);\n        }\n    }\n\n    @if not($item-selected-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-background);\n        }\n    }\n\n    @if not($idle-shadow-color) and $selected-shadow-color {\n        @if meta.type-of($selected-shadow-color) == 'color' {\n            $idle-shadow-color: $selected-shadow-color;\n        }\n    }\n\n    @if not($selected-shadow-color) and $idle-shadow-color {\n        @if meta.type-of($idle-shadow-color) == 'color' {\n            $selected-shadow-color: $idle-shadow-color;\n        }\n    }\n\n    @if not($item-selected-text-color) and $item-selected-background {\n        @if meta.type-of($item-selected-background) == 'color' {\n            $item-selected-text-color: text-contrast($item-selected-background);\n        }\n    }\n\n    @if map.get($button-group-schema, 'elevation') > 0 {\n        $border: none;\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($button-group-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-border-color: $item-border-color,\n        item-disabled-border: $item-disabled-border,\n        border-radius: $border-radius,\n        item-hover-text-color: $item-hover-text-color,\n        item-hover-background: $item-hover-background,\n        disabled-text-color:$disabled-text-color,\n        disabled-background-color:$disabled-background-color,\n        item-selected-text-color: $item-selected-text-color,\n        item-selected-background: $item-selected-background,\n        item-selected-border-color: $item-selected-border-color,\n        item-selected-hover-background: $item-selected-hover-background,\n        border: $border,\n        shadow: $shadow,\n        idle-shadow-color: $idle-shadow-color,\n        selected-shadow-color: $selected-shadow-color,\n    ));\n}\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires igx-color\n/// @requires var-get\n@mixin igx-button-group($theme) {\n    @include igx-css-vars($theme);\n    $group-item-min-width: 24px;\n    $group-item-border-thickness: 1px;\n    $group-items-margin: rem(10px, 16px);\n    $transition: all 140ms $ease-in-out-quad;\n    $palette: map.get($theme, 'palette');\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $variant: map.get($theme, 'variant');\n    $bootstrap-theme: $variant == 'bootstrap';\n    $indigo-theme: $variant == 'indigo-design';\n\n    %igx-group-display {\n        display: flex;\n        box-shadow: var-get($theme, 'shadow');\n        transition: $transition;\n        border-radius: var-get($theme, 'border-radius');\n\n        button {\n            // The margin here is required to fix a bug in Safari #7858\n            margin-top: 0;\n            margin-#{$right}: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-group-item {\n        border: $group-item-border-thickness solid var-get($theme, 'item-border-color');\n        color: var-get($theme, 'item-text-color');\n        background: var-get($theme, 'item-background');\n        min-width: $group-item-min-width;\n        display: flex;\n        flex: 1 0 0%;\n        justify-content: center;\n        align-items: center;\n        text-decoration: none;\n        cursor: pointer;\n        user-select: none;\n        position: relative;\n        z-index: 0;\n        transition: $transition;\n\n        &[igxButton] {\n            border-radius: 0;\n        }\n\n        &:not(:nth-child(0)) {\n            margin-#{$left}: -1px;\n        }\n\n        &:first-of-type {\n            border-top-#{$left}-radius: var-get($theme, 'border-radius');\n            border-bottom-#{$left}-radius: var-get($theme, 'border-radius');\n        }\n\n        &:last-of-type {\n            border-top-#{$right}-radius: var-get($theme, 'border-radius');\n            border-bottom-#{$right}-radius: var-get($theme, 'border-radius');\n        }\n\n        &[igxButton][disabled='true'] {\n            color: var-get($theme, 'disabled-text-color');\n            background: var-get($theme, 'disabled-background-color');\n            border-color: var-get($theme, 'item-disabled-border');\n        }\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'item-hover-text-color');\n            background: var-get($theme, 'item-hover-background');\n        }\n\n        &:focus {\n            @if $bootstrap-theme or $indigo-theme {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'idle-shadow-color');\n            }\n\n            @if $indigo-theme {\n                z-index: 2;\n            }\n        }\n    }\n\n    %igx-group-item-vertical {\n        &:not(:nth-child(0)) {\n            margin-top: -1px;\n            margin-#{$left}: 0;\n        }\n\n        &:first-of-type {\n            border-top-#{$left}-radius: var-get($theme, 'border-radius');\n            border-top-#{$right}-radius: var-get($theme, 'border-radius');\n            border-bottom-#{$left}-radius: 0;\n            border-bottom-#{$right}-radius: 0;\n        }\n\n        &:last-of-type {\n            border-top-#{$left}-radius: 0;\n            border-top-#{$right}-radius: 0;\n            border-bottom-#{$left}-radius: var-get($theme, 'border-radius');\n            border-bottom-#{$right}-radius: var-get($theme, 'border-radius');\n        }\n    }\n\n    %igx-group-item-selected {\n        color: var-get($theme, 'item-selected-text-color');\n        background: var-get($theme, 'item-selected-background');\n        border-color: var-get($theme, 'item-selected-border-color');\n        position: relative;\n        z-index: 1;\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'item-selected-text-color');\n            background: var-get($theme, 'item-selected-hover-background');\n        }\n\n        &:focus {\n            z-index: 3;\n        }\n\n        @if $indigo-theme {\n            &:focus {\n                box-shadow: 0 0 0 rem(3px) var-get($theme, 'selected-shadow-color');\n            }\n        }\n\n        &[igxButton][disabled='true'] {\n            position: relative;\n\n            &::before {\n                position: absolute;\n                content: '';\n                top: 0;\n                #{$right}: 0;\n                bottom: 0;\n                #{$left}: 0;\n                background: igx-color($palette, 'grays', 500, .12);\n            }\n        }\n    }\n\n    %igx-group-vertical {\n        flex-flow: column;\n    }\n\n    %igx-group-item-content {\n        display: flex;\n        flex-flow: row nowrap;\n        min-width: 0;\n\n        * ~ * {\n            margin-#{$left}: $group-items-margin;\n        }\n    }\n\n    %igx-button-group__button-text {\n        width: 100%;\n        @include ellipsis();\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $banner-background [null]- The background color used banner background.\n/// @param {Color} $banner-message-color [null]- The color used for banner label.\n/// @param {Color} $banner-border-color [null] - The border color used banner border.\n/// @param {Color} $banner-illustration-color [null] - The color used banner illustration.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background in banner\n///   $my-banner-theme: igx-banner-theme($banner-background: #000);\n///   // Pass the theme to the igx-banner component mixin\n///   @include igx-banner($my-banner-theme);\n@function igx-banner-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $banner-background: null,\n    $banner-message-color: null,\n    $banner-border-color: null,\n    $banner-illustration-color: null\n) {\n    $name: 'igx-banner';\n    $selector: 'igx-banner, .igx-banner, .igx-banner--cosy, .igx-banner--compact';\n    $banner-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $banner-schema: map.get($schema, $name);\n    } @else {\n        $banner-schema: $schema;\n    }\n\n    $theme: apply-palette($banner-schema, $palette);\n\n    @if not($banner-message-color) and $banner-background {\n        $banner-message-color: text-contrast($banner-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        banner-background: $banner-background,\n        banner-message-color: $banner-message-color,\n        banner-border-color: $banner-border-color,\n        banner-illustration-color: $banner-illustration-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-banner($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $banner-padding: (\n        comfortable: rem(8),\n        cosy: rem(8),\n        compact: rem(8)\n    );\n\n    %igx-banner,\n    %igx-banner__illustration,\n    %igx-banner__message {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-banner {\n        padding-#{$right}: map.get($banner-padding, 'comfortable');\n        padding-#{$left}: 0;\n        padding-top: map.get($banner-padding, 'comfortable');\n        padding-bottom: map.get($banner-padding, 'comfortable');\n        background: var-get($theme, 'banner-background');\n        align-items: center;\n        position: relative;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n    }\n\n    %igx-banner__illustration {\n        justify-content: center;\n        width: rem(40);\n        min-width: rem(40);\n        height: rem(40);\n        margin-#{$left}: rem(16);\n        color: var-get($theme, 'banner-illustration-color');\n    }\n\n    %igx-banner__border-top {\n        border-top: 1px solid var-get($theme, 'banner-border-color');\n        top: -1px\n    }\n\n    %igx-banner__border-bottom {\n        border-bottom: 1px solid var-get($theme, 'banner-border-color');\n        top: 0;\n    }\n\n    %igx-banner__text {\n        color: var-get($theme, 'banner-message-color');\n        flex: 1 0 0%;\n        margin-#{$left}: rem(24);\n\n        > * {\n            margin-top: 0 !important;\n        }\n    }\n\n    %igx-banner--cosy {\n        padding: map.get($banner-padding, 'cosy');\n    }\n\n    %igx-banner--compact {\n        padding: map.get($banner-padding, 'compact');\n    }\n\n    %igx-banner__message {\n        min-width: rem(220);\n        flex: 1 0 0%;\n        margin-#{$right}: rem(90);\n    }\n\n    %igx-banner__row {\n        display: flex;\n    }\n\n    %igx-banner__actions {\n        display: flex;\n        flex-direction: column;\n        align-self: flex-end;\n        justify-content: center;\n        min-height: rem(40);\n    }\n}\n\n/// Adds typography styles for the igx-banner component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(message: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-banner-typography($type-scale, $categories: (\n    message: 'body-2')\n) {\n    $message: map.get($categories, 'message');\n\n    %igx-banner__text {\n        @include igx-type-style($type-scale, $message) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only header background color is specified, that color will be\n/// used as the leading color for all accented elements, such as:\n/// - current date color\n/// - selected date background\n/// - picker elements hover colors\n/// - year/month hover/selected colors\n/// If only background colors are specified, text/icon colors\n/// will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $content-background [null] - The main content background color.\n/// @param {Color} $content-text-color [null] - The main content text color.\n///\n/// @param {Color} $picker-background-color [null] - The igx-calendar-picker background color.\n/// @param {Color} $border-color [null] - The calendar border color.\n///\n/// @param {Color} $header-background [null] - The header background color.\n/// @param {Color} $header-text-color [null] - The header text color.\n///\n/// @param {Color} $picker-arrow-color [null] - The idle picker arrow color.\n/// @param {Color} $picker-arrow-hover-color [null] - The picker hover arrow color.\n///\n/// @param {Color} $picker-text-color [null]- The idle picker month/year color.\n/// @param {Color} $picker-text-hover-color [null]-  The hover picker month/year color.\n///\n/// @param {Color} $inactive-text-color [null] - The text color for previous and next month dates.\n/// @param {Color} $label-color [null] - The text color for weekday labels.\n/// @param {Color} $weekend-text-color [null] - The text color for weekend days.\n///\n/// @param {Color} $year-current-text-color [null] - The text color for the current/selected year.\n///\n/// @param {Color} $month-current-text-color [null]- The text color for the current/selected month.\n/// @param {Color} $month-hover-current-text-color [null]- The text color for the current/selected month on hover.\n/// @param {Color} $month-hover-text-color [null] - The month hover text color.\n/// @param {Color} $month-hover-background [null] - The month hover background color.\n/// @param {border-radius} $month-border-radius [null] - The border radius used for the outline outline of the month.\n///\n/// @param {Color} $year-hover-text-color [null] - The year hover text color.\n///\n/// @param {Color} $date-selected-background [null] - The background color for the selected date.\n/// @param {Color} $date-selected-text-color [null] - The text color for the selected date.\n///\n/// @param {Color} $date-current-text-color [null] - The text color for the current date.\n/// @param {Color} $date-current-bg-color [null] - The background color for the current date.\n/// @param {Color} $date-hover-background [null] - The hover date background color.\n///\n/// @param {Color} $date-special-background [null] - The background color used for special dates.\n/// @param {Color} $date-special-text-color [null] - The text color used for special dates.\n///\n/// @param {Color} $date-disabled-text-color [null] - The text color for disabled dates.\n/// @param {Color} $date-disabled-background [null] - The background color for disabled dates in a range.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the calendar.\n/// @param {border-radius} $date-border-radius [null] - The border radius used for the outline outline of the date.\n///\n/// @param {Color} $week-number-color [null] - The text color of the week number column.\n/// @param {Color} $week-number-background [null] - The background color of the week number column.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires round-borders\n/// @requires extend\n///\n/// @example scss Change the header and content background colors\n///   $my-calendar-theme: igx-calendar-theme(\n///     $header-background: purple,\n///     $content-background: black\n///   );\n///   // Pass the theme to the igx-calendar component mixin\n///   @include igx-calendar($my-calendar-theme);\n@function igx-calendar-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $border-radius: null,\n    $date-border-radius: null,\n    $month-border-radius: null,\n\n    $header-background: null,\n    $header-text-color: null,\n\n    $picker-arrow-color: null,\n    $picker-arrow-hover-color: null,\n\n    $picker-text-color: null,\n    $picker-text-hover-color: null,\n\n    $inactive-text-color: null,\n    $weekend-text-color: null,\n\n    $year-current-text-color: null,\n    $month-current-text-color: null,\n\n    $year-hover-text-color: null,\n    $month-hover-text-color: null,\n    $month-hover-current-text-color: null,\n    $month-hover-background: null,\n\n    $date-selected-background: null,\n    $date-selected-text-color: null,\n\n    $date-current-text-color: null,\n    $date-current-bg-color: null,\n    $date-hover-background: null,\n\n    $date-special-background: null,\n    $date-special-text-color: null,\n\n    $date-disabled-text-color: null,\n    $date-disabled-background: null,\n    $border-color: null,\n    $border-width: null,\n    $picker-background-color: null,\n    $label-color: null,\n    $week-number-color: null,\n    $week-number-background: null,\n) {\n    $name: 'igx-calendar';\n    $selector: 'igx-calendar, igx-days-view, igx-months-view, igx-years-view';\n    $calendar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $calendar-schema: map.get($schema, $name);\n    } @else {\n        $calendar-schema: $schema;\n    }\n\n    $theme: apply-palette($calendar-schema, $palette);\n    $variant: map.get($theme, variant);\n    $not-bootstrap-theme: $variant != 'bootstrap';\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($calendar-schema, 'border-radius')), 0, 20px\n    );\n\n    $date-border-radius: round-borders(\n        if($date-border-radius, $date-border-radius, map.get($calendar-schema, 'date-border-radius')), 0, 20px\n    );\n\n    $month-border-radius: round-borders(\n        if($month-border-radius, $month-border-radius, map.get($calendar-schema, 'month-border-radius')), 0, 20px\n    );\n\n    @if not($content-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $content-text-color: text-contrast($content-background);\n        }\n    }\n\n    @if not($weekend-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $weekend-text-color: rgba($content-text-color, .7);\n        }\n    }\n\n    @if not($inactive-text-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $inactive-text-color: rgba($content-text-color, .5);\n        }\n    }\n\n    @if not($label-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $label-color: rgba($content-text-color, .5);\n        }\n    }\n\n    @if not($picker-arrow-color) and $content-background {\n        $picker-arrow-color: $content-text-color;\n    }\n\n    @if not($picker-arrow-hover-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $picker-arrow-hover-color: $header-background;\n        }\n    }\n\n    @if not($picker-text-color) and $content-background {\n        $picker-text-color: $content-text-color;\n    }\n\n    @if not($date-selected-text-color) and $date-selected-background {\n        $date-selected-text-color: $content-background;\n    }\n\n    @if not($date-hover-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $date-hover-background: rgba(text-contrast($content-background), .12);\n        }\n    }\n\n    @if $not-bootstrap-theme {\n        @if not($picker-text-hover-color) and $header-background {\n            $picker-text-hover-color: $header-background;\n        }\n\n        @if not($header-text-color) and $header-background {\n            $header-text-color: text-contrast($header-background);\n        }\n\n        @if not($date-selected-background) and $header-background {\n            $date-selected-background: $header-background;\n        }\n\n        @if not($date-current-bg-color) and $header-background {\n            $date-current-bg-color: $header-background;\n        }\n\n        @if not($year-hover-text-color) and $header-background {\n            $year-hover-text-color: $header-background;\n        }\n\n        @if not($year-current-text-color) and $header-background {\n            $year-current-text-color: $header-background;\n        }\n\n        @if not($month-current-text-color) and $header-background {\n            @if $header-background == 'color' {\n                $month-current-text-color: $header-background;\n            }\n        }\n    }\n\n    @if not($date-current-text-color) and $date-current-bg-color {\n        $date-current-text-color: $date-current-bg-color;\n    }\n\n    @if not($date-special-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $date-special-background: rgba(text-contrast($content-background), .04);\n        }\n    }\n\n    @if not($date-special-text-color) and $date-special-background {\n        $date-special-text-color: text-contrast($date-special-background);\n    }\n\n    @if not($month-hover-text-color) and $month-hover-background {\n        @if meta.type-of($month-hover-background) == 'color' {\n            $month-hover-text-color: text-contrast($month-hover-background);\n        }\n    }\n\n    @if not($month-hover-current-text-color) and $month-hover-background {\n        @if meta.type-of($month-hover-background) == 'color' {\n            $month-hover-current-text-color: text-contrast($month-hover-background);\n        }\n    }\n\n    @if not($date-disabled-text-color) and $date-disabled-background {\n        @if meta.type-of($date-disabled-background) == 'color' {\n            $date-disabled-color: rgba(text-contrast($date-disabled-background), .38);\n        }\n    }\n\n    @if not($week-number-color) and $week-number-background {\n        $week-number-color: text-contrast($week-number-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n\n        border-radius: $border-radius,\n        date-border-radius: $date-border-radius,\n        month-border-radius: $month-border-radius,\n\n        border-color: $border-color,\n        picker-background-color: $picker-background-color,\n        border-width: $border-width,\n\n        picker-arrow-color: $picker-arrow-color,\n        picker-arrow-hover-color: $picker-arrow-hover-color,\n\n        picker-text-color: $picker-text-color,\n        picker-text-hover-color: $picker-text-hover-color,\n\n        weekend-text-color: $weekend-text-color,\n        inactive-text-color: $inactive-text-color,\n        label-color: $label-color,\n\n        year-current-text-color: $year-current-text-color,\n        month-current-text-color: $month-current-text-color,\n\n        year-hover-text-color: $year-hover-text-color,\n        month-hover-text-color: $month-hover-text-color,\n        month-hover-current-text-color: $month-hover-current-text-color,\n        month-hover-background: $month-hover-background,\n\n        date-selected-background: $date-selected-background,\n        date-selected-text-color: $date-selected-text-color,\n\n        date-current-text-color: $date-current-text-color,\n        date-current-bg-color: $date-current-bg-color,\n        date-hover-background: $date-hover-background,\n\n        date-special-text-color: $date-special-text-color,\n        date-special-background: $date-special-background,\n\n        date-disabled-text-color: $date-disabled-text-color,\n        date-disabled-background: $date-disabled-background,\n\n        week-number-color: $week-number-color,\n        week-number-background: $week-number-background,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {function} text-contrast\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires rem\n/// @requires {mixin} ellipsis\n/// @requires var-get\n@mixin igx-calendar($theme) {\n    @include igx-css-vars($theme);\n\n    $palette: map.get($theme, 'palette');\n    $cal-header-year-margin: 0;\n    $cal-header-date-margin: 0;\n    $cal-header-padding: em(16px);\n\n    $variant: map.get($theme, 'variant');\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $cal-picker-padding: map.get((\n        material: em(16px),\n        fluent: em(16px),\n        bootstrap: em(8px),\n        indigo-design: em(16px),\n    ), $variant);\n\n    $cal-value-w: map.get((\n        material: em(40px),\n        fluent: em(40px),\n        bootstrap: em(32px),\n        indigo-design: em(40px),\n    ), $variant);\n\n    $border-width: map.get((\n        material: 0,\n        fluent: 0,\n        bootstrap: 1px,\n        indigo-design: 0\n    ), $variant);\n\n    $border-radius: map.get((\n        material: 4px,\n        fluent: 0,\n        bootstrap: 0,\n        indigo-design: 8px\n    ), $variant);\n\n    $cal-value-h: $cal-value-w;\n    $cal-value-br: math.div($cal-value-w, 2);\n    $cal-value-fw: 600;\n\n    $cal-value-month-margin: 0 em(12px);\n    $cal-value-month-height: em(91px);\n\n    $cal-row-padding: rem(8px);\n    $cal-row-margin: rem(2px) 0;\n\n    $current-color-variant: map.get((\n        material: var-get($theme, 'date-selected-background'),\n        fluent: var-get($theme, 'date-current-bg-color'),\n        bootstrap: var-get($theme, 'date-current-bg-color'),\n        indigo-design: var-get($theme, 'date-selected-background'),\n    ), $variant);\n\n    $current-text-color-variant: map.get((\n        material: var-get($theme, 'date-selected-text-color'),\n        fluent: var-get($theme, 'date-current-text-color'),\n        bootstrap: var-get($theme, 'date-current-text-color'),\n        indigo-design: var-get($theme, 'date-selected-text-color'),\n    ), $variant);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n    $before: if-ltr(before, after);\n    $after: if-ltr(after, before);\n\n    %cal-display {\n        display: flex;\n        flex-flow: column nowrap;\n        width: 100%;\n        min-width: 290px;\n        background: var-get($theme, 'content-background');\n        outline: none;\n        border-radius: var-get($theme, 'border-radius');\n        overflow: hidden;\n        border: $border-width solid var-get($theme, 'border-color');\n\n        %cal-display {\n\n            @if $bootstrap-theme {\n                border: none;\n                border-radius: 0;\n            }\n        }\n    }\n\n    igx-calendar-container {\n        @if $bootstrap-theme {\n            %cal-display {\n                border: 0;\n                border-radius: 0;\n            }\n\n            margin-bottom: 0;\n\n            %cal-picker-display {\n                padding-bottom: 0;\n            }\n\n            %cal-row-display {\n                &:first-of-type {\n                    padding-top: 0;\n                    padding-bottom: math.div($cal-picker-padding, 2);\n                }\n            }\n\n            %cal-picker-arrow {\n                top: $cal-picker-padding;\n            }\n        }\n    }\n\n    igx-month-picker {\n        %cal-picker-display {\n            @if $bootstrap-theme {\n                border-bottom: 1px solid var-get($theme, 'border-color');\n            }\n        }\n    }\n\n    %cal-display + %cal-display {\n        margin-#{$left}: 1rem;\n\n        @if $bootstrap-theme {\n            margin: 0;\n        }\n    }\n\n    %cal-display--vertical {\n        flex-flow: row nowrap;\n\n        %cal-header-display {\n            min-width: em(168px);\n        }\n    }\n\n    %cal-header-display {\n        background: var-get($theme, 'header-background');\n        color: var-get($theme, 'header-text-color');\n        padding: $cal-header-padding;\n\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %cal-header-year {\n        margin: $cal-header-year-margin;\n        color: currentColor;\n        opacity: .8;\n\n        @if $variant == 'indigo-design' {\n            opacity: 1;\n        }\n    }\n\n    %cal-header-date {\n        display: flex;\n        margin: $cal-header-date-margin;\n\n        > span {\n            @include ellipsis();\n        }\n    }\n\n    %cal-header-date--vertical {\n        flex-flow: column nowrap;\n    }\n\n    %cal-picker-display {\n        display: flex;\n        height: em(56px);\n        align-items: center;\n        padding-bottom: $cal-picker-padding;\n        background: var-get($theme, 'picker-background-color');\n\n        @if $bootstrap-theme {\n            height: auto;\n            padding-top: $cal-picker-padding;\n        }\n        position: relative;\n\n        div {\n            text-align: center;\n        }\n\n        &:focus {\n            outline: none;\n        }\n    }\n\n    %cal-picker-dates {\n        display: flex;\n        justify-content: center;\n    }\n\n    %cal-picker-arrow {\n        position: absolute;\n        display: inline-flex;\n        justify-content: center;\n        color: var-get($theme, 'picker-arrow-color');\n        user-select: none;\n        outline: none;\n        cursor: pointer;\n        height: calc(100% - #{$cal-picker-padding});\n        align-items: center;\n        top: 0;\n\n        @if $bootstrap-theme {\n            top: math.div($cal-picker-padding, 2);\n        }\n\n        &:focus,\n        &:hover {\n            color: var-get($theme, 'picker-arrow-hover-color');\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %cal-picker-arrow__prev {\n        #{$left}: 0;\n    }\n\n    %cal-picker-arrow__next {\n        #{$right}: 0;\n    }\n\n    %cal-picker-date {\n        color: var-get($theme, 'picker-text-color');\n        text-align: center;\n        outline: none;\n        padding: 0 rem(2px);\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'picker-text-hover-color');\n            cursor: pointer;\n        }\n    }\n\n    %cal-body-display {\n        flex: 1 1 auto;\n        @if $not-bootstrap-theme {\n            padding-top: $cal-picker-padding;\n        }\n        padding-bottom: $cal-picker-padding;\n\n        overflow: hidden;\n    }\n\n    igx-years-view,\n    igx-month-picker,\n    igx-months-view {\n        %cal-body-display {\n            @if $bootstrap-theme {\n                padding-bottom: 0;\n            }\n        }\n    }\n\n    %cal-value {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: var-get($theme, 'content-text-color');\n        outline: none;\n\n        &:first-of-type {\n            padding-#{$left}: $cal-row-padding;\n        }\n\n        &:last-of-type {\n            padding-#{$right}: $cal-row-padding;\n        }\n\n        // 100 divided by the number of weekdays\n        min-width: 14.28%;\n\n        // Quantity Query selector\n        // 8 comes from the number of columns in the calendar\n        &:nth-last-child(8):first-child,\n        &:nth-last-child(8):first-child ~ * {\n            // 100 divided by the number of weekdays + weeks number column\n            min-width: 12.5% !important;\n        }\n    }\n\n    %cal-row-display {\n        display: flex;\n        justify-content: space-between;\n        margin: $cal-row-margin;\n        padding: 0;\n\n        &:first-of-type {\n            @if $bootstrap-theme {\n                margin-top: 0;\n                background: var-get($theme, 'picker-background-color');\n                border-bottom: 1px solid var-get($theme, 'border-color');\n                padding-bottom: $cal-picker-padding;\n                padding-top: $cal-picker-padding;\n            }\n\n            @if $not-bootstrap-theme{\n                margin-bottom: 0;\n            }\n        }\n\n        &:nth-child(2) {\n            @if $not-bootstrap-theme {\n                margin-top: 0;\n            }\n        }\n\n        &:last-of-type {\n            %cal-value-content--week-number {\n                border-bottom-left-radius: $border-radius;\n                border-bottom-right-radius: $border-radius;\n\n                &::before {\n                    display: none;\n                }\n            }\n\n            @if $bootstrap-theme {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %cal-row-display--wrap {\n        flex-wrap: wrap;\n\n        &:first-of-type {\n            @if $bootstrap-theme {\n                background: transparent;\n                margin-bottom: 0;\n                border-bottom: 0;\n                padding: 0;\n            }\n        }\n    }\n\n    %cal-column-display {\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    %cal-column-year {\n        padding: 0;\n        margin: 0;\n\n        %cal-value--year {\n            flex: 1 0 0;\n        }\n    }\n\n    %cal-value--hover {\n        @if $bootstrap-theme {\n            color: var-get($theme, 'date-selected-text-color');\n        }\n\n        %cal-value-content::after {\n            background: var-get($theme, 'date-hover-background');\n        }\n    }\n\n    %cal-value--selected--hover {\n        %cal-value-content::after {\n            background: igx-color($palette, 'grays', 100, .18);\n        }\n    }\n\n    %cal-value-content {\n        position: relative;\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        width: $cal-value-w;\n        min-width: $cal-value-w;\n        height: $cal-value-h;\n        border-radius: var-get($theme, 'date-border-radius');\n        z-index: 0;\n        // transition: background .15s ease-out;\n\n        &::after {\n            position: absolute; content: '';\n            width: calc(100% - 4px);\n            height: calc(100% - 4px);\n            top: 2px;\n            left: 2px;\n            border-radius: inherit;\n            z-index: -1;\n        }\n    }\n\n    %cal-value--label {\n        @if $not-bootstrap-theme{\n            height: $cal-value-h;\n        }\n\n        color: var-get($theme, 'label-color');\n\n        &:hover,\n        &:focus {\n            color: var-get($theme, 'label-color');\n        }\n\n        border-radius: 0;\n\n        @if $bootstrap-theme {\n            font-style: italic;\n            cursor: default;\n        }\n    }\n\n    %cal-value--weekend {\n        color: var-get($theme, 'weekend-text-color');\n    }\n\n    %cal-value-date--week-number + %cal-value {\n        padding-#{$left}: 0 !important;\n    }\n\n    %label--week-number,\n    %cal-value-content--week-number {\n        position: relative;\n        color: var-get($theme, 'week-number-color') !important;\n        border-radius: 0;\n        pointer-events: none;\n    }\n\n    %cal-value-date--week-number {\n        padding-#{$right}: 0 !important;\n        cursor: default;\n\n        &:hover,\n        &:focus {\n            %cal-value-content--week-number {\n                color: var-get($theme, 'week-number-color') !important;\n            }\n        }\n    }\n\n    %cal-value-content--week-number {\n        position: relative;\n        background: var-get($theme, 'week-number-background') !important;\n        min-width: auto;\n\n        &::after {\n            display: none;\n        }\n\n        &::before {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: math.div($cal-row-padding, 2);\n            #{$left}: 0;\n            top: 100%;\n            background: var-get($theme, 'week-number-background') !important;\n        }\n    }\n\n    %label--week-number {\n        padding-#{$right}: 0 !important;\n        text-align: center;\n\n        span {\n            width: $cal-value-w;\n            position: relative;\n            background: var-get($theme, 'week-number-background');\n\n            &::before,\n            &::after {\n                content: '';\n                position: absolute;\n                width: 100%;\n                background: var-get($theme, 'week-number-background');\n                #{$left}: 0;\n            }\n\n            &::after {\n                top: 100%;\n                height: if($not-bootstrap-theme, math.div($cal-row-padding, 2) + rem(2px), $cal-row-padding + rem(5px));\n            }\n\n            &::before {\n                bottom: 100%;\n                height: $cal-row-padding;\n                border-top-left-radius: $border-radius;\n                border-top-right-radius: $border-radius;\n            }\n        }\n    }\n\n    %label--week-number + %cal-value--label {\n        padding-#{$left}: 0 !important;\n    }\n\n    %cal-value--year {\n        margin: 0;\n        min-width: 8ch;\n        line-height: rem(52px);\n\n        &:first-of-type {\n            padding-#{$left}: 0;\n        }\n\n        &:last-of-type {\n            padding-#{$right}: 0;\n        }\n    }\n\n    %cal-value--year-current {\n        color: var-get($theme, 'year-current-text-color');\n\n        @if $bootstrap-theme {\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'year-hover-text-color');\n            }\n        }\n    }\n\n    %cal-value--year-hover {\n        color: var-get($theme, 'year-hover-text-color');\n    }\n\n    %cal-value--month-hover {\n        color: var-get($theme, 'month-hover-text-color');\n        outline-width: 0;\n\n        &::after {\n            background: var-get($theme, 'month-hover-background');\n        }\n    }\n\n    %cal-value--month {\n        position: relative;\n        display: flex;\n        margin: $cal-value-month-margin;\n        flex: 1 0 25%;\n        justify-content: center;\n        align-items: center;\n        height: $cal-value-month-height;\n        z-index: 1;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 50%;\n            left: 0;\n            right: 0;\n            transform: translateY(-50%);\n            height: 48px;\n            background: transparent;\n            border-radius: var-get($theme, 'month-border-radius');\n            transition: background-color .15s ease-out;\n            z-index: -1;\n        }\n    }\n\n    %cal-value--month-current {\n        color: var-get($theme, 'month-current-text-color');\n    }\n\n    %cal-value--month-current-hover {\n        color: var-get($theme, 'month-hover-current-text-color');\n    }\n\n    %cal-value--inactive {\n        cursor: pointer;\n        color: var-get($theme, 'inactive-text-color');\n    }\n\n    %cal-value--inactive--single--hover {\n        @if $bootstrap-theme {\n            color: var-get($theme, 'date-selected-text-color');\n        } @else {\n            color: var-get($theme, 'inactive-text-color');\n        }\n    }\n\n    %cal-value--special {\n        %cal-value-content {\n            background: var-get($theme, 'date-special-background');\n            @if $not-bootstrap-theme {\n                color: var-get($theme, 'date-special-text-color');\n            }\n            font-weight: 900;\n        }\n    }\n\n    %cal-value--selected {\n        position: relative;\n        background: var-get($theme, 'date-selected-background');\n\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n            background: var-get($theme, 'date-selected-background') ;\n        }\n    }\n\n    %cal-value--current {\n        %cal-value-content {\n            color: var-get($theme, 'date-current-text-color');\n            font-weight: $cal-value-fw ;\n            background: var-get($theme, 'date-current-bg-color');\n\n            &:hover {\n                background: var-get($theme, 'date-current-bg-color');\n            }\n\n            &:focus {\n                background: var-get($theme, 'date-current-bg-color');\n            }\n\n            @if $variant == 'fluent' or 'bootstrap' {\n                &::after {\n                    opacity: .2;\n                }\n            }\n        }\n    }\n\n    %cal-value--current--selected {\n        %cal-value-content {\n            color: $current-text-color-variant;\n            background: $current-color-variant;\n\n            @if $variant == 'indigo-design' {\n                font-weight: 700;\n            }\n\n            &:hover {\n                background: $current-color-variant;\n            }\n\n            &:focus {\n                background: $current-color-variant;\n            }\n        }\n    }\n\n    %cal-value--disabled {\n        pointer-events: none;\n        cursor: not-allowed;\n        color: var-get($theme, 'date-disabled-text-color');\n    }\n\n    %cal-value--single {\n        background: transparent;\n\n        &::before,\n        &::after {\n            background: transparent;\n        }\n\n        @if $bootstrap-theme {\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'date-selected-text-color');\n            }\n        }\n    }\n\n    %cal-value--disabled-range {\n        background: var-get($theme, 'date-disabled-background') !important;\n\n        %cal-value-content {\n            color: var-get($theme, 'date-disabled-text-color');\n            background: transparent !important;\n        }\n    }\n\n    %cal-value--hidden%cal-value--disabled-range {\n        background: transparent !important;\n\n        &::after,\n        &::before {\n            background: transparent !important;\n        }\n    }\n\n    %cal-value--range%cal-value--inactive%cal-value--selected {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n        }\n\n        &:focus,\n        &:hover {\n            %cal-value-content {\n                color: var-get($theme, 'date-selected-text-color');\n            }\n        }\n    }\n\n    %cal-value--range%cal-value--inactive%cal-value--selected%cal-value--single {\n        %cal-value-content {\n            color: var-get($theme, 'date-selected-text-color');\n            background: var-get($theme, 'date-selected-background') !important;\n        }\n    }\n\n    %cal-value--first {\n        position: relative;\n        background: transparent;\n        z-index: 0;\n\n        &::after {\n            position: absolute;\n            content: '';\n            width: 50%;\n            top: 0;\n            #{$left}: 50%;\n            bottom: 0;\n            background: var-get($theme, 'date-selected-background');\n            z-index: -1;\n        }\n    }\n\n    %cal-value--last {\n        position: relative;\n        background: transparent;\n        z-index: 0;\n\n        &::before {\n            position: absolute;\n            content: '';\n            width: 50%;\n            top: 0;\n            #{$right}: 50%;\n            bottom: 0;\n            background: var-get($theme, 'date-selected-background');\n            z-index: -1;\n        }\n    }\n\n    %cal-value--hidden {\n        %cal-value-content {\n            visibility: hidden;\n        }\n    }\n\n    %calendar__aria-off-screen {\n        position: absolute!important;\n        border: none!important;\n        height: 1px!important;\n        width: 1px!important;\n        left: 0!important;\n        top: 0!important;\n        overflow: hidden!important;\n        padding: 0!important;\n        margin: 0 !important;\n        user-select: none;\n        pointer-events: none;\n\n        &:focus {\n            outline: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-year: 'subtitle-1', header-date: 'h4', picker-date: 'subtitle-1', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-calendar-typography($type-scale, $categories: (\n    header-year: 'subtitle-1',\n    header-date: 'h4',\n    weekday-label: 'body-1',\n    picker-date: 'subtitle-1',\n    content: 'body-1')\n) {\n    $header-year: map.get($categories, 'header-year');\n    $header-date: map.get($categories, 'header-date');\n    $weekday-label: map.get($categories, 'weekday-labels');\n    $picker-date: map.get($categories, 'picker-date');\n    $content: map.get($categories, 'content');\n\n    %cal-header-year {\n        @include igx-type-style($type-scale, $header-year) {\n            margin: 0;\n        }\n    }\n\n    %cal-header-date {\n        @include igx-type-style($type-scale, $header-date) {\n            margin: 0;\n        }\n    }\n\n    %cal-picker-date {\n        @include igx-type-style($type-scale, $picker-date) {\n            margin: 0;\n        }\n    }\n\n    %cal-value-content {\n        @include igx-type-style($type-scale, $content) {\n            margin: 0;\n        }\n    }\n\n    %cal-value--label {\n        @include igx-type-style($type-scale, $weekday-label)\n    }\n\n    %cal-value--year-current {\n        @include igx-type-style($type-scale, $content) {\n            font-size: rem(24px);\n            line-height: rem(52px);\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [$elevations] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The card background color.\n/// @param {Color} $outline-color [null] - The color of the outline for outlined type cards.\n/// @param {Color} $header-text-color [null] - The text color of the card title.\n/// @param {Color} $subtitle-text-color [null] - The text color of the card subtitle.\n/// @param {Color} $content-text-color [null] - The text color of the card content.\n/// @param {Color} $actions-text-color [null] - The text color of the card buttons.\n/// @param {box-shadow} $resting-shadow [null] - The shadow of the card in its resting state.\n/// @param {box-shadow} $hover-shadow [null] - The shadow of the card in its hover state.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for card component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the background and content text colors in card\n///   $my-card-theme: igx-card-theme(\n///     $background: #fff,\n///     $content-text-color: rgba(0, 0, 0, .8)\n///   );\n///   // Pass the theme to the igx-card component mixin\n///   @include igx-card($my-card-theme);\n@function igx-card-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $background: null,\n    $outline-color: null,\n    $header-text-color: null,\n    $subtitle-text-color: null,\n    $content-text-color: null,\n    $actions-text-color: null,\n    $resting-shadow: null,\n    $hover-shadow: null,\n) {\n    $name: 'igx-card';\n    $card-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $card-schema: map.get($schema, $name);\n    } @else {\n        $card-schema: $schema;\n    }\n\n    $theme: apply-palette($card-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($card-schema, 'border-radius')),0 ,24px\n    );\n\n    @if not($header-text-color) and $background {\n        $header-text-color: text-contrast($background);\n    }\n\n    @if not($actions-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $actions-text-color: rgba(text-contrast($background), .5);\n        }\n    }\n\n    @if not($content-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $content-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($subtitle-text-color) and $background {\n        @if meta.type-of($background) == 'color' {\n            $subtitle-text-color: rgba(text-contrast($background), .7);\n        }\n    }\n\n    @if not($resting-shadow) {\n        $resting-elevation: map.get($card-schema, 'resting-elevation');\n        $resting-shadow: igx-elevation($elevations, $resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map.get($card-schema, 'hover-elevation');\n        $hover-shadow: igx-elevation($elevations, $hover-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        outline-color: $outline-color,\n        border-radius: $border-radius,\n        header-text-color: $header-text-color,\n        subtitle-text-color: $subtitle-text-color,\n        content-text-color: $content-text-color,\n        actions-text-color: $actions-text-color,\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow,\n    ));\n}\n\n/// Card Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires var-get\n@mixin igx-card($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $not-material-theme: $variant != 'material';\n\n    $card-heading-padding: rem(16px);\n    $card-heading-compact-padding: rem(16px, 16px);\n    $card-content-padding: rem(14px);\n    $card-actions-padding: rem(8px);\n\n    $card-tgroup-margin: 0 em(16px);\n\n    $card-transitions: box-shadow .3s cubic-bezier(.25, .8, .25, 1);\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-card-display {\n        display: flex;\n        flex-direction: column;\n        box-shadow: var-get($theme, 'resting-shadow');\n        overflow: hidden;\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background');\n        transition: $card-transitions;\n        backface-visibility: hidden;\n\n        @if $not-material-theme {\n            border: 1px solid var-get($theme, 'outline-color');\n        }\n\n        &:hover {\n            box-shadow: var-get($theme, 'hover-shadow');\n        }\n    }\n\n    %igx-card--outlined {\n        box-shadow: none;\n        border: 1px solid var-get($theme, 'outline-color');\n\n        &:hover {\n            box-shadow: none;\n        }\n    }\n\n    %igx-card--horizontal {\n        flex-direction: row;\n    }\n\n    %igx-card-header {\n        display: flex;\n        flex: 1 1 auto;\n        flex-flow: row wrap;\n        align-content: flex-start;\n        width: 100%;\n        padding: $card-heading-padding;\n        color: var-get($theme, 'header-text-color');\n\n        &:empty {\n            display: block;\n            padding: 0;\n        }\n    }\n\n    %igx-card-header--vertical {\n        flex-flow: column nowrap;\n\n        %igx-card-header-titles {\n            text-align: center;\n        }\n\n        %igx-card-header-thumbnail {\n            display: flex;\n            justify-content: center;\n            align-self: unset;\n            margin-#{$right}: 0;\n            margin-bottom: rem(16px);\n        }\n    }\n\n    %igx-card-header--compact {\n        padding: $card-heading-compact-padding;\n    }\n\n    %igx-card-header-thumbnail {\n        align-self: flex-start;\n        margin-#{$right}: rem(16px);\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-titles {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow: hidden;\n        flex: 1 1 auto;\n        justify-content: center;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-header-subtitle {\n        color: var-get($theme, 'subtitle-text-color');\n    }\n\n    %igx-card-tgroup {\n        margin: $card-tgroup-margin;\n    }\n\n    %igx-card-content {\n        display: block;\n        width: 100%;\n        flex: 1 1 auto;\n        padding: $card-content-padding;\n        color: var-get($theme, 'content-text-color');\n    }\n\n    %igx-card-media {\n        display: block;\n        overflow: hidden;\n        line-height: 0;\n\n        > * {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n    }\n\n    %igx-card-media--right {\n        width: auto;\n        margin-#{$left}: auto;\n        order: 9999;\n    }\n\n    %igx-card-actions {\n        display: flex;\n        flex-flow: row wrap;\n        justify-content: space-between;\n        flex: 0 1 auto;\n        align-items: center;\n        padding: $card-actions-padding;\n\n        [igxButton] ~ [igxButton] {\n            margin-#{$left}: rem(8px);\n        }\n    }\n\n    %igx-card-actions--vertical {\n        flex-direction: column;\n\n        @include if-rtl() {\n            order: -1;\n        }\n    }\n\n    %igx-card-actions__icons {\n        display: flex;\n        align-items: center;\n        order: 1;\n        color: var-get($theme, 'actions-text-color');\n        margin-#{$left}: auto;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons {\n        display: flex;\n        align-items: center;\n        order: 0;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__buttons--justify,\n    %igx-card-actions__icons--justify {\n        justify-content: space-around;\n        flex-grow: 1;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-card-actions__icons--vertical,\n    %igx-card-actions__buttons--vertical {\n        flex-direction: column;\n\n        [igxButton] ~ [igxButton] {\n            margin-#{$left}: 0;\n            margin-top: rem(8px);\n        }\n    }\n\n    %igx-card-actions__icons--vertical {\n        margin-top: auto;\n        margin-#{$left}: 0;\n    }\n\n    %igx-card-actions__icons--reverse {\n        order: 0;\n        margin-#{$left}: 0;\n    }\n\n    %igx-card-actions__buttons--reverse {\n        order: 1;\n        margin-#{$left}: auto;\n    }\n\n    %igx-card-actions__icons--vertical-reverse {\n        margin: 0;\n        margin-bottom: auto;\n    }\n\n    %igx-card-actions__buttons--vertical-reverse {\n        margin: 0;\n        margin-top: auto;\n    }\n\n    %igx-card-actions-bgroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        [igxButton] ~ [igxButton] {\n            margin-#{$left}: 8px;\n        }\n    }\n\n    %igx-card-actions-igroup {\n        display: flex;\n        flex-flow: row nowrap;\n\n        %igx-button--icon {\n            color: var-get($theme, 'actions-text-color');\n        }\n    }\n\n    %igx-card-actions-igroup--start {\n        margin-#{$right}: auto;\n    }\n\n    %igx-card-actions-igroup--end {\n        margin-#{$left}: auto;\n    }\n}\n\n/// Adds typography styles for the igx-card component.\n/// Uses the 'h5', 'subtitle-2' and 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6', title-small: 'subtitle-2', subtitle: 'subtitle-2', content: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-card-typography($type-scale, $categories: (\n    title: 'h6',\n    title-small: 'subtitle-2',\n    subtitle: 'subtitle-2',\n    content: 'body-2')\n) {\n    $title: map.get($categories, 'title');\n    $title-small: map.get($categories, 'title-small');\n    $subtitle: map.get($categories, 'subtitle');\n    $content: map.get($categories, 'content');\n\n    %igx-card-header-title {\n        @include igx-type-style($type-scale, $title) {\n            margin: 0;\n        }\n    }\n\n    %igx-card-header-title--small {\n        @include igx-type-style($type-scale, $title-small) {\n            margin: 0;\n        }\n    }\n\n    %igx-card-header-subtitle {\n        @include igx-type-style($type-scale, $subtitle) {\n            margin: 0;\n        }\n    }\n\n    %igx-card-content > p {\n        @include igx-type-style($type-scale, $content) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../utilities' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-in-center {\n    @include keyframes(scale-in-center) {\n        0% {\n            transform: scale(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bl {\n    @include keyframes(scale-in-bl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-center {\n    @include keyframes(scale-in-ver-center) {\n        0% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-top {\n    @include keyframes(scale-in-top) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-left {\n    @include keyframes(scale-in-left) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-top {\n    @include keyframes(scale-in-ver-top) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tr {\n    @include keyframes(scale-in-tr) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-tl {\n    @include keyframes(scale-in-tl) {\n        0% {\n            transform: scale(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-ver-bottom {\n    @include keyframes(scale-in-ver-bottom) {\n        0% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-right {\n    @include keyframes(scale-in-right) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-center {\n    @include keyframes(scale-in-hor-center) {\n        0% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-br {\n    @include keyframes(scale-in-br) {\n        0% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-left {\n    @include keyframes(scale-in-hor-left) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-bottom {\n    @include keyframes(scale-in-bottom) {\n        0% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-in-hor-right {\n    @include keyframes(scale-in-hor-right) {\n        0% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use '../../utilities' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-out-center {\n    @include keyframes (scale-out-center) {\n        0% {\n            transform: scale(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bl {\n    @include keyframes (scale-out-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-vertical {\n    @include keyframes (scale-out-vertical) {\n        0% {\n            transform: scaleY(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-top {\n    @include keyframes (scale-out-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-left {\n    @include keyframes (scale-out-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-top {\n    @include keyframes (scale-out-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tr {\n    @include keyframes (scale-out-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 0%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-tl {\n    @include keyframes (scale-out-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-ver-bottom {\n    @include keyframes (scale-out-ver-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleY(0);\n            transform-origin: 0% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-right {\n    @include keyframes (scale-out-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 50%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-horizontal {\n    @include keyframes (scale-out-horizontal) {\n        0% {\n            transform: scaleX(1);\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-br {\n    @include keyframes (scale-out-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-left {\n    @include keyframes (scale-out-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 0 0;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-bottom {\n    @include keyframes (scale-out-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scale(0);\n            transform-origin: 50% 100%;\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-out-hor-right {\n    @include keyframes (scale-out-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n\n        100% {\n            transform: scaleX(0);\n            transform-origin: 100% 100%;\n            opacity: 1;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $slide-background [null] - The slide background color.\n/// @param {Color} $button-background [null] - The previous/next buttons idle background color.\n/// @param {Color} $button-hover-background [null] - The previous/next buttons hover background color.\n/// @param {Color} $button-disabled-background [null] - The previous/next buttons disabled background color.\n/// @param {Color} $button-arrow-color [null] - The previous/next buttons idle arrow color.\n/// @param {Color} $button-hover-arrow-color [null] - The previous/next buttons hover arrow color.\n/// @param {Color} $button-disabled-arrow-color [null] - The previous/next buttons disabled arrow color.\n/// @param {Color} $indicator-dot-color [null] - The idle indicator dot color.\n/// @param {Color} $indicator-border-color [null] - The idle indicator border color.\n/// @param {Color} $indicator-active-dot-color [null] - The active indicator dot color.\n/// @param {Color} $indicator-active-border-color [null] - The active indicator border color.\n/// @param {box-shadow} $button-shadow [null] - Shadow underneath the previous/next buttons.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for carousel component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the previous/next button colors\n///   $my-carousel-theme: igx-carousel-theme(\n///     $button-background: black,\n///     $button-hover-background: white\n///   );\n///   // Pass the carousel theme to the igx-carousel component mixin\n///   @include igx-carousel($my-carousel-theme);\n@function igx-carousel-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $button-shadow: null,\n\n    $slide-background: null,\n\n    $button-background: null,\n    $button-hover-background: null,\n    $button-disabled-background: null,\n    $button-arrow-color: null,\n    $button-hover-arrow-color: null,\n    $button-disabled-arrow-color: null,\n\n    $indicator-dot-color: null,\n    $indicator-border-color: null,\n    $indicator-active-dot-color: null,\n    $indicator-active-border-color: null,\n){\n    $name: 'igx-carousel';\n    $carousel-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $carousel-schema: map.get($schema, $name);\n    } @else {\n        $carousel-schema: $schema;\n    }\n\n    $theme: apply-palette($carousel-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($carousel-schema, 'border-radius')),0 ,36px\n    );\n\n    @if not($button-shadow) {\n        $button-elevation: map.get($carousel-schema, 'button-elevation');\n        $button-shadow: igx-elevation($elevations, $button-elevation);\n    }\n\n    @if not($button-arrow-color) and $button-background {\n        $button-arrow-color: text-contrast($button-background);\n    }\n\n    @if not($button-hover-arrow-color) and $button-hover-background {\n        $button-hover-arrow-color: text-contrast($button-hover-background);\n    }\n\n    @if not($button-disabled-arrow-color) and $button-disabled-background {\n        @if meta.type-of($button-disabled-background) == 'color' {\n            $button-disabled-arrow-color: rgba(text-contrast($button-disabled-background), .3);\n        }\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        slide-background: $slide-background,\n\n        border-radius: $border-radius,\n        button-shadow: $button-shadow,\n\n        button-background: $button-background,\n        button-disabled-background: $button-disabled-background,\n        button-hover-background: $button-hover-background,\n        button-arrow-color: $button-arrow-color,\n        button-hover-arrow-color: $button-hover-arrow-color,\n        button-disabled-arrow-color: $button-disabled-arrow-color,\n\n        indicator-dot-color: $indicator-dot-color,\n        indicator-border-color: $indicator-border-color,\n        indicator-active-dot-color: $indicator-active-dot-color,\n        indicator-active-border-color: $indicator-active-border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires igx-color\n/// @requires igx-elevation\n/// @requires {mixin} animation\n/// @requires {mixin} scale-in-center\n/// @requires {mixin} scale-out-center\n/// @requires var-get\n@mixin igx-carousel($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    @include scale-in-center();\n    @include scale-out-center();\n\n    $carousel-arrow-margin: 0 16px;\n    $carousel-indicators-margin: 16px 0;\n    $carousel-indicators-padding: 0;\n    $carousel-indicator-margin: 0 5px;\n    $indicator-border-style: 2px solid;\n\n    $variant: map.get($theme, variant);\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    %igx-carousel-display {\n        display: flex;\n        position: relative;\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        align-items: center;\n        flex-flow: column nowrap;\n    }\n\n    %igx-nav-arrow {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 46px;\n        height: 46px;\n        cursor: pointer;\n        @if $not-bootstrap-theme {\n            border-radius: 50%;\n        } @else {\n            border-radius: var-get($theme, 'border-radius');\n        }\n\n        outline-style: none;\n        transition: all .15s ease-in-out;\n        color: var-get($theme, 'button-arrow-color');\n        background: var-get($theme, 'button-background');\n        box-shadow: var-get($theme, 'button-shadow');\n    }\n\n    %igx-nav-arrow--disabled {\n        background: var-get($theme, 'button-disabled-background');\n        color: var-get($theme, 'button-disabled-arrow-color');\n        pointer-events: none;\n        box-shadow: none;\n\n        igx-icon {\n            color: currentColor;\n        }\n    }\n\n    %igx-nav-arrow--hover {\n        color: var-get($theme, 'button-hover-arrow-color');\n        background: var-get($theme, 'button-hover-background');\n    }\n\n    %igx-carousel-arrow {\n        margin: $carousel-arrow-margin;\n        position: absolute;\n        top: 50%;\n        transform: translateY(-50%);\n        z-index: 3;\n        outline: none;\n        user-select: none;\n    }\n\n    %igx-carousel-arrow--next {\n        #{$right}: 0;\n    }\n\n    %igx-carousel-arrow--prev {\n        #{$left}: 0;\n    }\n\n    %igx-carousel-arrow--next,\n    %igx-carousel-arrow--prev {\n        @include if-rtl() {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %igx-carousel-indicators {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin: $carousel-indicators-margin;\n        padding: $carousel-indicators-padding;\n        list-style: none;\n        z-index: 10;\n        #{$left}: 50%;\n\n        @include if-ltr() {\n            transform: translateX(-50%);\n        }\n\n        @include if-rtl() {\n            transform: translateX(50%);\n        }\n    }\n\n    %igx-carousel-indicators--bottom {\n        bottom: 0;\n    }\n\n    %igx-carousel-indicators--top {\n        top: 0;\n    }\n\n    %igx-carousel-indicators-label {\n        align-items: center;\n        // TODO: this should be wrapped in carousel typogrpahy\n        font-size: rem(16px);\n    }\n\n    %igx-carousel-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin: $carousel-indicator-margin;\n        cursor: pointer;\n    }\n\n    %igx-nav-dot {\n        position: relative;\n        width: 12px;\n        height: 12px;\n        text-indent: -9999px;\n\n        @if $variant != 'indigo-design' {\n            border: $indicator-border-style;\n            border-color: var-get($theme, 'indicator-border-color');\n            box-shadow: igx-elevation($elevation: 1);\n            opacity: .7;\n        }\n\n        border-radius: 50%;\n        transition: all .15s $ease-out-quad;\n\n        &::after {\n            @if $variant != 'indigo-design' {\n                @include animation('scale-out-center' .15s $ease-out-quad forwards);\n            }\n            content: '';\n            position: absolute;\n            @if $variant != 'indigo-design' {\n                top: 1px;\n                bottom: 1px;\n                #{$left}: 1px;\n                #{$right}: 1px;\n            } @else {\n                top: 0;\n                bottom: 0;\n                #{$left}: 0;\n                #{$right}: 0;\n            }\n            border-radius: inherit;\n            background: var-get($theme, 'indicator-dot-color');\n        }\n\n        &:hover {\n            opacity: 1;\n        }\n    }\n\n    %igx-nav-dot--active {\n        @if $variant != 'indigo-design' {\n            border: $indicator-border-style;\n            border-color: var-get($theme, 'indicator-active-border-color');\n        }\n\n        opacity: 1;\n\n        &::after {\n            background: var-get($theme, 'indicator-active-dot-color');\n            @if $variant != 'indigo-design' {\n                @include animation('scale-in-center' .15s $ease-out-quad forwards);\n            }\n        }\n    }\n\n    %igx-carousel-slide-wrapper {\n        position: relative;\n        width: 100%;\n        height: inherit;\n        overflow: hidden;\n        outline-style: none;\n        border-radius: var-get($theme, 'border-radius');\n        min-height: 300px;\n        min-width: 300px;\n    }\n\n    %igx-carousel-slide {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        z-index: -1;\n        background: var-get($theme, 'slide-background');\n        visibility: hidden;\n    }\n\n    %igx-carousel-slide--previous {\n        z-index: 1;\n        visibility: visible;\n    }\n\n    %igx-carousel-slide--current {\n        z-index: 2;\n        visibility: visible;\n    }\n\n    %igx-carousel-slide img {\n        width: inherit;\n        height: inherit;\n        object-fit: cover;\n        touch-action: none;\n        pointer-events: none;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {color} $bar-color [null] - The background color of the bar.\n/// @param {color} $handle-color [null] - The color for the bar drag handle.\n/// @param {color} $expander-color [null] - The color for the arrow expander's.\n/// @param {number} $border-radius [null] - the border radios of the splitter bar drag handle\n/// @param {color} $focus-color [null] - The color used for focused splitter bar.\n/// @param {number} $size [null] - The size of the splitter, its width for vertical and height for horizontal splitter.\n///\n@function igx-splitter-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $bar-color: null,\n    $handle-color: null,\n    $expander-color: null,\n    $border-radius: null,\n    $focus-color: null,\n    $size: null\n) {\n    $name: 'igx-splitter';\n    $splitter-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $splitter-schema: map.get($schema, $name);\n    } @else {\n        $splitter-schema: $schema;\n    }\n\n    $theme: apply-palette($splitter-schema, $palette);\n\n    $border-radius-handle: round-borders(\n        if($border-radius, $border-radius, map.get($splitter-schema, 'border-radius')), 0, 2px\n    );\n\n    $theme: apply-palette($splitter-schema, $palette);\n\n    @if not($handle-color) and $bar-color {\n        $handle-color: text-contrast($bar-color);\n    }\n\n    @if not($expander-color) and $bar-color {\n        $expander-color: text-contrast($bar-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        bar-color: $bar-color,\n        handle-color: $handle-color,\n        expander-color: $expander-color,\n        border-radius: $border-radius-handle,\n        focus-color: $focus-color,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-splitter($theme) {\n    @include igx-css-vars($theme);\n    $splitter-color: var-get($theme, 'bar-color');\n    $hitbox-size: 4px;\n    $debug-hitbox: false;\n    $hitbox-debug-color: rgba(coral, .24);\n\n    $variant: map.get($theme, 'variant');\n\n    %handle-area {\n        position: absolute;\n        content: '';\n        width: 100%;\n        height: $hitbox-size;\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\n    }\n\n    %handle-area--vertical {\n        width: $hitbox-size;\n        height: 100%;\n    }\n\n    %igx-splitter-bar {\n        position: relative;\n        display: flex;\n        flex-grow: 1;\n        justify-content: center;\n        align-items: center;\n        background: $splitter-color;\n        border: 1px solid $splitter-color;\n        z-index: 99;\n        opacity: .68;\n        transition: opacity .15s $ease-out-quad !important;\n\n        &::before {\n            @extend %handle-area;\n            top: 100%;\n        }\n\n        &::after {\n            @extend %handle-area;\n            bottom: 100%;\n        }\n\n        &:hover {\n            transition: all .25s ease-out;\n            opacity: 1;\n        }\n    }\n\n    %igx-splitter-bar--focus {\n        // Remove the default browser outline styles\n        outline: transparent solid 1px;\n        box-shadow: inset 0 0 0 1px var-get($theme, 'focus-color');\n\n        @if $variant == 'indigo-design' {\n            background: var-get($theme, 'focus-color');\n        }\n    }\n\n    %igx-splitter-bar--vertical {\n        flex-direction: column;\n        height: 100%;\n\n        &::before {\n            @extend %handle-area--vertical;\n            top: 0;\n            right: 100%;\n        }\n\n        &::after {\n            @extend %handle-area--vertical;\n            top: 0;\n            left: 100%;\n        }\n    }\n\n    %igx-splitter-handle {\n        background: var-get($theme, 'handle-color');\n        border-radius: var-get($theme, 'border-radius');\n    }\n\n    %igx-splitter-handle--horizontal {\n        width: 25%;\n        height: var-get($theme, 'size');\n        margin: 0 rem(48px);\n    }\n\n    %igx-splitter-handle--vertical {\n        width: var-get($theme, 'size');\n        height: 25%;\n        margin: rem(48px) 0;\n    }\n\n    %igx-splitter-hitbox {\n        position: absolute;\n        content: '';\n        background: if($debug-hitbox, $hitbox-debug-color, transparent);\n    }\n\n    %igx-splitter-expander {\n        position: relative;\n        width: 0;\n        height: 0;\n        border-right: var-get($theme, 'size') solid transparent;\n        border-left: var-get($theme, 'size') solid transparent;\n        cursor: pointer;\n        z-index: 1;\n    }\n\n    %igx-splitter-expander--start {\n        border-bottom: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - #{map.get($theme, 'size')});\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 4);\n            height: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n\n    %igx-splitter-expander--end {\n        border-bottom: unset;\n        border-top: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 4);\n            height: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n\n    %igx-splitter-expander--start-vertical {\n        border-top: var-get($theme, 'size') solid transparent;\n        border-right: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n        border-bottom: var-get($theme, 'size') solid transparent;\n        border-left: unset;\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            width: calc(#{map.get($theme, 'size')} * 3);\n            height: calc(#{map.get($theme, 'size')} * 4);\n        }\n    }\n\n    %igx-splitter-expander--end-vertical {\n        border-top: var-get($theme, 'size') solid transparent;\n        border-right: unset;\n        border-bottom: var-get($theme, 'size') solid transparent;\n        border-left: var-get($theme, 'size') solid var-get($theme, 'expander-color');\n\n        &::before {\n            @extend %igx-splitter-hitbox;\n            left: calc(100% - (#{map.get($theme, 'size')} * 2));\n            top: calc(100% - (#{map.get($theme, 'size')} * 2));\n            height: calc(#{map.get($theme, 'size')} * 4);\n            width: calc(#{map.get($theme, 'size')} * 3);\n        }\n    }\n}\n","@use '../../utilities' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin scale-up-center {\n    @include keyframes(scale-up-center) {\n        0% {\n            transform: scale(.5)\n        }\n\n        100% {\n            transform: scale(1)\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bl {\n    @include keyframes(scale-up-bl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-center {\n    @include keyframes(scale-up-ver-center) {\n        0% {\n            transform: scaleY(.4);\n        }\n\n        100% {\n            transform: scaleY(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-top {\n    @include keyframes(scale-up-top) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-left {\n    @include keyframes(scale-up-left) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-top {\n    @include keyframes(scale-up-ver-top) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tr {\n    @include keyframes(scale-up-tr) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-tl {\n    @include keyframes(scale-up-tl) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-ver-bottom {\n    @include keyframes(scale-up-ver-bottom) {\n        0% {\n            transform: scaleY(.4);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-right {\n    @include keyframes(scale-up-right) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-center {\n    @include keyframes(scale-up-hor-center) {\n        0% {\n            transform: scaleX(.4);\n        }\n\n        100% {\n            transform: scaleX(1);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-br {\n    @include keyframes(scale-up-br) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-left {\n    @include keyframes(scale-up-hor-left) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-bottom {\n    @include keyframes(scale-up-bottom) {\n        0% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-up-hor-right {\n    @include keyframes(scale-up-hor-right) {\n        0% {\n            transform: scaleX(.4);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-center {\n    @include keyframes(scale-down-center) {\n        0% {\n            transform: scale(1);\n        }\n\n        100% {\n            transform: scale(.5);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bl {\n    @include keyframes(scale-down-bl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-center {\n    @include keyframes(scale-down-ver-center) {\n        0% {\n            transform: scaleY(1);\n        }\n\n        100% {\n            transform: scaleY(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-top {\n    @include keyframes(scale-down-top) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-left {\n    @include keyframes(scale-down-left) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top {\n    @include keyframes(scale-down-ver-top) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tr {\n    @include keyframes(scale-down-tr) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-tl {\n    @include keyframes(scale-down-tl) {\n        0% {\n            transform: scale(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-ver-top-bottom {\n    @include keyframes(scale-down-ver-to-bottom) {\n        0% {\n            transform: scaleY(1);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: scaleY(.3);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-right {\n    @include keyframes(scale-down-right) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 50%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 50%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-center {\n    @include keyframes(scale-down-hor-center) {\n        0% {\n            transform: scaleX(1);\n        }\n\n        100% {\n            transform: scaleX(.3);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-br {\n    @include keyframes(scale-down-br) {\n        0% {\n            transform: scale(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-left {\n    @include keyframes(scale-down-hor-left) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-bottom {\n    @include keyframes(scale-down-bottom) {\n        0% {\n            transform: scale(1);\n            transform-origin: 50% 100%;\n        }\n\n        100% {\n            transform: scale(.5);\n            transform-origin: 50% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin scale-down-hor-right {\n    @include keyframes(scale-down-hor-right) {\n        0% {\n            transform: scaleX(1);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: scaleX(.3);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @param {number} $start-scale [.5] - The scale to start the animation from.\n/// @param {number} $end-scale [1] - The scale to end the animation at.\n/// @requires {mixin} keyframes\n@mixin scale-in-out($start-scale: .5, $end-scale: 1) {\n    @include keyframes(scale-in-out) {\n        50% {\n            transform: scale($start-scale);\n            transform-origin: 50% 50%;\n        }\n\n        100% {\n            transform: scale($end-scale);\n            transform-origin: 50% 50%;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../typography/base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-component' as *;\n@use '../ripple/ripple-theme' as *;\n@use 'sass:map';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Checkbox Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and fill colors.\n/// @param {Color} $tick-color [null] - The checked mark color.\n/// @param {Color} $disabled-color [null] - The disabled border and fill colors.\n/// @param {Color} $disabled-color-label [null] - The disabled label color.\n/// @param {border-radius} $border-radius [null] - The border radius used for checkbox component.\n/// @param {border-radius} $border-radius-ripple [null] - The border radius used for checkbox ripple.\n/// @param {Color} $focus-outline-color [null] - TThe focus outlined color.\n/// Set to light when the surrounding area is dark.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the checked fill color\n///   $my-checkbox-theme: igx-checkbox-theme($fill-color: magenta);\n///   // Pass the theme to the igx-checkbox component mixin\n///   @include igx-checkbox($my-checkbox-theme);\n@function igx-checkbox-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $tick-color: null,\n    $disabled-color: null,\n    $disabled-color-label: null,\n    $border-radius-ripple: null,\n    $focus-outline-color: null\n) {\n    $name: 'igx-checkbox';\n    $checkbox-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $checkbox-schema: map.get($schema, $name);\n    } @else {\n        $checkbox-schema: $schema;\n    }\n\n    $theme: apply-palette($checkbox-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($checkbox-schema, 'border-radius')), 0, 10px\n    );\n\n    $border-radius-ripple: round-borders(\n        if($border-radius-ripple, $border-radius-ripple, map.get($checkbox-schema, 'border-radius-ripple')), 0, 24px\n    );\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        tick-color: $tick-color,\n        disabled-color: $disabled-color,\n        disabled-color-label: $disabled-color-label,\n        border-radius: $border-radius,\n        border-radius-ripple: $border-radius-ripple,\n        focus-outline-color: $focus-outline-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} hide-default\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires igx-ripple-theme\n/// @requires rem\n/// @requires em\n/// @requires var-get\n@mixin igx-checkbox($theme) {\n    @include igx-css-vars($theme);\n\n    @include scale-in-out($start-scale: .9);\n\n    // If updating the WIDTH of the checkbox here, please update it in the grid theme as well.\n    // It is under the name of $cbx-size\n    $size: em(20px);\n    $size-bs: em(14px);\n    $checkbox-radius: math.div($size, 2);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $size: map.get((\n        material: $size,\n        fluent: $size,\n        bootstrap: $size-bs,\n        indigo-design: $size,\n    ), $variant);\n\n    $border-width: map.get((\n        material: 2px,\n        fluent: 1px,\n        bootstrap: 1px,\n        indigo-design: 2px,\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none,\n    ), $variant);\n\n    $label-margin: em(8px);\n\n    $mark-stroke: map.get((\n        material: 3,\n        fluent: 1,\n        bootstrap: 2,\n        indigo-design: 3,\n    ), $variant);\n\n    $mark-offset: map.get((\n        material: 0,\n        fluent: -1px,\n        bootstrap: 0,\n        indigo-design: 0,\n    ), $variant);\n\n    $mark-length: 24;\n    $mark-x-factor: math.div($mark-stroke, $mark-length);\n\n    $ripple-size: em(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $ripple-theme: igx-ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'fill-color')\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    @include scale-in-center();\n\n    %cbx-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        outline-style: none;\n    }\n\n    %cbx-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %cbx-input {\n        @include hide-default();\n    }\n\n    %cbx-composite-wrapper {\n        align-items: center;\n        justify-content: center;\n        display: flex;\n        position: relative;\n        width: $size;\n        height: $size;\n    }\n\n    %cbx-composite {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        border-width: rem($border-width);\n        border-style: solid;\n        border-color: var-get($theme, 'empty-color');\n        border-radius: var-get($theme, 'border-radius');\n        -webkit-tap-highlight-color: transparent;\n        transition: border-color .2s $ease-out-quad;\n        overflow: hidden;\n\n        &::after {\n            position: absolute;\n            content: '';\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            transition: background .2s $ease-out-quad;\n        }\n    }\n\n    %cbx-composite--x {\n        border-color: var-get($theme, 'fill-color');\n        background: var-get($theme, 'fill-color');\n\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %cbx-composite--disabled {\n        border-color: var-get($theme, 'disabled-color');\n        background: transparent;\n\n        @if $bootstrap-theme {\n            %cbx-composite-mark {\n                stroke: var-get($theme, 'empty-color');\n            }\n        }\n    }\n\n    %cbx-composite--x--disabled {\n        @if $bootstrap-theme {\n            background: transparent;\n        } @else {\n            background: var-get($theme, 'disabled-color');\n        }\n\n        &::after {\n            @if $bootstrap-theme {\n                background: transparent;\n            } @else {\n                background: var-get($theme, 'disabled-color');\n            }\n        }\n\n        @if $bootstrap-theme {\n            %cbx-composite-mark--x {\n                stroke: var-get($theme, 'empty-color');\n            }\n        }\n    }\n\n    %cbx-composite-mark {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        stroke: var-get($theme, 'tick-color');\n        stroke-linecap: square;\n        stroke-width: $mark-stroke;\n        stroke-dasharray: $mark-length;\n        stroke-dashoffset: $mark-length;\n        fill: none;\n        opacity: 0;\n        z-index: 1;\n        transition: opacity .1s $ease-out-quad;\n    }\n\n    %igx-checkbox--indeterminate {\n        %cbx-composite-mark {\n            top: $mark-offset;\n            left: $mark-offset;\n        }\n    }\n\n    %cbx-composite-mark--x {\n        stroke-dashoffset: 0;\n        opacity: 1;\n        transition: all .2s $ease-out-quad, opacity .2s $ease-out-quad;\n    }\n\n    %cbx-composite-mark--in {\n        stroke-dashoffset: 41; /* length of path - adjacent line length */\n        opacity: 1;\n        transform: rotate(45deg) translateX(-#{$mark-x-factor}em);\n    }\n\n    %cbx-label {\n        display: inline-block;\n        color: var-get($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--before,\n    %cbx-label-pos--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %cbx-label-pos--after {\n        margin-#{$left}: $label-margin;\n    }\n\n    %cbx-label-pos--before {\n        margin-#{$right}: $label-margin;\n        order: -1;\n    }\n\n    %cbx-label--disabled {\n        color: var-get($theme, 'disabled-color-label');\n    }\n\n    %cbx-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        right: calc(100% - #{$ripple-radius} - #{$checkbox-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: var-get($theme, 'border-radius-ripple');\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n    }\n\n    %igx-checkbox--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                left: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 1px var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 2px var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-checkbox--focused-checked {\n        @if $variant == 'indigo-design' {\n            %cbx-composite {\n                border-radius: var-get($theme, 'border-radius');\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %cbx-ripple--focused {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %cbx-ripple--focused-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %cbx-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %cbx-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'empty-color');\n        }\n    }\n\n    %cbx-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %cbx-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n\n    %cbx-display--plain {\n        %cbx-composite,\n        %cbx-composite::after,\n        %cbx-composite-mark,\n        %cbx-composite-mark--x {\n            transition: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-checkbox-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %cbx-label {\n        @include igx-type-style($type-scale, $label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Chip Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {String} $border-radius [null] - The chip border-radius.\n///\n/// @param {Color} $text-color [null] - The chip text color.\n/// @param {Color} $background [null] - The chip background color.\n/// @param {Color} $border-color [null] - The chip border color.\n/// @param {Color} $ghost-background [null] - The chip ghost background color.\n/// @param {box-shadow} $ghost-shadow [null] - The chip ghost shadow.\n///\n/// @param {Color} $hover-text-color [null] - The chip text hover color.\n/// @param {Color} $hover-background [null] - The chip hover background color.\n/// @param {Color} $hover-border-color [null] - The chip hover border color.\n///\n/// @param {Color} $focus-text-color [null] - The chip text focus color.\n/// @param {Color} $focus-background [null] - The chip focus background color.\n/// @param {color} $focus-border-color [null] - The chip focus border color.\n///\n/// @param {color} $selected-text-color [null] - The selected chip text color.\n/// @param {color} $selected-background [null] - The selected chip background color.\n/// @param {color} $selected-border-color [null] The selected chip border color.\n///\n/// @param {color} $hover-selected-text-color [null] - The selected chip hover text color.\n/// @param {color} $hover-selected-background [null] - The selected chip hover background color.\n/// @param {color} $hover-selected-border-color [null] - The selected chip hover border color.\n///\n/// @param {color} $focus-selected-text-color [null] - The selected chip text focus color.\n/// @param {color} $focus-selected-background [null] - The selected chip focus background color.\n/// @param {color} $focus-selected-border-color [null] - The selected chip focus border color.\n///\n/// @param {color} $remove-icon-color [null] - The remove icon color for the chip.\n/// @param {color} $remove-icon-color-focus [null] - The remove icon color on focus for the chip.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires luminance\n///\n/// @example scss Change the background color\n///   $my-chip-theme: igx-chip-theme($background: black);\n///   // Pass the theme to the igx-chip component mixin\n///   @include igx-chip($my-chip-theme);\n@function igx-chip-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n    $border-radius: null,\n\n    $text-color: null,\n    $background: null,\n    $border-color: null,\n    $ghost-background: null,\n\n    $hover-text-color: null,\n    $hover-background: null,\n    $hover-border-color: null,\n\n    $focus-text-color: null,\n    $focus-background: null,\n    $focus-border-color: null,\n    $focus-outline-color: null,\n\n    $selected-text-color: null,\n    $selected-background: null,\n    $selected-border-color: null,\n\n    $hover-selected-text-color: null,\n    $hover-selected-background: null,\n    $hover-selected-border-color: null,\n\n    $focus-selected-text-color: null,\n    $focus-selected-background: null,\n    $focus-selected-border-color: null,\n    $focus-selected-outline-color: null,\n\n    $ghost-shadow: null,\n    $remove-icon-color: null,\n    $remove-icon-color-focus: null,\n) {\n    $name: 'igx-chip';\n    $selector: 'igx-chip, .igx-chip__ghost, .igx-chip__ghost--compact, .igx-chip__ghost--cosy';\n    $chip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $chip-schema: map.get($schema, $name);\n    } @else {\n        $chip-schema: $schema;\n    }\n\n    $theme: apply-palette($chip-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($chip-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($hover-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $hover-background: lighten-color($background, 14%);\n        } @else {\n            $hover-background: darken-color($background, 4%);\n        }\n    }\n\n    @if not($hover-text-color) and $hover-background {\n        $hover-text-color: text-contrast(to-opaque($hover-background));\n    }\n\n    @if not($focus-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-background: lighten-color($background, 22%);\n        } @else {\n            $focus-background: darken-color($background, 8%);\n        }\n    }\n\n    @if not($focus-text-color) and $focus-background {\n        $focus-text-color: text-contrast(to-opaque($focus-background));\n    }\n\n    @if not($selected-background) and $background {\n        $luminance: luminance($background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $selected-background: lighten-color($background, 22%);\n        } @else {\n            $selected-background: darken-color($background, 8%);\n        }\n    }\n\n    @if not($selected-text-color) and $selected-background {\n        $selected-text-color: text-contrast(to-opaque($selected-background));\n    }\n\n    @if not($hover-selected-background) and $hover-background {\n        $hover-selected-background: $hover-background;\n    }\n\n    @if not($hover-selected-text-color) and $hover-selected-background {\n        $hover-selected-text-color: text-contrast(to-opaque($hover-selected-background));\n    }\n\n    @if not($focus-selected-background) and $selected-background {\n        $luminance: luminance($selected-background);\n\n        @if meta.type-of($luminance) == 'color' and $luminance + .05 < .5 {\n            $focus-selected-background: lighten-color($background, 32%);\n        } @else {\n            $focus-selected-background: darken-color($background, 16%);\n        }\n    }\n\n    @if not($focus-selected-text-color) and $focus-selected-background {\n        $focus-selected-text-color: text-contrast(to-opaque($focus-selected-background));\n    }\n\n    @if not($hover-border-color) and $border-color {\n        $hover-border-color: $border-color;\n    }\n\n    @if not($focus-border-color) and $border-color {\n        $focus-border-color: $border-color;\n    }\n\n    @if not($selected-border-color) and $border-color {\n        $selected-border-color: $border-color;\n    }\n\n    @if not($hover-selected-border-color) and $border-color {\n        $hover-selected-border-color: $border-color;\n    }\n\n    @if not($focus-selected-border-color) and $border-color {\n        $focus-selected-border-color: $border-color;\n    }\n\n    @if not($ghost-shadow) {\n        $ghost-elevation: map.get($chip-schema, 'ghost-elevation');\n        $ghost-shadow: igx-elevation($elevations, $ghost-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        border-radius: $border-radius,\n\n        text-color: $text-color,\n        background: $background,\n        border-color: $border-color,\n        ghost-background: $ghost-background,\n\n        hover-text-color: $hover-text-color,\n        hover-background: $hover-background,\n        hover-border-color: $hover-border-color,\n\n        focus-text-color: $focus-text-color,\n        focus-background: $focus-background,\n        focus-border-color: $focus-border-color,\n\n        selected-text-color: $selected-text-color,\n        selected-background: $selected-background,\n        selected-border-color: $selected-border-color,\n\n        hover-selected-text-color: $hover-selected-text-color,\n        hover-selected-background: $hover-selected-background,\n        hover-selected-border-color: $hover-selected-border-color,\n\n        focus-selected-text-color: $focus-selected-text-color,\n        focus-selected-background: $focus-selected-background,\n        focus-selected-border-color: $focus-selected-border-color,\n\n        ghost-shadow: $ghost-shadow,\n        remove-icon-color: $remove-icon-color,\n        remove-icon-color-focus: $remove-icon-color-focus,\n        focus-selected-outline-color: $focus-selected-outline-color,\n        focus-outline-color: $focus-outline-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-chip($theme) {\n    @include igx-css-vars($theme);\n\n    $transition: all 120ms $ease-in-out-quad;\n    $chip-max-width: 32ch;\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $chip-height-material: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-height-fluent: (\n        comfortable: rem(26px),\n        cosy: rem(24px),\n        compact: rem(18px)\n    );\n\n    $chip-height: map.get((\n        material: $chip-height-material,\n        fluent: $chip-height-fluent,\n        bootstrap: $chip-height-material,\n        indigo-design: $chip-height-material\n    ), $variant);\n\n    $chip-padding: (\n        comfortable: 0 rem(8px),\n        cosy: 0 rem(4px),\n        compact: 0 rem(2px)\n    );\n\n    $box-shadow: map.get((\n        material: null,\n        fluent: null,\n        bootstrap: 0 0 0 rem(3px) var-get($theme, 'hover-background'),\n        indigo-design: null\n    ), $variant);\n\n    $item-padding: 4px;\n    $chip-item-padding: 0 rem($item-padding);\n\n    $chip-avatar-inset: map.get((\n        material: 0,\n        fluent: -$item-padding,\n        bootstrap: 0,\n        indigo-design: 0\n    ), $variant);\n\n    $chip-icon-size: (\n        comfortable: rem(18px),\n        cosy: rem(18px),\n        compact: rem(16px)\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-chip-area {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        width: 100%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip {\n        @extend  %igx-chip-custom-icon;\n\n        position: relative;\n        display: inline-flex;\n        flex-shrink: 0;\n        transition: $transition;\n        transition-property: top, left;\n        touch-action: none;\n\n        &:focus {\n            outline-style: none;\n\n            %igx-chip__item {\n                @extend %igx-chip__item--focus;\n            }\n\n            %igx-chip__item--selected {\n                @extend %igx-chip__item--focus-selected;\n            }\n        }\n\n        &:hover {\n            %igx-chip__item {\n                @extend %igx-chip__item--hover;\n            }\n\n            %igx-chip__item--selected {\n                @extend %igx-chip__item--hover-selected;\n            }\n        }\n\n        // We target the tag selector directly to\n        // avoid having to set custom classes on the prefix\n        // and suffix based on the host element.\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-chip__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-chip__suffix;\n        }\n    }\n\n    %igx-chip--cosy {\n        @extend  %igx-chip-custom-icon--cosy;\n    }\n\n    %igx-chip--compact {\n        @extend  %igx-chip-custom-icon--compact;\n    }\n\n    %igx-chip--disabled {\n        %igx-chip__item {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-chip-custom-icon {\n        igx-icon {\n            width: map.get($chip-icon-size, 'comfortable');\n            height: map.get($chip-icon-size, 'comfortable');\n            font-size: map.get($chip-icon-size, 'comfortable');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--cosy {\n        igx-icon {\n            width: map.get($chip-icon-size, 'cosy');\n            height: map.get($chip-icon-size, 'cosy');\n            font-size: map.get($chip-icon-size, 'cosy');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip-custom-icon--compact {\n        igx-icon {\n            width: map.get($chip-icon-size, 'compact');\n            height: map.get($chip-icon-size, 'compact');\n            font-size: map.get($chip-icon-size, 'compact');\n            outline-style: none;\n        }\n    }\n\n    %igx-chip__prefix,\n    %igx-chip__suffix {\n        @include ellipsis();\n        display: inline-block;\n        vertical-align: middle;\n        max-width: $chip-max-width;\n    }\n\n    %igx-chip__suffix {\n        + igx-suffix,\n        + [igxSuffix],\n        + %igx-chip__remove {\n            margin-#{$left}: rem(4px);\n        }\n    }\n\n    %igx-chip__prefix {\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-#{$left}: rem(4px);\n\n            igx-avatar {\n                max-height: 100%;\n                max-width: 100%;\n                margin-#{$left}: $chip-avatar-inset!important;\n            }\n        }\n    }\n\n    %igx-chip__content {\n        @include ellipsis();\n        padding: map.get($chip-padding, 'comfortable');\n        max-width: $chip-max-width;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-chip__content--cosy {\n        padding: map.get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__content--compact {\n        padding: map.get($chip-padding, 'compact');\n    }\n\n    %igx-chip__remove {\n        display: inline-flex;\n        margin-#{$right}: rem(4px);\n        color: var-get($theme, 'remove-icon-color', currentColor);\n\n        &:empty {\n            display: none;\n        }\n\n        // FIX IE11 and Edge focus styles.\n        // [focus-within] is not supported by IE & Edge.\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                outline-style: none;\n                color: var-get($theme, 'remove-icon-color-focus');\n            }\n        }\n\n        igx-icon {\n            &:focus{\n                outline-style: none;\n            }\n        }\n    }\n\n    %igx-chip__select {\n        display: inline-flex;\n        align-items: center;\n        width: 18px;\n        opacity: 1;\n        z-index: 1;\n        transition: opacity 120ms $ease-out-quad, width 120ms $ease-out-quad;\n\n        > * {\n            width: inherit !important;\n        }\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-#{$left}: rem(4px);\n        }\n    }\n\n    %igx-chip__select--hidden {\n        width: 0;\n        opacity: 0;\n        z-index: -1;\n\n        + igx-prefix,\n        + [igxPrefix] {\n            margin-#{$left}: 0;\n        }\n    }\n\n    %igx-chip__item {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 1 1 auto;\n        height: map.get($chip-height, 'comfortable');\n        padding: $chip-item-padding;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        border-width: 1px;\n        border-style: solid;\n        border-color: var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        user-select: none;\n        overflow: hidden;\n        cursor: pointer;\n        //hacking overflow hidden with border radius\n        // not playing nicely together\n        filter: opacity(1);\n    }\n\n    %igx-chip__item--hover {\n        color: var-get($theme, 'hover-text-color');\n        background: var-get($theme, 'hover-background');\n        border-color: var-get($theme, 'hover-border-color');\n        transition: all 120ms ease-in;\n    }\n\n    %igx-chip__item--focus {\n        color: var-get($theme, 'focus-text-color');\n        background: var-get($theme, 'focus-background');\n        border-color: var-get($theme, 'focus-border-color');\n        outline-style: none;\n        box-shadow: $box-shadow;\n\n        @if $variant == 'indigo-design' {\n            box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-outline-color');\n        }\n    }\n\n    %igx-chip__item--selected {\n        color: var-get($theme, 'selected-text-color');\n        background: var-get($theme, 'selected-background');\n        border-color: var-get($theme, 'selected-border-color');\n    }\n\n    %igx-chip__item--hover-selected {\n        color: var-get($theme, 'hover-selected-text-color');\n        background: var-get($theme, 'hover-selected-background');\n        border-color: var-get($theme, 'hover-selected-border-color');\n        transition: $transition;\n    }\n\n    %igx-chip__item--focus-selected {\n        color: var-get($theme, 'focus-selected-text-color');\n        background: var-get($theme, 'focus-selected-background');\n        border-color: var-get($theme, 'focus-selected-border-color');\n        transition: $transition;\n\n        @if $variant == 'indigo-design' {\n            box-shadow: 0 0 0 rem(3px) var-get($theme, 'focus-selected-outline-color');\n        }\n    }\n\n    %igx-chip__item--cosy {\n        height: map.get($chip-height, 'cosy');\n        padding: map.get($chip-padding, 'cosy');\n    }\n\n    %igx-chip__item--compact {\n        height: map.get($chip-height, 'compact');\n        padding: map.get($chip-padding, 'compact');\n    }\n\n    %igx-chip__ghost {\n        position: absolute;\n        box-shadow: var-get($theme, 'ghost-shadow');\n        overflow: hidden;\n        color: var-get($theme, 'focus-text-color');\n        background: var-get($theme, 'ghost-background');\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'ghost-background');\n        }\n    }\n\n    %igx-chip__ghost--cosy {\n        height: map.get($chip-height, 'cosy');\n\n        %igx-chip__content {\n            padding: map.get($chip-padding, 'cosy');\n        }\n    }\n\n    %igx-chip__ghost--compact {\n        @extend  %igx-chip-custom-icon--compact;\n        height: map.get($chip-height, 'compact');\n\n        %igx-chip__content {\n            padding: map.get($chip-padding, 'compact');\n        }\n    }\n\n    // Remark: If z-index is not set, the chip would\n    // hide behind it's parent grid as it has a z-index of 1\n    %igx-chip__ghost,\n    %igx-chip__ghost--cosy,\n    %igx-chip__ghost--compact {\n        z-index: 10;\n    }\n}\n\n/// Adds typography styles for the igx-chip component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-chip-typography(\n    $type-scale,\n    $categories: (text: 'body-2'))\n{\n    $text: map.get($categories, 'text');\n\n    %igx-chip {\n        @include igx-type-style($type-scale, $text) {\n            font-weight: 600;\n        }\n    }\n\n    %igx-chip--compact,\n    %igx-chip__ghost--compact {\n        %igx-chip__content {\n            @include igx-type-style($type-scale, $text) {\n                font-size: 12px;\n                font-weight: 600;\n            }\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Column actions Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $title-color [null]- The text color used for the title of the list.\n/// @param {Color} $background-color [null] - The background color of the panel.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n///\n/// @example scss Change the title color\n///   $column-actions-theme: igx-column-actions-theme($title-color: black);\n///   // Pass the theme to the igx-column-actions component mixin\n///   @include igx-column-actions($column-actions-theme);\n////\n@function igx-column-actions-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $title-color: null,\n    $background-color: null\n) {\n    $name: 'igx-column-actions';\n    $column-actions-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $column-actions-schema: map.get($schema, $name);\n    } @else {\n        $column-actions-schema: $schema;\n    }\n\n    $theme: apply-palette($column-actions-schema, $palette);\n\n    @if not($title-color) and $background-color {\n        $title-color: text-contrast($background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        elevations: $elevations,\n        title-color: $title-color,\n        background-color: $background-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-column-actions($theme) {\n    @include igx-css-vars($theme);\n\n    %column-actions-display {\n        display: flex;\n        flex-flow: column nowrap;\n        background: var-get($theme, 'background-color');\n        box-shadow: igx-elevation(map.get($theme, 'elevations'), 8);\n        width: 100%;\n        flex: 1 1 auto;\n        min-width: rem(180px);\n    }\n\n    %column-actions-title {\n        color: var-get($theme, 'title-color');\n        margin: 0;\n        padding: rem(16px) rem(16px) rem(8px);\n    }\n\n    %column-actions-input {\n        font-size: rem(16px) !important;\n        margin: -16px 0 0 !important;\n        padding: rem(8px) rem(16px);\n    }\n\n    %column-actions-columns {\n        display: flex;\n        flex-flow: column nowrap;\n        overflow-y: auto;\n        outline-style: none;\n    }\n\n    %column-actions-item {\n        padding: rem(4px) rem(16px);\n        min-height: rem(32px);\n    }\n\n    %column-actions-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px) rem(16px);\n    }\n}\n\n/// Adds typography styles for the igx-column-actions component.\n/// Uses the 'subtitle-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-column-actions-typography($type-scale, $categories: (title: 'subtitle-1')) {\n    $title: map.get($categories, 'title');\n\n    %column-actions-title {\n        @include igx-type-style($type-scale, $title) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $search-separator-border-color [null] - The combo search box separator color.\n/// @param {Color} $empty-list-placeholder-color [null] - The combo placeholder text color.\n/// @param {Color} $empty-list-background [null] - The combo list background color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n@function igx-combo-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $search-separator-border-color: null,\n    $empty-list-placeholder-color: null,\n    $empty-list-background: null\n) {\n    $name: 'igx-combo';\n    $combo-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $combo-schema: map.get($schema, $name);\n    } @else {\n        $combo-schema: $schema;\n    }\n\n    $theme: apply-palette($combo-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        search-separator-border-color: $search-separator-border-color,\n        empty-list-placeholder-color: $empty-list-placeholder-color,\n        empty-list-background: $empty-list-background\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-combo($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-combo {\n        position: relative;\n        display: block;\n    }\n\n    %igx-combo__checkbox {\n        margin-#{$right}: rem(8);\n    }\n\n    %igx-combo__drop-down {\n        position: absolute;\n        width: 100%;\n\n        .igx-drop-down {\n            width: 100%;\n        }\n    }\n\n    %igx-combo__search {\n        padding: rem(8px) rem(16px);\n        margin: 0 !important;\n        z-index: 26;\n        border-bottom: 1px dashed var-get($theme, 'search-separator-border-color');\n    }\n\n    %igx-combo__content {\n        position: relative;\n        overflow: hidden;\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-combo__add {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        position: relative;\n        padding: rem(16px);\n        background: var-get($theme, 'empty-list-background');\n    }\n\n    %igx-combo__empty {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        color: var-get($theme, 'empty-list-placeholder-color');\n        padding: 0 rem(24px);\n        font-size: rem(13px);\n    }\n\n    // TODO: make this part better\n    %igx-combo__add-item {\n        &%igx-drop-down__item {\n            width: auto !important;\n            padding: 0 !important;\n\n            &:hover {\n                background: transparent!important;\n            }\n        }\n\n        &%igx-drop-down__item--focused {\n            &:focus {\n                background: transparent!important;\n            }\n        }\n    }\n}\n","@use '../../base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The calendar theme used to style the component.\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires var-get\n/// @requires rem\n@mixin igx-date-picker($theme) {\n    $palette: map.get($theme, 'palette');\n    $selected-hover-color: text-contrast(map.get($theme, 'date-selected-background'), $palette: $palette);\n\n    @include igx-css-vars($theme, '.igx-date-picker');\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    %date-picker {\n        box-shadow: igx-elevation($elevation: 24);\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'content-background');\n        overflow: hidden;\n\n        %cal-display {\n            background: var-get($theme, 'content-background');\n        }\n\n        %cal-header-display {\n            background: var-get($theme, 'header-background');\n            color: var-get($theme, 'header-text-color');\n        }\n\n        %cal-picker-arrow {\n            color: var-get($theme, 'picker-arrow-color');\n\n            &:hover {\n                color: var-get($theme, 'picker-arrow-hover-color');\n            }\n        }\n\n        %cal-picker-date {\n            color: var-get($theme, 'picker-text-color');\n\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'picker-text-hover-color');\n            }\n        }\n\n        %cal-value {\n            color: var-get($theme, 'content-text-color');\n            min-width: 14.28%;\n\n            @if $bootstrap-theme {\n                &:hover,\n                &:focus {\n                    color: var-get($theme, 'date-selected-text-color');\n                }\n            }\n        }\n\n        %cal-value--label {\n            color: var-get($theme, 'label-color');\n\n            &:hover,\n            &:focus {\n                color: var-get($theme, 'label-color');\n            }\n        }\n\n        %cal-value--weekend {\n            color: var-get($theme, 'weekend-text-color');\n        }\n\n        %cal-value--special {\n            color: var-get($theme, 'date-special-text-color');\n            background: var-get($theme, 'date-special-background');\n        }\n\n        %cal-value--disabled {\n            color: var-get($theme, 'date-disabled-text-color');\n        }\n\n        %cal-value--year-current {\n            color: var-get($theme, 'year-current-text-color');\n\n            @if $bootstrap-theme {\n                &:hover,\n                &:focus {\n                    color: var-get($theme, 'year-hover-text-color');\n                }\n            }\n        }\n\n        %cal-value--year-hover {\n            color: var-get($theme, 'year-hover-text-color');\n        }\n\n        %cal-value--month-hover {\n            color: var-get($theme, 'month-hover-text-color');\n        }\n\n        %cal-value--month-current {\n            color: var-get($theme, 'month-current-text-color');\n        }\n\n        %cal-value--inactive {\n            color: var-get($theme, 'inactive-text-color');\n\n            &:hover {\n                color: var-get($theme, 'inactive-text-color');\n            }\n        }\n\n        %cal-value--selected {\n            color: var-get($theme, 'date-selected-text-color');\n            // background: var-get($theme, 'date-selected-background') !important;\n        }\n\n        %cal-value--current {\n            color: var-get($theme, 'date-current-text-color');\n        }\n\n        %cal-value--hover {\n            %cal-value-content::after {\n                background: var-get($theme, 'date-hover-background');\n            }\n\n            &%cal-value--selected %cal-value-content::after {\n                background: $selected-hover-color;\n            }\n        }\n    }\n\n    %date-picker--vertical {\n        min-width: 368px; /* 168px for header + 200px for the content */\n    }\n\n    %date-picker--dropdown {\n        display: flex;\n        flex: 1 0 0;\n        flex-direction: column;\n        box-shadow: igx-elevation($elevation: 3);\n    }\n\n    %date-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: rem(8px);\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {color} $label-color [null] - The color for date range separator label.\n/// @requires var-get\n/// @requires rem\n@function igx-date-range-picker-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $label-color: null\n) {\n    $name: 'igx-date-range';\n    $date-range-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $date-range-schema: map.get($schema, $name);\n    } @else {\n        $date-range-schema: $schema;\n    }\n\n    $theme: apply-palette($date-range-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        label-color: $label-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-date-range-picker($theme) {\n    @include igx-css-vars($theme);\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $base-scale-size: (\n        'comfortable': rem(16px),\n        'cosy': rem(19px),\n        'compact': rem(22px)\n    );\n\n    %igx-date-range-picker {\n        display: flex;\n\n        > igx-icon {\n            cursor: pointer;\n        }\n\n        igx-input-group {\n            flex: 1;\n        }\n    }\n\n    igx-date-range-start,\n    igx-date-range-end,\n    %igx-date-range-picker__start,\n    %igx-date-range-picker__end {\n        flex: 1 0 0%;\n    }\n\n    %igx-date-range-picker__label {\n        display: flex;\n        align-items: center;\n        color: var-get($theme, 'label-color');\n        margin: 0 rem(8px);\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n    }\n\n    %igx-date-range-picker--cosy {\n        %igx-date-range-picker__label {\n            padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %igx-date-range-picker--compact {\n        %igx-date-range-picker__label {\n            padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n        }\n    }\n\n    %igx-date-range-picker-buttons {\n        display: flex;\n        justify-content: flex-end;\n        padding: 0 rem(16px) rem(16px) rem(16px);\n\n        > * {\n            margin-#{$right}: rem(8px);\n\n            &:last-of-type {\n                margin-#{$right}: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-date-range-picker component.\n/// Uses the 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-date-range-typography(\n    $type-scale,\n    $categories: (\n        label: 'subtitle-1',\n    )\n) {\n    $label: map.get($categories, 'label');\n\n    %igx-date-range__label {\n        @include igx-type-style($type-scale, $label);\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Dialog Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background [null] - The dialog background color.\n/// @param {Color} $title-color [null] - The dialog title text color.\n/// @param {Color} $message-color [null] - The dialog message text color.\n/// @param {box-shadow} $shadow [null] - The shadow used for the dialog.\n/// @param {border-radius} $border-radius [null] - The border radius used for dialog component.\n/// @param {Color} $border-color [null] - The border color used for dialog component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the background color\n///   $my-dialog-theme: igx-dialog-theme($background: black);\n///   // Pass the theme to the igx-dialog component mixin\n///   @include igx-dialog($my-dialog-theme);\n@function igx-dialog-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $border-color: null,\n\n    $background: null,\n    $title-color: null,\n    $message-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-dialog';\n    $selector: '.igx-dialog';\n\n    $dialog-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $dialog-schema: map.get($schema, $name);\n    } @else {\n        $dialog-schema: $schema;\n    }\n\n    $theme: apply-palette($dialog-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($dialog-schema, 'border-radius')), 0 , 36px\n    );\n\n    @if not($title-color) and $background{\n        $title-color: text-contrast($background);\n    }\n\n    @if not($message-color) and $background{\n        @if meta.type-of($background) == 'color' {\n            $message-color: rgba(text-contrast($background), .8);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($dialog-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        border-radius: $border-radius,\n        background: $background,\n        title-color: $title-color,\n        message-color: $message-color,\n        shadow: $shadow,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-dialog($theme) {\n    @include igx-css-vars($theme);\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $variant: map.get($theme, variant);\n\n    $dialog-min-width: map.get((\n        material: rem(280px),\n        fluent: rem(288px),\n        bootstrap: rem(288px),\n    ), $variant);\n\n    $dialog-title-padding: map.get((\n        material: rem(24px) rem(24px) rem(12px) rem(24px),\n        fluent: rem(16px) rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(16px) rem(24px),\n    ), $variant);\n\n    $dialog-message-padding: map.get((\n        material: rem(12px) rem(24px),\n        fluent: 0 rem(24px) rem(20px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: 0 rem(24px) rem(8px) rem(24px),\n    ), $variant);\n\n    $dialog-actions-padding: map.get((\n        material: rem(8px),\n        fluent: 0 rem(24px) rem(24px) rem(24px),\n        bootstrap: rem(16px),\n        indigo-design: rem(8px),\n    ), $variant);\n\n    $bootstrap-theme: map.get($theme, variant) == 'bootstrap';\n\n    %igx-dialog-display {\n        outline-style: none;\n    }\n\n    %igx-dialog--hidden {\n        display: none;\n    }\n\n    %igx-dialog-window {\n        position: relative;\n        min-width: $dialog-min-width;\n        border: 1px solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background');\n        box-shadow: var-get($theme, 'shadow');\n        overflow: hidden;\n\n        .igx-calendar {\n            width: rem(320px);\n        }\n\n        .igx-calendar--vertical {\n            width: rem(496px);\n        }\n    }\n\n    %igx-dialog-title {\n        display: flex;\n        color: var-get($theme, 'title-color');\n        padding: $dialog-title-padding;\n\n        @if $bootstrap-theme {\n            border-bottom: 1px solid var-get($theme, 'border-color');\n        }\n    }\n\n    %igx-dialog-content {\n        color: var-get($theme, 'message-color');\n        padding: $dialog-message-padding;\n    }\n\n    %igx-dialog-message {\n        display: inline-block;\n        max-width: 40ch;\n\n        @media all and (-ms-high-contrast: none)\n        {\n            max-width: map.get((\n                material: 62ch,\n                fluent: 48ch,\n                bootstrap: 60ch,\n                indigo-design: 48ch,\n            ), $variant);\n        }\n    }\n\n    %igx-dialog-actions {\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: flex-end;\n        padding: $dialog-actions-padding;\n\n        @if $bootstrap-theme {\n            border-top: 1px solid var-get($theme, 'border-color');\n        }\n\n        button + button {\n            margin-#{$left}: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-dialog component.\n/// Uses the 'h6' and 'body-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-dialog-typography($type-scale, $categories: (\n    title: 'h6',\n    content: 'body-1')\n) {\n    $title: map.get($categories, 'title');\n    $content: map.get($categories, 'content');\n\n    %igx-dialog-title {\n        @include igx-type-style($type-scale, $title) {\n            margin: 0;\n        }\n    }\n\n    %igx-dialog-content {\n        @include igx-type-style($type-scale, $content) {\n            margin: 0;\n        }\n\n        > * {\n            letter-spacing: normal;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $color [null] - The color of the divider. (Gradients are not supported for dashed dividers).\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the color of the divider\n///   $my-divider-theme: igx-divider-theme($color: orange);\n///   // Pass the theme to the igx-divider component mixin\n///   @include igx-divider($my-divider-theme);\n@function igx-divider-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $color: null\n) {\n    $name: 'igx-divider';\n    $divider-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $divider-schema: map.get($schema, $name);\n    } @else {\n        $divider-schema: $schema;\n    }\n\n    $theme: apply-palette($divider-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        color: $color\n    ));\n}\n\n///\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n///\n@mixin igx-divider($theme) {\n    @include igx-css-vars($theme);\n\n    %igx-divider-display {\n        display: block;\n        height: 1px;\n        background: var-get($theme, 'color');\n    }\n\n    %igx-divider--dashed {\n        background: linear-gradient(to right, var-get($theme, 'color') 50%, transparent 50%);\n        background-size: 10px 1px; /* dash size */\n    }\n\n    %igx-divider--vertical {\n        display: inline-block;\n        width: 1px;\n        min-width: 1px;\n        height: auto;\n    }\n\n    %igx-divider--vertical-dashed {\n        background: linear-gradient(to bottom, var-get($theme, 'color') 50%, transparent 50%);\n        background-size: 1px 10px; /* dash size */\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Generates a drop-down theme.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The drop-down background color.\n/// @param {Color} $header-text-color [null] - The drop-down header text color.\n///\n/// @param {Color} $item-text-color [null] - The drop-down text color.\n/// @param {Color} $hover-item-text-color [null] - The drop-down hover text color.\n///\n/// @param {Color} $hover-item-background [null] - The drop-down hover item background color.\n///\n/// @param {Color} $focused-item-background [null] - The drop-down focused item background color.\n/// @param {Color} $focused-item-text-color [null] - The drop-down focused item text color.\n///\n/// @param {Color} $selected-item-background [null] - The drop-down selected item background color.\n/// @param {Color} $selected-item-text-color [null] - The drop-down selected item text color.\n///\n/// @param {Color} $selected-hover-item-background [null] - The drop-down selected item hover background color.\n/// @param {Color} $selected-hover-item-text-color [null] - The drop-down selected item hover text color.\n///\n/// @param {Color} $selected-focus-item-background [null] - The drop-down selected item focus background color.\n/// @param {Color} selected-focus-item-text-color [null] - The drop-down selected item focus text color.\n///\n/// @param {Color} $disabled-item-background [null] - The drop-down disabled item background color.\n/// @param {Color} $disabled-item-text-color [null] - The drop-down disabled item text color.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the drop-down.\n///\n/// @param {Number} $border-width [null] - The border width used for drop-down component.\n/// @param {Color} $border-color [null] - The border color used for drop-down component.\n/// @param {Number} $border-radius [null] - The border radius used for drop-down component.\n/// @param {Number} $item-border-radius [null] - The border radius used for drop-down items.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n@function igx-drop-down-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background-color: null,\n    $header-text-color: null,\n\n    $item-text-color: null,\n    $hover-item-text-color: null,\n\n    $hover-item-background: null,\n\n    $focused-item-background: null,\n    $focused-item-text-color: null,\n\n    $selected-item-background: null,\n    $selected-item-text-color: null,\n\n    $selected-hover-item-background: null,\n    $selected-hover-item-text-color: null,\n\n    $selected-focus-item-background: null,\n    $selected-focus-item-text-color: null,\n\n    $disabled-item-background: null,\n    $disabled-item-text-color: null,\n    $border-color: null,\n    $border-width: null,\n    $shadow: null\n) {\n    $name: 'igx-drop-down';\n    $selector: '.igx-drop-down__list, .igx-grid-toolbar__dd-list';\n\n    $drop-down-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $drop-down-schema: map.get($schema, $name);\n    } @else {\n        $drop-down-schema: $schema;\n    }\n\n    $theme: apply-palette($drop-down-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($drop-down-schema, 'border-radius')), 0, 20px\n    );\n\n    $item-border-radius: round-borders(\n        if($item-border-radius, $item-border-radius, map.get($drop-down-schema, 'item-border-radius')), 0, 20px\n    );\n\n    @if not($item-text-color) and $background-color {\n        $item-text-color: text-contrast($background-color);\n    }\n\n    @if not($hover-item-background) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $hover-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($hover-item-text-color) and $background-color {\n        $hover-item-text-color: text-contrast($background-color);\n    }\n\n    @if not($focused-item-background) and $background-color {\n        $focused-item-text-color: text-contrast($background-color);\n\n        @if meta.type-of($background-color) == 'color' {\n            $focused-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($focused-item-text-color) and $focused-item-background {\n        $focused-item-text-color: text-contrast($focused-item-background);\n    }\n\n    @if not($selected-item-text-color) and $selected-item-background {\n        $selected-item-text-color: text-contrast($selected-item-background);\n    }\n\n    @if not($selected-hover-item-text-color) and $selected-hover-item-background {\n        $selected-hover-item-text-color: text-contrast($selected-hover-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($selected-focus-item-text-color) and $selected-focus-item-background {\n        $selected-focus-item-text-color: text-contrast($selected-focus-item-background);\n    }\n\n    @if not($disabled-item-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($background-color), .36);\n        }\n    }\n\n    @if not($disabled-item-text-color) and $disabled-item-background {\n        @if meta.type-of($disabled-item-background) == 'color' {\n            $disabled-item-text-color: rgba(text-contrast($disabled-item-background), .36);\n        }\n    }\n\n    @if not($header-text-color) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $header-text-color: rgba(text-contrast($background-color), .7);\n        }\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($drop-down-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        background-color: $background-color,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        header-text-color: $header-text-color,\n        item-text-color: $item-text-color,\n        hover-item-text-color: $hover-item-text-color,\n        hover-item-background: $hover-item-background,\n        focused-item-background: $focused-item-background,\n        focused-item-text-color: $focused-item-text-color,\n        selected-item-background: $selected-item-background,\n        selected-item-text-color: $selected-item-text-color,\n        selected-hover-item-background: $selected-hover-item-background,\n        selected-hover-item-text-color: $selected-hover-item-text-color,\n        selected-focus-item-background: $selected-focus-item-background,\n        selected-focus-item-text-color: $selected-focus-item-text-color,\n        disabled-item-background: $disabled-item-background,\n        disabled-item-text-color: $disabled-item-text-color,\n        shadow: $shadow,\n        border-color: $border-color,\n        border-width: $border-width\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-drop-down($theme) {\n    @include igx-css-vars($theme);\n\n    $item-height: (\n        comfortable: rem(40px),\n        cosy: rem(32px),\n        compact: rem(28px)\n    );\n\n    $item-padding-comfortable: 0 rem(24px);\n    $item-padding-cosy: 0 rem(20px);\n    $item-padding-compact: 0 rem(16px);\n\n    $prefix-margin-comfortable: rem(20px);\n    $prefix-margin-cosy: rem(16px);\n    $prefix-margin-compact: rem(12px);\n\n    $suffix-margin-comfortable: rem(8px);\n    $suffix-margin-cosy: rem(6px);\n    $suffix-margin-compact: rem(4px);\n\n    $item-padding: (\n        comfortable: $item-padding-comfortable,\n        cosy: $item-padding-cosy,\n        compact: $item-padding-compact\n    );\n\n    $prefix-margin: (\n        comfortable: $prefix-margin-comfortable,\n        cosy: $prefix-margin-cosy,\n        compact: $prefix-margin-compact\n    );\n\n    $suffix-margin: (\n        comfortable: $suffix-margin-comfortable,\n        cosy: $suffix-margin-cosy,\n        compact: $suffix-margin-compact\n    );\n\n    $header-item-padding: (\n        comfortable: 0 rem(16px),\n        cosy: 0 rem(12px),\n        compact: 0 rem(8px)\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-drop-down {\n        position: absolute;\n    }\n\n    %igx-drop-down__list {\n        overflow: hidden;\n        border-radius: var-get($theme, 'border-radius');\n        background: var-get($theme, 'background-color');\n        box-shadow: var-get($theme, 'shadow');\n        min-width: rem(128px);\n        border: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\n    }\n\n    %igx-drop-down__list-scroll {\n        overflow-y: auto;\n        overflow-x: hidden;\n        -webkit-overflow-scrolling: touch;\n        position: relative;\n\n        igx-input-group {\n            margin-top: -16px !important;\n        }\n    }\n\n    %igx-drop-down__header,\n    %igx-drop-down__item {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        white-space: nowrap;\n        height: map.get($item-height, 'comfortable');\n        position: relative;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix;\n        }\n\n        igx-divider {\n            position: absolute;\n            width: 100%;\n            #{$left}: 0;\n            bottom: 0;\n        }\n    }\n\n    %igx-drop-down__item {\n        color: var-get($theme, 'item-text-color');\n        cursor: pointer;\n        padding: map.get($item-padding, 'comfortable');\n        border-radius: var-get($theme, 'item-border-radius');\n\n        &:focus {\n            outline: 0;\n            outline-color: transparent;\n            background: var-get($theme, 'focused-item-background');\n            color: var-get($theme, 'focused-item-text-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'hover-item-background');\n            color: var-get($theme, 'hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__content {\n        display: flex;\n        width: 100%;\n        align-items: center;\n    }\n\n    %igx-drop-down__inner {\n        display: block;\n        @include ellipsis();\n        margin-#{$right}: auto;\n    }\n\n    %igx-drop-down__item--cosy {\n        height: map.get($item-height, 'cosy');\n        padding: map.get($item-padding, 'cosy');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--cosy;\n        }\n    }\n\n    %igx-drop-down__item--compact {\n        height: map.get($item-height, 'compact');\n        padding: map.get($item-padding, 'compact');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--compact;\n        }\n    }\n\n    %igx-drop-down__prefix {\n        margin-#{$right}: map.get($prefix-margin, 'comfortable');\n    }\n\n    %igx-drop-down__suffix {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-#{$left}: map.get($suffix-margin, 'comfortable');\n        }\n    }\n\n    %igx-drop-down__prefix--cosy {\n        margin-#{$right}: map.get($prefix-margin, 'cosy');\n    }\n\n    %igx-drop-down__suffix--cosy {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-#{$left}: map.get($suffix-margin, 'cosy');\n        }\n    }\n\n    %igx-drop-down__prefix--compact {\n        margin-#{$right}: map.get($prefix-margin, 'compact');\n    }\n\n    %igx-drop-down__suffix--compact {\n        + igx-suffix,\n        + [igxSuffix] {\n            margin-#{$left}: map.get($suffix-margin, 'compact');\n        }\n    }\n\n    %igx-drop-down__header {\n        color: var-get($theme, 'header-text-color');\n        pointer-events: none;\n        padding: map.get($header-item-padding, 'comfortable');\n    }\n\n    %igx-drop-down__header--cosy {\n        height: map.get($item-height, 'cosy');\n        padding: map.get($header-item-padding, 'cosy');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--cosy;\n        }\n    }\n\n    %igx-drop-down__header--compact {\n        height: map.get($item-height, 'compact');\n        padding: map.get($header-item-padding, 'compact');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %igx-drop-down__prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %igx-drop-down__suffix--compact;\n        }\n    }\n\n    %igx-drop-down__group {\n        pointer-events: auto;\n\n        label {\n            @extend %igx-drop-down__header !optional;\n        }\n\n        %igx-drop-down__item {\n            text-indent: map.get($item-padding, 'comfortable');\n        }\n    }\n\n    %igx-drop-down__item--focused {\n        background: var-get($theme, 'focused-item-background');\n        color: var-get($theme, 'focused-item-text-color');\n\n        &:hover {\n            color: var-get($theme, 'focused-item-text-color');\n            background: var-get($theme, 'focused-item-background');\n        }\n    }\n\n    %igx-drop-down__item--selected {\n        background: var-get($theme, 'selected-item-background');\n        color: var-get($theme, 'selected-item-text-color');\n\n        &:hover {\n            background: var-get($theme, 'selected-hover-item-background');\n            color: var-get($theme, 'selected-hover-item-text-color');\n        }\n    }\n\n    %igx-drop-down__item--selected--focused {\n        background: var-get($theme, 'selected-focus-item-background');\n        color: var-get($theme, 'selected-focus-item-text-color');\n    }\n\n    %igx-drop-down__item--disabled {\n        background: var-get($theme, 'disabled-item-background');\n        color: var-get($theme, 'disabled-item-text-color');\n        cursor: default;\n        pointer-events: none;\n\n        &:hover {\n            background: var-get($theme, 'disabled-item-background');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-2'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'body-2', select-item: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-drop-down-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'body-2',\n        select-item: 'subtitle-1'\n    )\n) {\n    $header: map.get($categories, 'header');\n    $item: map.get($categories, 'item');\n    $select-item: map.get($categories, 'select-item');\n\n    %igx-drop-down__header,\n    %igx-drop-down__group > label {\n        @include igx-type-style($type-scale, $header) {\n            margin: 0;\n        }\n    }\n\n    %igx-drop-down__item {\n        @include igx-type-style($type-scale, $item) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Expansion panel Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $header-background [null] - The panel header background color.\n/// @param {Color} $header-focus-background [null] - The panel header focus background color.\n/// @param {Color} $header-title-color [null] - The panel header title text color.\n/// @param {Color} $header-description-color [null] - The panel header description text color.\n/// @param {Color} $header-icon-color [null] - The panel header icon color.\n/// @param {Color} $body-color [null] - The panel body text color.\n/// @param {Color} $body-background [null] - The panel body background color.\n/// @param {Color} $disabled-color [null] - The panel body disabled text color.\n/// @param {Number} $expanded-margin [null] - The expansion panel margin in expanded state when positioned inside accordion.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for expansion-panel component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the background color\n///   $my-expansion-panel-theme: igx-expansion-panel($header-background: black);\n///   // Pass the theme to the igx-expansion-panel component mixin\n///   @include igx-expansion-panel($my-igx-expansion-panel-theme);\n@function igx-expansion-panel-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $header-background: null,\n    $header-focus-background: null,\n    $header-title-color: null,\n    $header-description-color: null,\n    $header-icon-color: null,\n    $body-color: null,\n    $body-background: null,\n    $disabled-color: null,\n    $expanded-margin: null\n) {\n    $name: 'igx-expansion-panel';\n    $expansion-panel-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $expansion-panel-schema: map.get($schema, $name);\n    } @else {\n        $expansion-panel-schema: $schema;\n    }\n\n    $theme: apply-palette($expansion-panel-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($expansion-panel-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($header-title-color) and $header-background {\n        $header-title-color: text-contrast($header-background);\n    }\n\n    @if not($header-description-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-description-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($header-icon-color) and $header-background {\n        $header-icon-color: text-contrast($header-background);\n    }\n\n    @if not($body-color) and $body-background {\n        $body-color: text-contrast($body-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        header-background: $header-background,\n        border-radius: $border-radius,\n        header-focus-background: $header-focus-background,\n        header-title-color: $header-title-color,\n        header-description-color: $header-description-color,\n        header-icon-color: $header-icon-color,\n        body-color: $body-color,\n        body-background: $body-background,\n        disabled-color: $disabled-color,\n        expanded-margin: $expanded-margin\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-expansion-panel($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $panel-padding: em(16px, 16px);\n    $panel-compact-padding: em(16px, 16px);\n    $panel-cosy-padding: em(8px, 16px);\n\n    %igx-expansion-panel {\n        display: flex;\n        flex-direction: column;\n        border-radius: var-get($theme, 'border-radius');\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-title {\n        color: var-get($theme, 'header-title-color');\n        margin-#{$right}: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-description {\n        color: var-get($theme, 'header-description-color');\n    }\n\n    %igx-expansion-panel__header-title,\n    %igx-expansion-panel__header-description {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n    }\n\n    %igx-title--no-ellipsis {\n        %igx-expansion-panel__header-title {\n            @include line-clamp(4, true, true);\n            white-space: initial;\n            word-wrap: break-word;\n        }\n    }\n\n    %igx-expanded-panel-margin {\n        igx-expansion-panel[aria-expanded='true'] {\n            margin: var-get($theme, 'expanded-margin') 0;\n\n            &:first-of-type {\n                margin-top: 0;\n            }\n\n            &:last-of-type {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %igx-expansion-panel__header-inner {\n        display: flex;\n        align-items: center;\n        padding: $panel-padding;\n        cursor: pointer;\n        background: var-get($theme, 'header-background');\n\n        &:focus,\n        &:active\n        {\n            background: var-get($theme, 'header-focus-background');\n            outline: transparent;\n        }\n    }\n\n    %igx-expansion-panel__title-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        flex: 1 0 0%;\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel__header-icon--end {\n        order: 1;\n        margin-#{$left}: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--start {\n        order: -1;\n        margin-#{$right}: rem(16px, 16px);\n    }\n\n    %igx-expansion-panel__header-icon--none {\n        display: none;\n    }\n\n    %igx-expansion-panel__header-icon--end,\n    %igx-expansion-panel__header-icon--start {\n        display: flex;\n        align-content: center;\n        justify-content: center;\n        user-select: none;\n\n        color: var-get($theme, 'header-icon-color');\n\n        igx-icon {\n            color: var-get($theme, 'header-icon-color');\n        }\n    }\n\n    %igx-expansion-panel__body {\n        color: var-get($theme, 'body-color');\n        background: var-get($theme, 'body-background');\n        overflow: hidden;\n    }\n\n    %igx-expansion-panel--disabled {\n        pointer-events: none;\n\n        %igx-expansion-panel__header-title,\n        %igx-expansion-panel__header-description {\n            color: var-get($theme, 'disabled-color')\n        }\n\n        %igx-expansion-panel__header-icon--start,\n        %igx-expansion-panel__header-icon--end {\n            igx-icon {\n                color: var-get($theme, 'disabled-color');\n            }\n        }\n    }\n}\n\n/// Adds typography styles for the igx-expansion-panel component.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h5', description: 'subtitle-2', body: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-expansion-panel-typography($type-scale, $categories: (\n    title: 'h5',\n    description: 'subtitle-2',\n    body: 'body-2')\n) {\n    $title: map.get($categories, 'title');\n    $description: map.get($categories, 'description');\n    $body: map.get($categories, '$body');\n\n    %igx-expansion-panel__header-title {\n        @include igx-type-style($type-scale, $title) {\n            margin: 0;\n        }\n    }\n\n    %igx-expansion-panel__header-description {\n        @include igx-type-style($type-scale, $description) {\n            margin: 0;\n        }\n    }\n\n    %igx-expansion-panel__body {\n        @include igx-type-style($type-scale, $body) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use './excel-filtering-theme' as *;\n@use './advanced-filtering-theme' as *;\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:color';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $header-background [null] - The table header background color.\n/// @param {Color} $header-text-color [null] - The table header text color.\n/// @param {String} $header-border-width [null] - The border width used for header borders.\n/// @param {String} $header-border-style [null] - The border style used for header borders.\n/// @param {Color} $header-border-color [null] - The color used for header borders.\n/// @param {Color} $header-selected-background [null] - The table header background color when selected (ex. column selection).\n/// @param {Color} $header-selected-text-color [null] - The table header text color when selected (ex. column selection).\n///\n/// @param {Color} $sorted-header-icon-color [null] - The sort icon color when sorted.\n/// @param {color} $sortable-header-icon-hover-color [null] - The icon color on hover in grid header when the column is sortable.\n///\n/// @param {Color} $content-background [null] - The table body background color.\n/// @param {Color} $content-text-color [null] - The table body text color.\n///\n/// @param {Color} $ghost-header-text-color [null] - The dragged header text color.\n/// @param {Color} $ghost-header-icon-color [null] - The dragged header icon color.\n/// @param {Color} $ghost-header-background [null] - The dragged header background color.\n///\n/// @param {Color} $row-odd-background [null] - The background color of odd rows.\n/// @param {Color} $row-even-background [null] - The background color of even rows.\n/// @param {Color} $row-odd-text-color [null] - The text color of odd rows.\n/// @param {Color} $row-even-text-color [null] - The text color of even rows.\n/// @param {Color} $row-selected-background [null] - The selected row background color.\n/// @param {Color} $row-selected-hover-background [null] - The selected row hover background color.\n/// @param {Color} $row-selected-text-color [null] - The selected row text color.\n/// @param {Color} $row-selected-hover-text-color [null] - The selected row hover text color.\n/// @param {Color} $row-hover-background [null] - The hover row background color.\n/// @param {Color} $row-hover-text-color [null] - The hover row text color.\n/// @param {Color} $row-border-color [null] - The row bottom border color.\n///\n/// @param {String} $pinned-border-width [null] - The border width of the pinned border.\n/// @param {String} $pinned-border-style [null] - The CSS border style of the pinned border.\n/// @param {Color} $pinned-border-color [null] - The color of the pinned border.\n///\n/// @param {Color} $cell-active-border-color [null] - The border color for the currently active(focused) cell.\n/// @param {Color} $cell-selected-background [null] - The selected cell background color.\n/// @param {Color} $cell-selected-text-color [null] - The selected cell text color.\n/// @param {Color} $cell-editing-background [null] - The background color of the cell being edited.\n/// @param {Color} $cell-edited-value-color [null] - The text color of a cell that has been edited.\n/// @param {Color} $cell-new-color [null] - The text color of a new, unedited cell. Used when adding new row in a grid.\n/// @param {Color} $cell-disabled-color [null] - The text color of a disabled cell.\n/// @param {Color} $cell-selected-within-background [null] - The background of the selected cell inside a selected row/column.\n/// @param {Color} $cell-selected-within-text-color [null] - The color of the selected cell inside a selected row/column.\n///\n/// @param {Color} $edit-mode-color [null] - The color applied around the row when in editing mode.\n/// @param {Color} $edited-row-indicator [null] - The color applied to the edited row indicator line.\n///\n/// @param {Color} $resize-line-color [null] - The table header resize line color.\n/// @param {Color} $drop-indicator-color [null] - The color applied to the line between the columns when dragging a column.\n///\n/// @param {Color} $grouparea-background [null] - The grid group area background color.\n/// @param {Color} $grouparea-color [null] - The grid group area color.\n///\n/// @param {Color} $group-row-background [null] - The grid group row background color.\n/// @param {Color} $group-row-selected-background [null] - The drop area background on drop color.\n/// @param {Color} $group-label-column-name-text [null] - The grid group row column name text color.\n/// @param {Color} $group-label-icon [null] - The grid group row icon color.\n/// @param {Color} $group-label-text [null] - The grid group row text color.\n///\n/// @param {Color} $expand-all-icon-color [null] - The grid header expand all group rows icon color.\n/// @param {Color} $expand-all-icon-hover-color [null] - The grid header expand all group rows icon hover color.\n///\n/// @param {Color} $expand-icon-color [null] - The grid row expand icon color.\n/// @param {Color} $expand-icon-hover-color [null] - The grid row expand icon hover color.\n///\n/// @param {Color} $active-expand-icon-color [null] - The drop area background on drop color.\n/// @param {Color} $active-expand-icon-hover-color [null] - The drop area background on drop color.\n///\n/// @param {Color} $group-count-background [null] - The grid group row cont badge background color.\n/// @param {Color} $group-count-text-color [null] - The grid group row cont badge text color.\n///\n/// @param {Color} $drop-area-text-color [null] - The drop area text color.\n/// @param {Color} $drop-area-icon-color [null] - The drop area icon color.\n/// @param {Color} $drop-area-background [null] - The drop area background color.\n/// @param {Color} $drop-area-on-drop-background [null] - The drop area background on drop color.\n///\n/// @param {Color} $filtering-background-and [null] - The background color of advanced filtering \"AND\" condition.\n/// @param {Color} $filtering-background-and--focus [null] - The background color on focus/selected of advanced filtering \"AND\" condition.\n/// @param {Color} $filtering-background-or [null] - The background color of advanced filtering \"OR\" condition.\n/// @param {Color} $filtering-background-or--focus [null] - The background color on focus/selected of advanced filtering \"OR\" condition.\n///\n/// @param {Color} $filtering-header-background [null] - The background color of the filtered column header.\n/// @param {Color} $filtering-header-text-color [null] - The text color color of the filtered column header.\n/// @param {Color} $filtering-row-background [null] - The background color of the filtering row.\n/// @param {Color} $filtering-row-text-color [null] - The text-color color of the filtering row.\n/// @param {Color} $tree-filtered-text-color [null] - grouping row background color on focus.\n///\n/// @param {Color} $body-summaries-background [null] - The background color of the summary groups located the body.\n/// @param {Color} $body-summaries-text-color [null] - The text color of the summary results located the body.\n/// @param {Color} $root-summaries-background [null] - The background color of the summary groups located the footer.\n/// @param {Color} $root-summaries-text-color [null] - The text color of the summary results located the footer.\n///\n/// @param {Color} $row-highlight [null] - The grid row highlight indication color.\n/// @param {box-shadow} $grid-shadow [null] - The shadow of the grid.\n/// @param {box-shadow} $drag-shadow [null] - The shadow used for movable elements (ex. column headers).\n/// @param {color} $row-ghost-background [null] - The dragged row background color.\n/// @param {color} $row-drag-color [null] - The row drag handle color.\n/// @param {Color} $grid-border-color [null] - The color of the grid border.\n/// @param {border-radius} $drop-area-border-radius [null] - The border radius used for column drop area.\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires luminance\n/// @requires text-contrast\n/// @requires to-opaque\n/// @requires extend\n/// @requires igx-elevation\n/// @requires round-borders\n@function igx-grid-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $header-background: null,\n    $header-text-color: null,\n    $header-border-width: null,\n    $header-border-style: null,\n    $header-border-color: null,\n\n    $header-selected-background: null,\n    $header-selected-text-color: null,\n\n    $sorted-header-icon-color: null,\n\n    $content-background: null,\n    $content-text-color: null,\n\n    $ghost-header-text-color: null,\n    $ghost-header-icon-color: null,\n    $ghost-header-background: null,\n\n    $row-odd-background: null,\n    $row-even-background: null,\n    $row-odd-text-color: null,\n    $row-even-text-color: null,\n    $row-selected-background: null,\n    $row-selected-hover-background: null,\n    $row-selected-text-color: null,\n    $row-selected-hover-text-color: null,\n    $row-hover-background: null,\n    $row-hover-text-color: null,\n    $row-border-color: null,\n\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n\n    $cell-active-border-color: null,\n    $cell-selected-background: null,\n    $cell-selected-text-color: null,\n    $cell-editing-background: null,\n    $cell-edited-value-color: null,\n    $cell-new-color: null,\n    $cell-disabled-color: null,\n\n    $edit-mode-color: null,\n    $edited-row-indicator: null,\n\n    $resize-line-color: null,\n    $drop-indicator-color: null,\n\n    $grouparea-background: null,\n    $grouparea-color: null,\n\n    $group-row-background: null,\n    $group-row-selected-background: null,\n    $group-label-column-name-text: null,\n    $group-label-icon: null,\n    $group-label-text: null,\n\n    $expand-all-icon-color: null,\n    $expand-all-icon-hover-color: null,\n\n    $expand-icon-color: null,\n    $expand-icon-hover-color: null,\n\n    $active-expand-icon-color: null,\n    $active-expand-icon-hover-color: null,\n\n    $group-count-background: null,\n    $group-count-text-color: null,\n\n    $drop-area-text-color: null,\n    $drop-area-icon-color: null,\n    $drop-area-background: null,\n    $drop-area-on-drop-background: null,\n\n    $filtering-header-background: null,\n    $filtering-header-text-color: null,\n    $filtering-row-background: null,\n    $filtering-row-text-color: null,\n    $filtering-background-and: null,\n    $filtering-background-or: null,\n    $filtering-background-and--focus: null,\n    $filtering-background-or--focus: null,\n    $tree-filtered-text-color: null,\n    $tree-selected-filtered-row-text-color: null,\n    $tree-selected-filtered-cell-text-color: null,\n\n    $body-summaries-background: null,\n    $body-summaries-text-color: null,\n    $root-summaries-background: null,\n    $root-summaries-text-color: null,\n\n    $row-highlight: null,\n    $grid-shadow: null,\n    $drag-shadow: null,\n    $row-ghost-background: null,\n    $row-drag-color: null,\n    $drop-area-border-radius: null,\n    $grid-border-color: null,\n    $sortable-header-icon-hover-color: null,\n\n    $cell-selected-within-background: null,\n    $cell-selected-within-text-color: null,\n) {\n    $name: 'igx-grid';\n    $selector: 'igx-grid, igx-hierarchical-grid, igx-tree-grid, igx-advanced-filtering-dialog, igx-grid-excel-style-filtering, .igx-excel-filter__secondary';\n    $grid-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-schema: map.get($schema, $name);\n    } @else {\n        $grid-schema: $schema;\n    }\n\n    $theme: apply-palette($grid-schema, $palette);\n\n    $drop-area-border-radius: round-borders(\n        if($drop-area-border-radius, $drop-area-border-radius, map.get($grid-schema, 'drop-area-border-radius')), 0, 16px\n    );\n\n    @if not($cell-selected-within-text-color) and $cell-selected-within-background {\n        $cell-selected-within-text-color: text-contrast($cell-selected-within-background);\n    }\n\n    @if not($ghost-header-icon-color) and $ghost-header-background {\n        @if meta.type-of($ghost-header-background) == 'color' {\n            $ghost-header-icon-color: rgba(text-contrast($ghost-header-background), .07);\n        }\n    }\n\n    @if not($ghost-header-text-color) and $ghost-header-background {\n        $ghost-header-text-color: text-contrast($ghost-header-background);\n    }\n\n    @if $header-background and meta.type-of($header-background) == 'color' {\n        $header-background: to-opaque($header-background, igx-color($palette, 'surface'));\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-selected-text-color) and $header-selected-background {\n        $header-selected-text-color: text-contrast($header-selected-background);\n    }\n\n    @if not($header-border-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-border-color: rgba(text-contrast($header-background), .24);\n        }\n    }\n\n    @if not($content-text-color) and $content-background {\n        $content-text-color: text-contrast($content-background);\n    }\n\n    @if not($row-odd-background) and $content-background {\n        $row-odd-background: $content-background;\n    }\n\n    @if $row-odd-background and meta.type-of($row-odd-background) == 'color' and color.alpha($row-odd-background) != 1 {\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\n\n        $row-odd-background: to-opaque($row-odd-background, $cbg);\n    }\n\n    @if not($row-odd-text-color) and $row-odd-background {\n        $row-odd-text-color: text-contrast($row-odd-background);\n    }\n\n    @if not($row-even-background) and $content-background {\n        $row-even-background: $content-background;\n    }\n\n    @if $row-even-background and meta.type-of($row-even-background) == 'color' and color.alpha($row-even-background) != 1 {\n        $cbg: if($content-background, $content-background, map.get($theme, 'content-background'));\n\n        $row-even-background: to-opaque($row-even-background, $cbg);\n    }\n\n    @if not($row-even-text-color) and $row-even-background {\n        $row-even-text-color: text-contrast($row-even-background);\n    }\n\n    @if not($row-hover-background) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $row-hover-background: to-opaque(rgba(text-contrast($content-background), .08), $content-background)\n        }\n    }\n\n    @if not($row-hover-text-color) and $row-hover-background {\n        $row-hover-text-color: text-contrast($row-hover-background);\n    }\n\n    @if not($cell-selected-text-color) and $cell-selected-background {\n        $cell-selected-text-color: text-contrast($cell-selected-background);\n    }\n\n    @if not($row-selected-text-color) and $row-selected-background {\n        $row-selected-text-color: text-contrast($row-selected-background);\n    }\n\n    @if not($row-selected-hover-text-color) and $row-selected-hover-background {\n        $row-selected-hover-text-color: text-contrast($row-selected-hover-background);\n    }\n\n    @if not($row-border-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $row-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($pinned-border-color) and $content-background {\n        @if meta.type-of($content-background) == 'color' {\n            $pinned-border-color: rgba(text-contrast($content-background), .08)\n        }\n    }\n\n    @if not($group-row-background) and $header-background {\n        $group-row-background: $header-background\n    }\n\n    @if not($expand-icon-color) and $group-row-background {\n        $expand-icon-color: text-contrast($group-row-background)\n    }\n\n    @if not($group-label-text) and $group-row-selected-background {\n        $group-label-text: text-contrast($group-row-selected-background)\n    }\n\n    @if not($expand-icon-color) and $group-row-selected-background {\n        $expand-icon-color: text-contrast($group-row-selected-background)\n    }\n\n    @if not($group-count-background) and $group-row-selected-background {\n        $group-count-background: text-contrast($group-row-selected-background);\n    }\n\n    @if not($expand-all-icon-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $expand-all-icon-color: rgba(text-contrast($header-background), .87);\n        }\n    }\n\n    @if not($expand-all-icon-hover-color) and $header-background {\n        $expand-all-icon-hover-color: text-contrast($header-background);\n    }\n\n    @if not($group-label-text) and $group-row-background {\n        $group-label-text: text-contrast($group-row-background)\n    }\n\n    @if not($group-count-background) and $group-row-background {\n        $group-count-background: text-contrast($group-row-background);\n    }\n\n    @if not($group-count-text-color) and $group-count-background {\n        $group-count-text-color: text-contrast($group-count-background);\n    }\n\n    @if not($grouparea-background) and $header-background {\n        $grouparea-background: $header-background\n    }\n\n    @if not($grouparea-color) and $grouparea-background {\n        @if meta.type-of($grouparea-background) == 'color' {\n            $grouparea-color: rgba(text-contrast($grouparea-background), .8)\n        }\n    }\n\n    @if not($grouparea-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $grouparea-color: rgba(text-contrast($header-background), .8)\n        }\n    }\n\n    @if not($drop-area-background) and $grouparea-background {\n        $drop-area-background: text-contrast($grouparea-background);\n    }\n\n    @if not($drop-area-on-drop-background) and $drop-area-background {\n        $drop-area-on-drop-background: $drop-area-background;\n    }\n\n    @if not($drop-area-text-color) and $drop-area-background {\n        $drop-area-text-color: text-contrast($drop-area-background)\n    }\n\n    @if not($drop-area-icon-color) and $drop-area-background {\n        $drop-area-icon-color: text-contrast($drop-area-background)\n    }\n\n    @if not($filtering-header-background) and $header-background {\n        @if meta.type-of($header-background) == 'color' and luminance($header-background) < .5 {\n            $filtering-header-background: to-opaque(lighten-color($header-background, 5%));\n        } @else {\n            $filtering-header-background: to-opaque(darken-color($header-background, 5%));\n        }\n    }\n\n    @if not($filtering-header-text-color) and $filtering-header-background {\n        $filtering-header-text-color: text-contrast($filtering-header-background);\n    }\n\n    @if not($filtering-row-background) and $header-background {\n        @if meta.type-of($header-background) == 'color' and luminance($header-background) < .5 {\n            $filtering-row-background: to-opaque(lighten-color($header-background, 5%));\n        } @else {\n            $filtering-row-background: to-opaque(darken-color($header-background, 5%));\n        }\n    }\n\n    @if not($filtering-row-text-color) and $filtering-row-background {\n        $filtering-row-text-color: text-contrast(to-opaque($filtering-row-background));\n    }\n\n    @if not($body-summaries-text-color) and $body-summaries-background {\n        $body-summaries-text-color: text-contrast($body-summaries-background);\n    }\n\n    @if not($root-summaries-text-color) and $root-summaries-background {\n        $root-summaries-text-color: text-contrast($root-summaries-background);\n    }\n\n    @if not($grid-shadow) {\n        $grid-elevation: map.get($grid-schema, 'grid-elevation');\n        $grid-shadow: igx-elevation($elevations, $grid-elevation);\n    }\n\n    @if not($drag-shadow) {\n        $drag-elevation: map.get($grid-schema, 'drag-elevation');\n        $drag-shadow: igx-elevation($elevations, $drag-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        header-selected-background:  $header-selected-background,\n        header-selected-text-color:  $header-selected-text-color,\n        header-border-width: $header-border-width,\n        header-border-style: $header-border-style,\n        header-border-color: $header-border-color,\n\n        sorted-header-icon-color: $sorted-header-icon-color,\n\n        ghost-header-text-color: $ghost-header-text-color,\n        ghost-header-icon-color: $ghost-header-icon-color,\n        ghost-header-background: $ghost-header-background,\n\n        content-background: $content-background,\n        content-text-color: $content-text-color,\n\n        row-odd-background: $row-odd-background,\n        row-even-background: $row-even-background,\n        row-odd-text-color: $row-odd-text-color,\n        row-even-text-color: $row-even-text-color,\n        row-selected-background: $row-selected-background,\n        row-selected-hover-background: $row-selected-hover-background,\n        row-selected-text-color: $row-selected-text-color,\n        row-selected-hover-text-color: $row-selected-hover-text-color,\n        row-hover-background: $row-hover-background,\n        row-hover-text-color: $row-hover-text-color,\n        row-border-color: $row-border-color,\n\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n\n        cell-active-border-color: $cell-active-border-color,\n        cell-selected-background: $cell-selected-background,\n        cell-editing-background: $cell-editing-background,\n        cell-selected-text-color: $cell-selected-text-color,\n\n        edit-mode-color: $edit-mode-color,\n        edited-row-indicator: $edited-row-indicator,\n        cell-edited-value-color: $cell-edited-value-color,\n        cell-new-color: $cell-new-color,\n\n        cell-disabled-color: $cell-disabled-color,\n\n        resize-line-color: $resize-line-color,\n\n        drop-indicator-color: $drop-indicator-color,\n\n        grouparea-background: $grouparea-background,\n        grouparea-color: $grouparea-color,\n\n        group-label-column-name-text: $group-label-column-name-text,\n        group-label-icon: $group-label-icon,\n        group-label-text: $group-label-text,\n\n        expand-all-icon-color: $expand-all-icon-color,\n        expand-all-icon-hover-color: $expand-all-icon-hover-color,\n\n        expand-icon-color: $expand-icon-color,\n        expand-icon-hover-color: $expand-icon-hover-color,\n        active-expand-icon-color: $active-expand-icon-color,\n        active-expand-icon-hover-color: $active-expand-icon-hover-color,\n\n        group-count-background: $group-count-background,\n        group-count-text-color: $group-count-text-color,\n\n        group-row-background: $group-row-background,\n        group-row-selected-background: $group-row-selected-background,\n\n        drop-area-text-color: $drop-area-text-color,\n        drop-area-icon-color: $drop-area-icon-color,\n        drop-area-on-drop-background: $drop-area-on-drop-background,\n        drop-area-background: $drop-area-background,\n\n        filtering-header-background: $filtering-header-background,\n        filtering-header-text-color: $filtering-header-text-color,\n        filtering-row-background: $filtering-row-background,\n        filtering-row-text-color: $filtering-row-text-color,\n        filtering-background-and: $filtering-background-and,\n        filtering-background-or: $filtering-background-or,\n        filtering-background-and--focus: $filtering-background-and--focus,\n        filtering-background-or--focus: $filtering-background-or--focus,\n\n        tree-filtered-text-color: $tree-filtered-text-color,\n        tree-selected-filtered-row-text-color: $tree-selected-filtered-row-text-color,\n        tree-selected-filtered-cell-text-color: $tree-selected-filtered-cell-text-color,\n\n        body-summaries-background: $body-summaries-background,\n        body-summaries-text-color: $body-summaries-text-color,\n        root-summaries-background: $root-summaries-background,\n        root-summaries-text-color: $root-summaries-text-color,\n\n        row-highlight: $row-highlight,\n        grid-shadow: $grid-shadow,\n        drag-shadow: $drag-shadow,\n        row-ghost-background: $row-ghost-background,\n        row-drag-color: $row-drag-color,\n        drop-area-border-radius: $drop-area-border-radius,\n        sortable-header-icon-hover-color: $sortable-header-icon-hover-color,\n        grid-border-color: $grid-border-color,\n\n        cell-selected-within-background: $cell-selected-within-background,\n        cell-selected-within-text-color: $cell-selected-within-text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires {mixin} excel-filtering\n/// @requires igx-color\n/// @requires igx-contrast-color\n/// @requires rem\n/// @requires var-get\n@mixin igx-grid($theme) {\n    @include igx-css-vars($theme);\n\n    @include scale-in-ver-center();\n\n    $palette: map.get($theme, 'palette');\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $cbx-size: map.get((\n        material: rem(20px),\n        fluent: rem(20px),\n        bootstrap: rem(14px),\n        indigo-design: rem(20px),\n    ), $variant);\n    $cbx-bs-size: rem(14px);\n\n    $grid-shadow: var-get($theme, 'grid-shadow');\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $grid-caption-fs: rem(20px);\n    $grid-caption-lh: rem(32px);\n    $grid-caption-padding: rem(16px) rem(24px);\n\n    $grid-head-fs: rem(12px);\n    $grid-head-fw: 600;\n    $transition: all 120ms $ease-in-out-cubic;\n\n    // Cell\n    $grid-cell-align-num: #{$right};\n    $grid-cell-fs: rem(13px);\n    $grid-cell-lh: rem(16px);\n    $grid-cell-pinned-style: 1px solid;\n    $grid-cell-pinned-border-color: igx-color($palette, 'grays', 300);\n\n    $grid-header-border: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n\n    $cell-pin: (\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\n        color: var-get($theme, 'pinned-border-color')\n    );\n\n    $grid-header-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grid-cbx-padding: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $cbx-padding: map.get($grid-cbx-padding, 'comfortable');\n    $cbx-padding-cosy: map.get($grid-cbx-padding, 'cosy');\n    $cbx-padding-compact: map.get($grid-cbx-padding, 'compact');\n\n    $grid-header-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $drop-area-height: (\n        comfortable: rem(32px),\n        cosy: rem(24px),\n        compact: rem(24px)\n    );\n\n    $cell-padding-comfortable: rem(24px);\n    $cell-padding-cosy: rem(16px);\n    $cell-padding-compact: rem(12px);\n\n    $grid-cell-padding: (\n        comfortable: 0 $cell-padding-comfortable,\n        cosy: 0 $cell-padding-cosy,\n        compact: 0 $cell-padding-compact\n    );\n\n    $hierarchical-grid-indent: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $hierarchical-action-icon: 24px;\n\n    $grouparea-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $grouparea-min-height: (\n        comfortable: rem(57px),\n        cosy: rem(49px),\n        compact: rem(41px)\n    );\n\n    $grid-grouping-indicator-padding: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $indicator-icon-width: rem(24px);\n    $drag-icon-size: rem(24px);\n    $grouping-padding-right: rem(12px);\n\n    $grid-header-weight: map.get((\n        material: 600,\n        fluent: 800,\n        bootstrap: 700,\n        indigo-design: 600,\n    ), $variant);\n\n    %disable-focus-styles {\n        outline: 0;\n    }\n\n    %grid-display {\n        position: relative;\n        display: grid;\n        grid-template-rows: auto auto auto 1fr auto auto;\n        grid-template-columns: 1fr;\n        overflow: hidden;\n        box-shadow: $grid-shadow;\n\n        @if $variant == 'fluent' {\n            box-shadow: 0 0 0 1px var-get($theme, 'grid-border-color');\n        }\n\n        outline-style: none;\n        z-index: 1;\n\n        %cbx-display {\n            min-width: $cbx-size;\n        }\n    }\n\n    %grid-caption {\n        display: flex;\n        align-items: center;\n        font-size: $grid-caption-fs;\n        line-height: $grid-caption-lh;\n        padding: $grid-caption-padding;\n        grid-row: 1;\n    }\n\n    %grid-thead,\n    %grid-tfoot {\n        position: relative;\n        display: flex;\n        background: var-get($theme, 'header-background');\n        color: var-get($theme, 'header-text-color');\n        overflow: hidden;\n        outline-style: none;\n\n        %grid-row {\n            position: relative;\n            background: inherit;\n            color: inherit;\n            z-index: 2;\n\n            &:hover {\n                background: inherit;\n                color: inherit;\n            }\n        }\n\n        > [aria-activedescendant] {\n            outline-style: none;\n        }\n    }\n\n    %grid-thead {\n        border-bottom: $grid-header-border;\n\n        @if $bootstrap-theme {\n            border-bottom-width: rem(2px);\n        }\n\n        z-index: 2;\n\n        %grid__cbx-selection--push {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'comfortable') - rem(20px), 2);\n        }\n\n        %grid-row {\n            border-bottom: none;\n        }\n    }\n\n    %grid-thead-container {\n        grid-row: 3;\n        display: flex;\n        overflow: hidden;\n\n        %igx-grid__drag-indicator {\n            cursor: default;\n        }\n\n        %grid-row--mrl {\n            %igx-grid__hierarchical-expander--header,\n            %igx-grid__header-indentation,\n            %igx-grid__row-indentation,\n            %grid__cbx-selection {\n                border-bottom: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n            }\n        }\n    }\n\n    %grid-thead--cosy {\n        %grid__cbx-selection--push--cosy {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'cosy') - rem(20px), 2);\n        }\n    }\n\n    %grid-thead--compact {\n        %grid__cbx-selection--push--compact {\n            align-items: flex-start;\n            padding-top: math.div(map.get($grid-header-height, 'compact') - rem(20px), 2);\n        }\n    }\n\n    %grid-thead-title {\n        flex-basis: auto !important;\n        align-items: center !important;\n        border-bottom: $grid-header-border;\n        height: map.get($grid-header-height, 'comfortable');\n    }\n\n    %grid-thead-title--pinned {\n        border-#{$right}: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n    }\n\n    %grid-thead-title--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-thead-title--compact {\n        height: map.get($grid-header-height, 'compact');\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %grid-thead-group {\n        display: flex;\n        flex-flow: row nowrap;\n    }\n\n    /* We set those with position relative\n    so that the drop indicators be scoped\n    to their respective group. The item\n    being the topmost element, while the\n    subgroup encapsulates children of each\n    thead item and group.\n    */\n    %grid-thead-item {\n        display: flex;\n        flex-flow: column nowrap;\n\n        %grid-thead-group {\n            flex: 1 1 auto;\n        }\n\n        %grid-cell-header {\n            flex: 1 1 auto;\n        }\n\n        %grid-thead-title {\n            flex: 0 0 auto;\n        }\n    }\n\n    %grid-thead-item,\n    %grid-thead-subgroup {\n        position: relative;\n    }\n\n    %grid-tfoot {\n        grid-row: 5;\n        border-top: $grid-header-border;\n        z-index: 10001;\n    }\n\n    %grid-footer {\n        grid-row: 7;\n    }\n\n    %grid-display-container-thead {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-display-container-tr {\n        width: 100%;\n        overflow: visible;\n    }\n\n    %grid-mrl-block {\n        display: grid;\n        background: inherit;\n        position: relative;\n\n        %grid-thead-item {\n            display: flex;\n        }\n\n        %grid-cell-header {\n            align-items: center;\n            flex-grow: 1;\n            border-bottom: $grid-header-border;\n        }\n\n        %grid-cell-display {\n            border-#{$right}: 1px solid var-get($theme, 'row-border-color');\n            border-bottom: 1px solid var-get($theme, 'row-border-color');\n        }\n    }\n\n    %grid-row--mrl {\n        &%grid-row {\n            border-bottom-color: transparent;\n        }\n\n        %grid__cbx-selection,\n        %igx-grid__row-indentation,\n        %igx-grid__drag-indicator {\n            border-bottom: 1px solid var-get($theme, 'row-border-color');\n        }\n    }\n\n    %grid-tbody {\n        position: relative;\n        background: var-get($theme, 'content-background');\n        color: var-get($theme, 'content-text-color');\n        overflow: hidden;\n        z-index: 1;\n        outline-style: none;\n    }\n\n    %grid-tbody-container {\n        position: relative;\n        display: flex;\n        grid-row: 4;\n        overflow: hidden;\n    }\n\n    %grid-tbody-message {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        color: var-get($theme, 'content-text-color');\n        flex-direction: column;\n        padding: rem(24px);\n    }\n\n    %igx-grid__loading {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        min-height: 100px;\n\n        > %circular-display {\n            width: rem(50);\n            height: rem(50);\n        }\n    }\n\n    %grid-scroll {\n        grid-row: 6;\n        display: flex;\n        flex-flow: row nowrap;\n        width: 100%;\n        background: var-get($theme, 'header-background');\n        z-index: 10001;\n    }\n\n    %grid-thead-thumb {\n        background: var-get($theme, 'header-background');\n        border-#{$left}: 1px solid var-get($theme, 'header-border-color');\n    }\n\n    %grid-tfoot-thumb {\n        position: absolute;\n        top: 0;\n        #{$right}: 0;\n        background: var-get($theme, 'header-background');\n        border-#{$left}: 1px solid var-get($theme, 'header-border-color');\n    }\n\n    %grid-tbody-scrollbar {\n        background: var-get($theme, 'content-background');\n        border-#{$left}: 1px solid var-get($theme, 'row-border-color');\n        position: relative;\n    }\n\n    %grid-tbody-scrollbar-start {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-tbody-scrollbar-main {\n        position: relative;\n    }\n\n    %grid-tbody-scrollbar-end {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-scroll-start {\n        background: var-get($theme, 'header-background');\n    }\n\n    %grid-scroll-main {\n        igx-display-container {\n            height: 0;\n        }\n\n        igx-horizontal-virtual-helper {\n            height: 100%;\n        }\n    }\n\n    %grid-row {\n        display: flex;\n        background: var-get($theme, 'content-background');\n        border-bottom: 1px solid var-get($theme, 'row-border-color');\n        outline-style: none;\n        position: relative;\n        background-clip: content-box !important;\n\n        &:hover {\n            background: var-get($theme, 'row-hover-background');\n            color: var-get($theme, 'row-hover-text-color');\n\n            %grid-cell--column-selected {\n                color: var-get($theme, 'row-selected-hover-text-color');\n                background: var-get($theme, 'row-selected-hover-background');\n            }\n\n            %grid-cell--cross-selected {\n                color: var-get($theme, 'cell-selected-within-text-color');\n                background: var-get($theme, 'cell-selected-within-background');\n            }\n        }\n\n        &%igx-grid__tr--ghost {\n            @include igx-css-vars((\n                name: 'igx-grid-row',\n                row-ghost-background: map.get($theme, 'row-ghost-background'),\n                row-drag-color: map.get($theme, 'row-drago-color')\n            ));\n\n            background: var-get($theme, 'row-ghost-background');\n            color: var-get($theme, 'row-drag-color');\n            z-index: 1;\n        }\n    }\n\n    %igx-grid__drag-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: map.get($grid-cell-padding, 'comfortable');\n        flex: 1 0 auto;\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-comfortable});\n        background: inherit;\n        z-index: 4;\n        cursor: move;\n        border-#{$right}: 1px solid transparent;\n\n        igx-icon {\n            width: $drag-icon-size;\n            height: $drag-icon-size;\n            font-size: $drag-icon-size;\n        }\n    }\n\n    %igx-grid__drag-indicator--cosy {\n        padding: map.get($grid-cell-padding, 'cosy');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-cosy});\n    }\n\n    %igx-grid__drag-indicator--compact {\n        padding: map.get($grid-cell-padding, 'compact');\n        // Fix for IE 11\n        min-width: calc(#{$drag-icon-size} + #{$cell-padding-compact});\n    }\n\n    %igx-grid__drag-indicator--header {\n        border-#{$right}: $grid-header-border;\n    }\n\n    %igx-grid__drag-indicator--off {\n        color: var-get($theme, 'row-drag-color');\n    }\n\n    %igx-grid__tr--drag {\n        opacity: .5;\n    }\n\n    %grid-row--odd {\n        background: var-get($theme, 'row-odd-background');\n        color: var-get($theme, 'row-odd-text-color');\n    }\n\n    %grid-row--even {\n        background: var-get($theme, 'row-even-background');\n        color: var-get($theme, 'row-even-text-color');\n    }\n\n    %igx-grid__tr--expanded {\n        border-bottom: none;\n    }\n\n    %igx-grid__tr--pinned {\n        position: relative;\n        background: inherit;\n        z-index: 10000;\n\n        %igx-grid__hierarchical-expander--empty {\n            border-#{$right}: 1px solid transparent;\n        }\n    }\n\n    %igx-grid__tr--pinned-top {\n        border-bottom: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n    }\n\n    %igx-grid__tr--pinned-bottom {\n        border-top: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n        position: absolute;\n        bottom: 0;\n    }\n\n    %igx-grid__td--bool {\n        justify-content: center;\n\n        igx-icon {\n            height: rem(18px);\n            width: rem(18px);\n            font-size: rem(18px);\n        }\n\n        %igx-icon--error {\n            color: igx-color($palette, 'grays', 500);\n        }\n    }\n\n    %igx-grid__td--bool-true {\n        %igx-icon--success {\n            color: igx-color($palette, 'grays', 700);\n        }\n    }\n\n    %igx-grid__tr--edit {\n        border-bottom: 1px solid var-get($theme, 'edit-mode-color');\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            height: rem(1);\n            width: 100%;\n            top: rem(-1);\n            #{$left}: 0;\n            background: var-get($theme, 'edit-mode-color');\n        }\n\n        &%grid-row {\n            border-bottom: 1px solid var-get($theme, 'edit-mode-color');\n        }\n\n        %igx-grid__td--editing {\n            border: none;\n\n            %form-group-bundle--focus {\n                caret-color: var-get($theme, 'edit-mode-color') !important;\n            }\n\n            %form-group-border {\n                background: var-get($theme, 'edit-mode-color') !important;\n            }\n        }\n\n        [aria-readonly='true'] {\n            color: var-get($theme, 'cell-disabled-color');\n\n            igx-icon {\n                color: var-get($theme, 'cell-disabled-color');\n            }\n        }\n    }\n\n    %igx-grid__tr--inner {\n        display: flex;\n        background: inherit;\n    }\n\n    %igx-grid__tr--add-animate {\n        @include animation(scale-in-ver-center .2s $ease-in-out-quad);\n    }\n\n    %grid-row--edit-mrl {\n        &:first-of-type::after {\n            top: 0;\n            z-index: 5;\n        }\n    }\n\n    %igx-grid__tr--edited {\n        &::before {\n            content: '';\n            position: absolute;\n            width: if($variant == 'indigo-design', rem(4px), rem(2px));\n            height: 100%;\n            z-index: 10000;\n            background: var-get($theme, 'edited-row-indicator');\n        }\n    }\n\n    %grid-row--group {\n        position: relative;\n        background: var-get($theme, 'header-background') !important;\n    }\n\n    %igx-grid-row--filtered {\n        %grid-cell-text {\n            color: var-get($theme, 'tree-filtered-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'tree-filtered-text-color');\n\n            &:hover {\n                color: var-get($theme, 'tree-filtered-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %grid-row--selected--filtered {\n        %grid-cell-text {\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'tree-selected-filtered-row-text-color');\n\n            &:hover {\n                color: var-get($theme, 'tree-selected-filtered-row-text-color');\n            }\n        }\n\n        %grid-cell--selected {\n            %grid-cell-text {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n            }\n\n            %igx-grid__tree-grouping-indicator {\n                color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n\n                &:hover {\n                    color: var-get($theme, 'tree-selected-filtered-cell-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tree-grouping-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        user-select: none;\n        outline-style: none;\n        margin-#{$right}: rem(8);\n        cursor: pointer;\n\n        color: var-get($theme, 'expand-icon-color');\n\n        &:hover {\n            color: var-get($theme, 'expand-icon-hover-color')\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__tree-loading-indicator {\n        width: rem(24px, 16px);\n        height: rem(24px, 16px);\n        margin-#{$right}: rem(8px, 16px);\n\n        %circular-outer {\n            stroke: var-get($theme, 'expand-icon-color');\n        }\n\n        > %circular-display {\n            width: rem(24);\n            height: rem(24);\n        }\n    }\n\n    %grid-cell-display {\n        position: relative;\n        display: flex;\n        flex: 1 1 0%;\n        align-items: center;\n        outline-style: none;\n        padding: map.get($grid-cell-padding, 'comfortable');\n        font-size: $grid-cell-fs;\n        line-height: $grid-cell-lh;\n        color: inherit;\n        text-align: #{$left};\n        background-clip: border-box !important;\n    }\n\n    %igx-grid__td--tree-cell {\n        overflow: hidden;\n    }\n\n    %grid-cell-text {\n        @include ellipsis();\n    }\n\n    %grid-cell-display--cosy {\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %grid-cell-display--compact {\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %grid-cell--fixed-width {\n        flex-grow: 0;\n        outline-style: none;\n    }\n\n    %grid-cell--active {\n        box-shadow: inset 0 0 0 1px var-get($theme, 'cell-active-border-color');\n\n        %igx-grid__filtering-cell,\n        %grid-cell-header {\n            border-#{$right}-color: var-get($theme, 'cell-active-border-color');\n            border-bottom-color: var-get($theme, 'cell-active-border-color');\n        }\n    }\n\n    %grid-cell--pinned-selected,\n    %grid-cell--selected {\n        color: var-get($theme, 'cell-selected-text-color');\n        background: var-get($theme, 'cell-selected-background');\n        // this is causing an issue https://github.com/IgniteUI/igniteui-angular/issues/4981\n        // border-bottom: 0;\n\n        %igx-grid__tree-grouping-indicator {\n            &:hover {\n                color: var-get($theme, 'cell-selected-text-color');\n            }\n        }\n    }\n\n    %grid-row--selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n\n        %grid-cell--selected,\n        %grid-cell--pinned-selected {\n            color: var-get($theme, 'cell-selected-within-text-color');\n            background: var-get($theme, 'cell-selected-within-background');\n        }\n\n        &:hover {\n            background: var-get($theme, 'row-selected-hover-background');\n            color: var-get($theme, 'row-selected-hover-text-color');\n\n            %grid-cell--column-selected {\n                color: var-get($theme, 'row-selected-hover-text-color');\n                background: var-get($theme, 'row-selected-hover-background');\n            }\n        }\n\n        %igx-grid__tree-grouping-indicator {\n            color: var-get($theme, 'row-selected-text-color');\n\n            &:hover {\n                color: var-get($theme, 'row-selected-text-color');\n            }\n        }\n    }\n\n    %grid-cell--column-selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n    }\n\n    %grid-cell--cross-selected {\n        color: var-get($theme, 'cell-selected-within-text-color');\n        background: var-get($theme, 'cell-selected-within-background');\n    }\n\n    %igx-grid__td--new {\n        color: var-get($theme, 'cell-new-color');\n    }\n\n    %igx-grid__td--edited {\n        %grid-cell-text {\n            font-style: italic;\n            color: var-get($theme, 'cell-edited-value-color');\n            padding: 0 1px;\n        }\n    }\n\n    %igx-grid__tr--deleted {\n        %grid-cell-text {\n            font-style: italic;\n            color: igx-color(map.get($theme, 'palette'), 'error');\n            text-decoration: line-through;\n        }\n    }\n\n    %igx-grid__tr--disabled {\n        %grid-cell-text {\n            color: var-get($theme, 'cell-disabled-color');\n        }\n    }\n\n    %igx-grid__td--editing {\n        background: var-get($theme, 'cell-editing-background') !important;\n        box-shadow: inset 0 0 0 rem(2px) var-get($theme, 'edit-mode-color');\n        padding: 0 !important;\n\n        // Have a more stable visual editing experience\n        igx-input-group,\n        igx-select,\n        igx-date-picker,\n        igx-time-picker {\n            width: 100%;\n            height: 100%;\n        }\n\n        igx-input-group {\n            --theme: fluent;\n            padding-top: 0 !important;\n        }\n\n        .igx-input-group__bundle {\n            border: none !important;\n        }\n\n        igx-prefix,\n        igx-suffix {\n            padding-top: 0 !important;\n            padding-bottom: 0 !important;\n        }\n\n        igx-date-range-picker {\n            height: 100%;\n        }\n\n        igx-time-picker [igxLabel] {\n            display: none;\n        }\n\n        %form-group-bundle {\n            height: 100%;\n        }\n\n        input {\n            margin: 0 auto;\n            max-width: 100%;\n        }\n\n        %form-group-input {\n            // ignore global typography\n            font-size: $grid-cell-fs !important;\n            line-height: $grid-cell-lh !important;\n        }\n    }\n\n    %grid-cell--pinned {\n        position: relative;\n        background: inherit;\n        z-index: 9999;\n    }\n\n    %grid-cell--pinned--column-selected {\n        color: var-get($theme, 'row-selected-text-color');\n        background: var-get($theme, 'row-selected-background');\n\n        &:hover {\n            background: var-get($theme, 'row-selected-hover-background');\n            color: var-get($theme, 'row-selected-text-color');\n        }\n    }\n\n    %grid-cell--pinned-last {\n        border-#{$right}: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n\n        %igx-grid__filtering-cell,\n        %grid-cell-header {\n            border-#{$right}: none;\n        }\n\n        &%grid-cell--editing {\n            border-#{$right}: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell--pinned-first {\n        border-#{$left}: map.get($cell-pin, 'style') map.get($cell-pin, 'color') !important;\n\n        &%grid-cell--editing {\n            border-#{$left}: map.get($cell-pin, 'style') var-get($theme, 'cell-selected-background') !important;\n        }\n    }\n\n    %grid-cell--row-pinned-first {\n        overflow: hidden;\n    }\n\n    %grid-cell--pinned-chip {\n        margin-#{$right}: rem(12px);\n    }\n\n    %grid-cell--pinned-chip--cosy {\n        margin-#{$right}: rem(8px);\n    }\n\n    %grid-cell--pinned-chip--compact {\n        margin-#{$right}: rem(4px);\n    }\n\n    %grid-cell-header {\n        flex-flow: row nowrap;\n        justify-content: space-between;\n        align-items: flex-end;\n        font-size: $grid-head-fs;\n        font-weight: $grid-head-fw;\n        min-width: 0;\n        padding: map.get($grid-header-padding, 'comfortable');\n        border-#{$right}: $grid-header-border;\n        outline-style: none;\n        overflow: hidden;\n        transition: color 250ms ease-in-out;\n    }\n\n    %grid-cell-header--filtering {\n        background: var-get($theme, 'filtering-header-background');\n        color: var-get($theme, 'filtering-header-text-color');\n        z-index: 3;\n    }\n\n    %grid-cell-header--cosy {\n        padding: map.get($grid-header-padding, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header--compact {\n        padding: map.get($grid-header-padding, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-header-title {\n        @include ellipsis();\n        font-weight: $grid-header-weight;\n        min-width: 3ch;\n        user-select: none;\n        cursor: initial;\n        flex-grow: 1; /* hey IE, the text should take most of the space */\n        // align-self: flex-end; /* commenting out for now on external request */\n        line-height: math.div(map.get($grid-header-height, 'comfortable'), $grid-head-fs);\n        transition: color 250ms ease-in-out;\n    }\n\n    %grid-cell-header-title--cosy {\n        line-height: math.div(map.get($grid-header-height, 'cosy'), $grid-head-fs);\n    }\n\n    %grid-cell-header-title--compact {\n        line-height: math.div(map.get($grid-header-height, 'compact'), $grid-head-fs);\n    }\n\n    %grid-cell-header-icons {\n        display: inline-flex;\n        align-items: center;\n        justify-content: flex-end;\n        user-select: none;\n        min-width: 30px; /* sort-icon + filter icon width */\n        height: map.get($grid-header-height, 'comfortable');\n        align-self: flex-end;\n\n        &:empty {\n            min-width: 0;\n        }\n\n        .sort-icon {\n            position: relative;\n            display: flex;\n\n            igx-icon {\n                width: rem(15px);\n                height: rem(15px);\n                font-size: rem(15px);\n            }\n\n            &::after {\n                content: attr(data-sortIndex);\n                position: absolute;\n                top: -5px;\n                #{$right}: -1px;\n                font-size: rem(10px);\n                text-align: $right;\n                font-family: sans-serif;\n                line-height: rem(10px);\n            }\n        }\n    }\n\n\n    %igx-grid-th__expander {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-#{$right}: rem(8px);\n        cursor: pointer;\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n        }\n\n        &:hover {\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid-th__group-title {\n        @include ellipsis();\n    }\n\n    %igx-grid-th--collapsible {\n        justify-content: normal;\n    }\n\n    %igx-grid-th--selectable {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n        opacity: if($variant != 'indigo-design', .7, 1);\n\n        .sort-icon {\n            color: var-get($theme, 'header-selected-text-color');\n\n            ::after {\n                background: var-get($theme, 'header-selected-background');\n            }\n        }\n\n        &%igx-grid-th--sorted {\n            .sort-icon {\n                color: var-get($theme, 'header-selected-text-color');\n\n                &:focus,\n                &:hover {\n                    color: var-get($theme, 'header-selected-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid-th--selected {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n\n        .sort-icon::after {\n            background: var-get($theme, 'header-selected-background');\n        }\n\n        &%igx-grid-th--sorted {\n            .sort-icon {\n                color: var-get($theme, 'header-selected-text-color');\n\n                &:focus,\n                &:hover {\n                    color: var-get($theme, 'header-selected-text-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid-th--active {\n        @extend %grid-cell--active;\n\n        %igx-grid-th--selected,\n        %igx-grid-th--selectable {\n            @extend %grid-cell--active;\n        }\n    }\n\n    %igx-grid-summary--active {\n        @extend %grid-cell--active !optional;\n    }\n\n    %igx-grid-th--sortable {\n        .sort-icon {\n            cursor: pointer;\n            opacity: .7;\n\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    %igx-grid-th--sorted {\n        .sort-icon {\n            opacity: 1;\n            color: var-get($theme, 'sorted-header-icon-color');\n\n            &:hover {\n                color: var-get($theme, 'sortable-header-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid-th--filtrable {\n        %grid-cell-header-title {\n            opacity: .7;\n        }\n    }\n\n    %igx-grid-th--filtrable-sortable {\n        .sort-icon {\n            &:hover {\n                opacity: 1;\n            }\n        }\n    }\n\n    .sort-icon {\n        opacity: 0;\n        transition: all 250ms ease-in-out;\n    }\n\n    %grid-cell-header-icons--cosy {\n        height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid-cell-header-icons--compact {\n        height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid-cell-number {\n        text-align: $grid-cell-align-num;\n        justify-content: flex-end;\n\n        %grid-cell-header-icons {\n            justify-content: flex-start;\n            order: -1;\n\n            .sort-icon {\n                order: 1;\n            }\n        }\n    }\n\n    %grid__cbx-selection {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: inherit;\n        z-index: 4;\n    }\n\n    %cbx-padding {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        // The min-width here plays the role of padding because of IE11\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding} * 2));\n    }\n\n    %cbx-padding--cosy {\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding-cosy} * 2));\n    }\n\n    %cbx-padding--compact {\n        min-width: calc(#{$cbx-size} + (#{$cbx-padding-compact} * 2));\n    }\n\n    %grid__resize-handle {\n        position: absolute;\n        width: 4px;\n        top: 0;\n        #{$right}: -2px;\n        height: 100%;\n        z-index: 2;\n    }\n\n    %grid__resize-line {\n        position: absolute;\n        cursor: col-resize;\n        width: 4px;\n        background: var-get($theme, 'resize-line-color');\n        z-index: 2;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            height: 100%;\n            width: 96px;\n        }\n\n        &::before {\n            #{$right}: 100%;\n        }\n\n        &::after {\n            #{$left}: 100%;\n        }\n    }\n\n    %grid-summaries {\n        display: flex;\n        overflow: hidden;\n        background: var-get($theme, 'root-summaries-background');\n        outline-style: none;\n\n        %igx-grid-summary__result {\n            color: var-get($theme, 'root-summaries-text-color');\n        }\n    }\n\n    %grid-summaries--body {\n        background: var-get($theme, 'body-summaries-background');\n        border-bottom: 1px dashed var-get($theme, 'row-border-color');\n\n        &:last-of-type {\n            border-bottom: none;\n        }\n\n        %igx-grid-summary__result {\n            color: var-get($theme, 'body-summaries-text-color');\n        }\n    }\n\n    %grid-summaries-patch {\n        background: inherit;\n        position: relative;\n        z-index: 1;\n        border-#{$right}: 1px solid var-get($theme, 'header-border-color');\n    }\n\n    // Column moving\n    %igx-grid-th__drop-indicator-left,\n    %igx-grid-th__drop-indicator-right {\n        position: absolute;\n        width: 1px;\n        height: 100%;\n        top: 0;\n        z-index: 1;\n    }\n\n    %igx-grid-th__drop-indicator-left {\n        #{$left}: -1px;\n    }\n\n    %igx-grid-th__drop-indicator-right {\n        #{$right}: -1px;\n    }\n\n    %igx-grid-th__drop-indicator--active {\n        &%igx-grid-th__drop-indicator-left,\n        &%igx-grid-th__drop-indicator-right {\n            border-#{$right}: 1px solid var-get($theme, 'drop-indicator-color');\n        }\n\n        &::after,\n        &::before {\n            position: absolute;\n            content: '';\n            width: 0;\n            height: 0;\n            border-style: solid;\n            #{$left}: -3px;\n        }\n\n        &::before {\n            bottom: 0;\n            border-width: 0 4px 4px;\n            border-color: transparent transparent var-get($theme, 'drop-indicator-color');\n        }\n\n        &::after {\n            top: 0;\n            border-width: 4px 4px 0;\n            border-color: var-get($theme, 'drop-indicator-color') transparent transparent;\n        }\n    }\n\n    %grid__scroll-on-drag-left,\n    %grid__scroll-on-drag-right {\n        position: absolute;\n        width: 15px;\n        top: 0;\n        height: 100%;\n        z-index: 25;\n    }\n\n    %grid__scroll-on-drag-left {\n        #{$left}: 0;\n    }\n\n    %grid__scroll-on-drag-right {\n        #{$right}: 0;\n    }\n\n    %grid__scroll-on-drag-pinned {\n        position: absolute;\n        width: 15px;\n        height: 100%;\n        top: 0;\n        z-index: 25;\n    }\n\n    %grid__drag-ghost-image {\n        position: absolute;\n        display: flex;\n        align-items: center;\n        background: var-get($theme, 'ghost-header-background');\n        color: var-get($theme, 'ghost-header-text-color');\n        min-width: 168px;\n        max-width: 320px;\n        height: map.get($grid-header-height, 'comfortable');\n        min-height: map.get($grid-header-height, 'comfortable');\n        top: -99999px;\n        #{$left}: -99999px;\n        border: none;\n        box-shadow: var-get($theme, 'drag-shadow');\n        overflow: hidden;\n        z-index: 20;\n\n        %grid-cell-header-title {\n            @include ellipsis();\n            flex: 1 0 0;\n            text-align: #{$right};\n        }\n\n        %grid-cell-header-icons {\n            display: none;\n        }\n\n        %grid-thead-title {\n            border: none;\n        }\n    }\n\n    %grid__drag-ghost-image--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %grid__drag-ghost-image--compact {\n        height: map.get($grid-header-height, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %grid__drag-ghost-image-icon {\n        color: var-get($theme, 'ghost-header-icon-color');\n        margin-#{$right}: rem(12px);\n    }\n\n    %grid__drag-ghost-image-icon-group {\n        color: var-get($theme, 'ghost-header-icon-color');\n        padding: var-get($grid-header-padding, 'comfortable');\n        padding-#{$right}: 0;\n        margin-#{$right}: rem(8);\n    }\n\n    %igx-grid__drag-col-header {\n        background: var-get($theme, 'header-background');\n\n        %grid-cell-header {\n            > * {\n                opacity: .4;\n            }\n        }\n    }\n\n    // Group by section\n    %igx-grid__group-row {\n        background: var-get($theme, 'group-row-background');\n        display: flex;\n        outline-style: none;\n        border-bottom: 1px solid var-get($theme, 'row-border-color');\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        %igx-grid__drag-indicator {\n            cursor: default;\n            flex-grow: 0;\n        }\n    }\n\n    %igx-grid__group-row--active {\n        background: var-get($theme, 'group-row-selected-background');\n        @extend %grid-cell--active !optional;\n\n        %igx-grid__grouping-indicator {\n            color: var-get($theme, 'expand-icon-color');\n        }\n\n        %igx-grid__drag-indicator {\n            border: 1px solid var-get($theme, 'cell-active-border-color');\n            border-left-width: 0;\n            border-right-width: 0;\n            box-shadow: inset 1px 0 0 0 var-get($theme, 'cell-active-border-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'group-row-selected-background');\n        }\n    }\n\n    %igx-grid__group-row--cosy {\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-row--compact {\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-group-label {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        line-height: rem(16px);\n\n        > * {\n            margin-#{$right}: rem(4px);\n\n            &:last-child {\n                margin-#{$right}: 0;\n            }\n        }\n    }\n\n    %igx-group-label__icon {\n        user-select: none;\n\n        igx-icon {\n            color: var-get($theme, 'group-label-icon');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n        }\n    }\n\n    %igx-group-label__column-name {\n        color: var-get($theme, 'group-label-column-name-text');\n        font-weight: 600;\n        font-size: 12px;\n    }\n\n    %igx-group-label__count-badge {\n        > div {\n            background: var-get($theme, 'group-count-background');\n            color: var-get($theme, 'group-count-text-color');\n            font-size: $grid-head-fs;\n        }\n    }\n\n    %igx-group-label__text {\n        font-size: rem(13px);\n        color: var-get($theme, 'group-label-text')\n    }\n\n    [dir='rtl'] {\n        %igx-grid__group-content {\n            padding-#{$left}: map.get($grid-grouping-indicator-padding, 'comfortable');\n        }\n\n        %igx-grid__group-content--cosy {\n            padding-#{$left}: map.get($grid-grouping-indicator-padding, 'cosy');\n        }\n\n        %igx-grid__group-content--compact{\n            padding-#{$left}: map.get($grid-grouping-indicator-padding, 'compact');\n        }\n\n        %igx-group-label {\n            > * {\n                margin-#{$left}: rem(4px);\n\n                &:last-child {\n                    margin-#{$left}: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid__group-content {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex: 1 1 auto;\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'comfortable');\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        &:focus {\n            outline: transparent;\n        }\n    }\n\n    %igx-grid__group-content--cosy {\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'cosy');\n        min-height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__group-content--compact{\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'compact');\n        min-height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__row-indentation {\n        position: relative;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'comfortable');\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'comfortable');\n        border-#{$right}: 1px solid var-get($theme, 'header-border-color');\n        background: inherit;\n        z-index: 1;\n\n        &::after {\n            content: '';\n            position: absolute;\n            width: 100%;\n            height: rem(1px);\n            bottom: -1px;\n            #{$left}: 0;\n            background: transparent;\n        }\n\n        %igx-button--icon {\n            width: rem(28px);\n            height: rem(28px);\n            color: var-get($theme, 'expand-all-icon-color');\n        }\n\n        &:focus,\n        &:hover {\n            %igx-button--icon {\n                color: var-get($theme, 'expand-all-icon-hover-color');\n            }\n        }\n    }\n\n    %igx-grid__row-indentation--cosy {\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'cosy');\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'cosy')\n    }\n\n    %igx-grid__row-indentation--compact {\n        padding-#{$left}: map.get($grid-grouping-indicator-padding, 'compact');\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'compact')\n    }\n\n    %igx-grid-grouparea {\n        grid-row: 2;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-wrap: wrap;\n        border-bottom: $grid-header-border;\n        background: var-get($theme, 'grouparea-background');\n        color: var-get($theme, 'grouparea-color');\n        min-height: map.get($grouparea-min-height, 'comfortable');\n        padding: map.get($grouparea-padding, 'comfortable');\n        z-index: 2;\n        height: 100%;\n        overflow: hidden;\n\n        &:focus {\n            outline-style: none;\n        }\n\n        %igx-chip {\n            margin-top: rem(8px);\n            margin-bottom: rem(8px);\n        }\n    }\n\n    %igx-grid-grouparea__connector {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: 0 rem(4px);\n\n        igx-icon {\n            width: 16px;\n            height: 16px;\n            font-size: 16px;\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid-grouparea--cosy {\n        min-height: map.get($grouparea-min-height, 'cosy');\n        padding: map.get($grouparea-padding, 'cosy');\n\n        %igx-chip {\n            margin-top: rem(8px);\n            margin-bottom: rem(8px);\n        }\n    }\n\n    %igx-grid-grouparea--compact {\n        min-height: map.get($grouparea-min-height, 'compact');\n        padding: map.get($grouparea-padding, 'compact');\n\n        %igx-chip {\n            margin-top: rem(4px);\n            margin-bottom: rem(4px);\n        }\n    }\n\n    %igx-drop-area {\n        min-width: rem(80px);\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        height: map.get($drop-area-height, 'comfortable');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'comfortable');\n        flex: 1 0 0%;\n        background: var-get($theme, 'drop-area-background');\n\n        %igx-drop-area__icon {\n            color: var-get($theme, 'drop-area-icon-color');\n            width: rem(16px);\n            height: rem(16px);\n            font-size: rem(16px);\n            margin-#{$right}: rem(8px);\n        }\n    }\n\n    %igx-drop-area--hover {\n        background: var-get($theme, 'drop-area-on-drop-background');\n    }\n\n    %igx-drop-area--cosy {\n        height: map.get($drop-area-height, 'cosy');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'cosy');\n    }\n\n    %igx-drop-area--compact {\n        height: map.get($drop-area-height, 'compact');\n        border-radius: var-get($theme, 'drop-area-border-radius');\n        padding: map.get($grid-cell-padding, 'compact');\n    }\n\n    %igx-drop-area__text {\n        @include ellipsis();\n        color: var-get($theme, 'drop-area-text-color');\n        font-size: rem(13px);\n    }\n\n    %igx-grid__grouping-indicator {\n        position: relative;\n        display: flex;\n\n        user-select: none;\n        justify-content: center;\n        align-items: center;\n        z-index: 1;\n        cursor: pointer;\n        padding-#{$right}: $grouping-padding-right;\n        margin-#{$left}: #{map.get($grid-grouping-indicator-padding, 'comfortable')};\n        min-height: map.get($grid-header-height, 'comfortable');\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n            width: $indicator-icon-width;\n        }\n\n        &:hover,\n        &:focus {\n            outline-style: none;\n\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__grouping-indicator--cosy {\n        min-height: map.get($grid-header-height, 'cosy');\n        margin-#{$left}: #{map.get($grid-grouping-indicator-padding, 'cosy')};\n    }\n\n    %igx-grid__grouping-indicator--compact {\n        min-height: map.get($grid-header-height, 'compact');\n        margin-#{$left}: #{map.get($grid-grouping-indicator-padding, 'compact')};\n    }\n\n    %igx-grid__header-indentation {\n        position: relative;\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'comfortable');\n        border-#{$right}: 1px solid var-get($theme, 'header-border-color');\n        background: var-get($theme, 'header-background');\n        z-index: 4;\n    }\n\n    %igx-grid__header-indentation--cosy {\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'cosy');\n    }\n\n    %igx-grid__header-indentation--compact {\n        padding-#{$right}: map.get($grid-grouping-indicator-padding, 'compact');\n    }\n\n    %igx-grid__group-expand-btn {\n        position: absolute;\n        cursor: pointer;\n        user-select: none;\n        top: calc(50% - 12px);\n        #{$left}: map.get($grid-grouping-indicator-padding, 'comfortable');\n\n        &:hover {\n            color: var-get($theme, 'expand-icon-hover-color');\n        }\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'comfortable') - rem(24px), 2);\n        }\n    }\n\n    %igx-grid__group-expand-btn--cosy {\n        #{$left}: map.get($grid-grouping-indicator-padding, 'cosy');\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'cosy') - rem(24px), 2);\n        }\n    }\n\n    %igx-grid__group-expand-btn--compact {\n        #{$left}: map.get($grid-grouping-indicator-padding, 'compact');\n\n        &%igx-grid__group-expand-btn--push {\n            top: math.div(map.get($grid-header-height, 'compact') - rem(24px), 2);\n        }\n    }\n\n    @for $i from 1 through 10 {\n        %igx-grid__row-indentation--level-#{$i} {\n            padding-#{$left}: calc(#{$i*map.get($grid-grouping-indicator-padding, 'comfortable')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'comfortable')};\n            }\n        }\n\n        %igx-grid__row-indentation-cosy--level-#{$i} {\n            padding-#{$left}: calc(#{$i*map.get($grid-grouping-indicator-padding, 'cosy')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-cosy--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'cosy')};\n            }\n        }\n\n        %igx-grid__row-indentation-compact--level-#{$i} {\n            padding-#{$left}: calc(#{$i*map.get($grid-grouping-indicator-padding, 'compact')} + #{$indicator-icon-width});\n        }\n\n        %igx-grid__group-row-compact--padding-level-#{$i} {\n            %igx-grid__grouping-indicator {\n                padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'compact')};\n            }\n        }\n    }\n\n    @for $i from 1 through 25 {\n        %igx-grid__tree-cell--padding-level-#{$i} {\n            padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'comfortable')};\n        }\n\n        %igx-grid__tree-cell-cosy--padding-level-#{$i} {\n            padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'cosy')};\n        }\n\n        %igx-grid__tree-cell-compact--padding-level-#{$i} {\n            padding-#{$left}: #{$i*map.get($grid-grouping-indicator-padding, 'compact')};\n        }\n    }\n\n    %igx-grid__outlet {\n        z-index: 10002;\n        position: fixed;\n    }\n\n    %igx-grid__loading-outlet {\n        z-index: 10003;\n\n        > %overlay-wrapper--modal {\n            background: none;\n        }\n\n        %circular-display {\n            width: rem(50);\n            height: rem(50);\n        }\n    }\n\n    %igx-grid__row-editing-outlet {\n        z-index: 10000;\n        position: absolute;\n\n        %overlay-wrapper {\n            /* Change wrapper position from 'fixed' to 'absolute' so that it is hidden when scrolled below the parent grid body content. */\n            position: absolute;\n        }\n    }\n\n    %igx-grid__addrow-snackbar {\n        position: absolute;\n        z-index: 5;\n        bottom: rem(24px);\n        left: 50%;\n        transform: translateX(-50%);\n    }\n\n    %igx-grid__filtering-cell {\n        display: flex;\n        align-items: center;\n        border-#{$right}: $grid-header-border;\n        border-top: $grid-header-border;\n        height: map.get($grid-header-height, 'comfortable');\n        padding: map.get($grid-header-padding, 'comfortable');\n        overflow: hidden;\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n\n            .igx-filtering-chips__connector {\n                font-size: rem(12px);\n                text-transform: uppercase;\n                font-weight: 600;\n                margin: 0 rem(8px);\n            }\n        }\n    }\n\n    %igx-grid__filtering-cell--selected {\n        color: var-get($theme, 'header-selected-text-color');\n        background: var-get($theme, 'header-selected-background');\n    }\n\n    %igx-grid__filtering-cell-indicator {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-#{$right}: 8px;\n        margin-#{$left}: 8px;\n        cursor: pointer;\n        visibility: visible;\n\n        igx-icon {\n            width: 18px;\n            height: 18px;\n            font-size: 18px;\n        }\n\n        %igx-badge-display {\n            /* start of IE vertical alignment fix */\n            top: 50%;\n            transform: translateY(-50%);\n            /* end of IE vertical alignment fix */\n            position: absolute;\n            width: 14px;\n            height: 14px;\n            min-width: 14px;\n            font-size: 12px;\n            text-align: center;\n            #{$right}: 0;\n        }\n    }\n\n    %igx-grid__filtering-cell-indicator--hidden {\n        visibility: hidden;\n    }\n\n    %igx-grid__filtering-cell--cosy {\n        height: map.get($grid-header-height, 'cosy');\n        padding: map.get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-cell--compact {\n        height: map.get($grid-header-height, 'compact');\n        padding: map.get($grid-header-padding, 'comfortable');\n    }\n\n    %igx-grid__filtering-row {\n        position: absolute;\n        display: flex;\n        width: 100%;\n        height: map.get($grid-header-height, 'comfortable');\n        padding: map.get($grid-cell-padding, 'cosy');\n        align-items: center;\n        justify-content: space-between;\n        background: var-get($theme, 'filtering-row-background');\n        color: var-get($theme, 'filtering-row-text-color');\n        #{$left}: 0;\n        bottom: 0;\n        z-index: 3;\n\n        &::after {\n            display: block;\n            position: absolute;\n            content: '';\n            background: inherit;\n            #{$left}: 0;\n            #{$right}: 0;\n            top: 0;\n            bottom: 0;\n            box-shadow: 0 1px 0 var-get($theme, 'filtering-row-background'),\n                0 4px 10px rgba(0, 0, 0, .12);\n            z-index: -1;\n        }\n\n        igx-input-group {\n            --theme: fluent;\n            width: 100%;\n            max-width: rem(200px);\n            min-width: rem(140px);\n        }\n\n        igx-prefix:focus {\n            color: igx-color(map.get($theme, 'palette'), 'secondary');\n        }\n\n        igx-suffix  {\n            igx-icon {\n                outline-style: none;\n\n                &:focus {\n                    color: igx-color($palette, 'secondary');\n                }\n\n                + igx-icon {\n                    margin-#{$left}: rem(4px);\n                }\n            }\n        }\n    }\n\n    %igx-grid__filtering-dropdown-items {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-grid__filtering-dropdown-text {\n        margin-left: rem(16px);\n    }\n\n    %igx-grid__filtering-row--cosy {\n        height: map.get($grid-header-height, 'cosy');\n    }\n\n    %igx-grid__filtering-row--compact {\n        height: map.get($grid-header-height, 'compact');\n    }\n\n    %igx-grid__filtering-row-main {\n        display: flex;\n        flex: 1;\n        overflow: hidden;\n        max-width: calc(100% - 176px);\n        min-width: rem(56px);\n\n        igx-chips-area {\n            transition: transform .25s $ease-out-back;\n            flex-wrap: nowrap;\n            margin: 0 rem(8px);\n        }\n\n        igx-chip {\n            margin: 0 rem(4px);\n        }\n\n        [igxButton] {\n            igx-icon {\n                position: absolute;\n                #{$left}: rem(12px);\n                /* IE fix for vertical alignment*/\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            span {\n                margin-#{$left}: rem(16px);\n            }\n        }\n    }\n\n    %filtering-scroll-mask {\n        display: block;\n        position: absolute;\n        content: '';\n        top: -2px;\n        bottom: -2px;\n        width: 10px;\n    }\n\n    %igx-grid__filtering-scroll-start {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::after {\n            @extend %filtering-scroll-mask;\n            #{$left}: calc(100% + 6px);\n            background: linear-gradient(to #{$right}, var-get($theme, 'filtering-row-background'), transparent);\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__filtering-scroll-end {\n        width: 24px;\n        height: 24px;\n        position: relative;\n        overflow: visible;\n        margin: 0 8px;\n        z-index: 1;\n\n        &::before {\n            @extend %filtering-scroll-mask;\n            #{$right}: calc(100% + 6px);\n            background: linear-gradient(to left, var-get($theme, 'filtering-row-background'), transparent);\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n    }\n\n    %igx-grid__tr--highlighted {\n        position: relative;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            #{$left}: 0;\n            width: 4px;\n            height: 100%;\n            background: var-get($theme, 'row-highlight');\n            z-index: 3;\n        }\n\n        %igx-grid__tr--edited {\n            &::before {\n                #{$left}: 4px;\n            }\n        }\n\n        &::before {\n            #{$left}: 4px;\n        }\n    }\n\n    %igx-grid__tr-container {\n        border-bottom: 1px solid var-get($theme, 'row-border-color');\n    }\n\n    %igx-grid__tr-container--active {\n        @extend %grid-cell--active !optional;\n    }\n\n    %igx-grid__hierarchical-expander {\n        user-select: none;\n        background: inherit;\n        padding-#{$left}: map.get($hierarchical-grid-indent, 'comfortable');\n        padding-#{$right}: map.get($hierarchical-grid-indent, 'comfortable');\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        z-index: 3;\n        color: var-get($theme, 'expand-icon-color');\n\n        &:focus {\n            outline: none;\n\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        &:hover {\n            igx-icon {\n                color: var-get($theme, 'expand-icon-hover-color');\n            }\n        }\n\n        igx-icon {\n            color: var-get($theme, 'expand-icon-color');\n            max-width: $hierarchical-action-icon;\n            min-width: $hierarchical-action-icon;\n        }\n\n        @include if-rtl() {\n            transform: scaleX(-1);\n        }\n\n        &--empty {\n            cursor: default;\n            pointer-events: none;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--cosy {\n        padding-#{$left}: map.get($hierarchical-grid-indent, 'cosy');\n        padding-#{$right}: map.get($hierarchical-grid-indent, 'cosy');\n    }\n\n    %igx-grid__hierarchical-expander--compact {\n        padding-#{$left}: map.get($hierarchical-grid-indent, 'compact');\n        padding-#{$right}: map.get($hierarchical-grid-indent, 'compact');\n    }\n\n    %igx-grid__hierarchical-expander--header {\n        background: inherit;\n        border-#{$right}: 1px solid var-get($theme, 'header-border-color');\n        z-index: 3;\n\n        igx-icon {\n            display: flex;\n            align-items: center;\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push {\n        align-items: flex-start;\n\n        igx-icon {\n            min-height: map.get($grid-header-height, 'comfortable');\n            max-height: map.get($grid-header-height, 'comfortable');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--cosy {\n        igx-icon {\n            min-height: map.get($grid-header-height, 'cosy');\n        }\n    }\n\n    %igx-grid__hierarchical-expander--push--compact {\n        igx-icon {\n            min-height: map.get($grid-header-height, 'compact');\n        }\n    }\n\n    %igx-grid__header-indentation--no-border {\n        border-#{$right}: 1px solid transparent;\n    }\n\n    %igx-grid__hierarchical-indent {\n        margin-#{$left}: calc(2 * #{map.get($hierarchical-grid-indent, 'comfortable')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'comfortable');\n        margin-#{$right}: map.get($hierarchical-grid-indent, 'comfortable');\n        margin-bottom: map.get($hierarchical-grid-indent, 'comfortable');\n\n        &--scroll {\n            margin-#{$right}: calc(#{map.get($hierarchical-grid-indent, 'comfortable')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--cosy {\n        margin-#{$left}: calc(2 * #{map.get($hierarchical-grid-indent, 'cosy')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'cosy');\n        margin-#{$right}: map.get($hierarchical-grid-indent, 'cosy');\n        margin-bottom: map.get($hierarchical-grid-indent, 'cosy');\n\n        &--scroll {\n            margin-#{$right}: calc(#{map.get($hierarchical-grid-indent, 'cosy')} + 18px);\n        }\n    }\n\n    %igx-grid__hierarchical-indent--compact {\n        margin-#{$left}: calc(2 * #{map.get($hierarchical-grid-indent, 'compact')} + #{$hierarchical-action-icon});\n        margin-top: map.get($hierarchical-grid-indent, 'compact');\n        margin-#{$right}: map.get($hierarchical-grid-indent, 'compact');\n        margin-bottom: map.get($hierarchical-grid-indent, 'compact');\n\n        &--scroll {\n            margin-#{$right}: calc(#{map.get($hierarchical-grid-indent, 'compact')} + 18px);\n        }\n    }\n\n    @include excel-filtering($theme, $palette);\n    @include advanced-filtering($theme, $palette);\n\n    %igx-grid__filtering-row-editing-buttons--small,\n    %igx-grid__filtering-row-editing-buttons {\n        display: flex;\n        align-items: center;\n\n        button {\n            transition: none;\n        }\n    }\n\n    %igx-grid__filtering-row-editing-buttons--small {\n        button {\n            &:not([disabled]) {\n                igx-icon {\n                    color: var-get($theme, 'sorted-header-icon-color');\n                }\n            }\n        }\n    }\n\n    %igx-grid__tr-action {\n        &:last-of-type {\n            border-#{$right}: var-get($theme, 'header-border-width') var-get($theme, 'header-border-style') var-get($theme, 'header-border-color');\n        }\n    }\n}\n\n","@use '../../base' as *;\n@use '../../typography/base' as *;\n@use '../../themes/schemas/dark' as *;\n@use '../button-group/button-group-component' as *;\n@use '../button-group/button-group-theme' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The grid theme used to style the component.\n/// @param {Map} $palette - The palette map used as base for the component.\n/// @requires igx-color\n/// @requires rem\n/// @requires var-get\n@mixin excel-filtering($theme, $palette) {\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n    $variant: map.get($theme, 'variant');\n\n    %grid-excel-filter {\n        display: block;\n        width: rem(320px);\n        height: 100%;\n        flex-grow: 1;\n        box-shadow: igx-elevation($elevation: 12);\n        overflow: auto;\n        min-width: rem(320px);\n    }\n\n    %grid-excel-filter--inline {\n        box-shadow: none;\n        width: 100%;\n    }\n\n    %igx-excel-filter__loading {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    %grid-excel-icon {\n        display: flex;\n        cursor: pointer;\n\n        igx-icon {\n            width: rem(15px);\n            height: rem(15px);\n            font-size: rem(15px);\n        }\n    }\n\n    %grid-excel-icon--filtered {\n        igx-icon {\n            color: if(\n                $variant == 'indigo-design',\n                igx-color($palette, 'warn', 500),\n                igx-color($palette, 'secondary')\n            );\n        }\n    }\n\n    %grid-excel-menu {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n        background: var-get($theme, 'filtering-row-background');\n        // TODO The border-radius should not be hardcoded.\n        border-radius: rem(4px);\n\n        @include igx-button-group(igx-button-group-theme(\n            $shadow: none,\n            $schema: $dark-schema,\n            $item-background: var-get($theme, 'filtering-row-background'),\n            $item-hover-background: igx-color($palette, 'grays', 100),\n            $item-selected-background: igx-color($palette, 'grays', 100),\n            $item-text-color: igx-color($palette, 'grays', 700),\n            $item-hover-text-color: igx-color($palette, 'grays', 800),\n            $item-selected-text-color: if(\n                $variant == 'indigo-design',\n                igx-contrast-color($palette, 'surface'),\n                igx-color($palette, 'secondary', 500)\n            ),\n            $item-border-color: transparent,\n            $item-selected-border-color: transparent\n        ));\n    }\n\n    %grid-excel-menu__header {\n        display: flex;\n        align-items: center;\n        padding: rem(16px);\n        color: igx-color($palette, 'grays', 700);\n    }\n\n    %grid-excel-menu__header-actions {\n        display: flex;\n        margin-#{$left}: auto;\n\n        [igxButton] + [igxButton] {\n            margin-#{$left}: rem(4px);\n        }\n\n        %grid-excel-actions__action {\n            padding: 0 !important;\n            margin: 0 !important;\n        }\n\n        %grid-excel-actions__action,\n        %grid-excel-actions--selected {\n            justify-content: center;\n        }\n    }\n\n    %grid-excel-menu__footer {\n        display: flex;\n        justify-content: space-between;\n        padding: rem(8px) rem(16px);\n\n        %grid-excel-filter__apply,\n        %grid-excel-filter__cancel {\n            flex-grow: 1;\n\n            [igxButton] {\n                width: 100%;\n            }\n        }\n    }\n\n    %grid-excel-filter__clear {\n        flex-grow: 1;\n    }\n\n    %grid-excel-filter__cancel + %grid-excel-filter__apply {\n        margin-#{$left}: rem(16px);\n    }\n\n    %grid-excel-sort {\n        display: block;\n        padding: rem(8px) rem(16px);\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-bottom: rem(4px);\n        }\n\n        igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n        }\n    }\n\n    %grid-excel-action--compact {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-#{$right}: auto;\n        }\n    }\n\n    %grid-excel-actions {\n        padding: rem(8px) rem(16px);\n    }\n\n    %grid-excel-actions--selected {\n        igx-icon {\n            color: if(\n                $variant == 'indigo-design',\n                igx-color($palette, 'primary', 200),\n                igx-color($palette, 'secondary')\n            );\n        }\n    }\n\n    %grid-excel-move {\n        display: block;\n        padding: rem(8px) rem(16px);\n\n        header {\n            color: igx-color($palette, 'grays', 700);\n            margin-bottom: rem(4px);\n        }\n    }\n\n    %grid-excel-move__buttons {\n        display: flex;\n        justify-content: space-between;\n\n        @include if-rtl() {\n            flex-direction: row-reverse;\n\n            [igxButton] {\n                flex-direction: row-reverse;\n\n                span,\n                igx-icon {\n                    margin: initial;\n                }\n\n                @include icon-w-margin(rem(8px), $right);\n            }\n        }\n    }\n\n    %grid-excel-actions__action {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: rem(8px) rem(16px);\n        cursor: pointer;\n        color: igx-color($palette, 'grays', 700);\n        outline-style: none;\n\n        &:hover,\n        &:focus {\n            background: igx-color($palette, 'grays', 100);\n        }\n\n        @include if-rtl() {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %grid-excel-actions__action--disabled {\n        color: igx-color($palette, 'grays', 400);\n        pointer-events: none;\n    }\n\n    %grid-excel-main {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        overflow: hidden;\n        padding: 0 rem(16px);\n\n        igx-list {\n            flex-grow: 1;\n            overflow: hidden;\n            margin: rem(8px) -#{rem(16px)} 0;\n            border: 0;\n            border-top: 1px dashed igx-color($palette, 'grays', 300);\n            border-bottom: 1px dashed igx-color($palette, 'grays', 300);\n        }\n    }\n\n    %grid-excel-menu--cosy {\n        %grid-excel-menu__header {\n            justify-content: space-between;\n            padding: rem(8px);\n        }\n\n        %grid-excel-sort {\n            padding: rem(8px);\n        }\n\n        %grid-excel-move {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions {\n            padding: rem(8px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(8px);\n        }\n\n        %grid-excel-main {\n            padding: 0 rem(8px);\n        }\n\n        igx-list {\n            margin: rem(8px) -#{rem(8px)} 0;\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px);\n        }\n    }\n\n    %grid-excel-menu--compact {\n        %grid-excel-menu__header {\n            justify-content: space-between;\n            padding: rem(4px);\n        }\n\n        %grid-excel-sort {\n            padding: rem(4px);\n\n            @extend %grid-excel-action--compact;\n\n            igx-buttongroup {\n                width: rem(208px);\n            }\n        }\n\n        %grid-excel-move {\n            @extend %grid-excel-action--compact;\n            margin-bottom: 0;\n            padding: rem(4px);\n        }\n\n        %grid-excel-actions {\n            padding: rem(4px);\n        }\n\n        %grid-excel-actions__action {\n            padding: rem(4px);\n        }\n\n        %grid-excel-main {\n            padding: 0 rem(4px);\n        }\n\n        igx-list {\n            margin: rem(8px) -#{rem(4px)} 0;\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px) rem(4px);\n        }\n    }\n\n    %grid-excel-menu__secondary {\n        width: 520px;\n        min-width: 520px;\n        background: var-get($theme, 'filtering-row-background');\n        box-shadow: igx-elevation($elevation: 12);\n        border-radius: rem(4px);\n    }\n\n    %grid-excel-menu__secondary--cosy {\n        %grid-excel-menu__header {\n            padding: rem(8px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(8px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(8px) rem(8px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px);\n        }\n    }\n\n    %grid-excel-menu__secondary--compact {\n        %grid-excel-menu__header {\n            padding: rem(4px);\n        }\n\n        %grid-excel-menu__condition {\n            padding: 0 rem(4px);\n        }\n\n        %grid-excel-menu__add-filter {\n            margin: 0 rem(4px) rem(4px);\n        }\n\n        %grid-excel-menu__footer {\n            padding: rem(8px) rem(4px);\n        }\n    }\n\n    %grid-excel-menu__secondary-header {\n        border-bottom: 1px solid igx-color($palette, 'grays', 300);\n    }\n\n    %grid-excel-menu__secondary-main {\n        height: 232px;\n        overflow: auto;\n    }\n\n    %grid-excel-menu__secondary-footer {\n        border-top: 1px dashed igx-color($palette, 'grays', 300);\n\n        %grid-excel-filter__apply,\n        %grid-excel-filter__cancel {\n            flex-grow: 0;\n        }\n    }\n\n    %grid-excel-menu__condition {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        padding: 0 rem(16px);\n\n        igx-select {\n            flex-grow: 1;\n            flex-basis: 40%;\n            margin: rem(16px) 0;\n\n            ~ igx-input-group,\n            ~ igx-date-picker {\n                margin-#{$left}: rem(16px);\n            }\n        }\n\n        igx-buttongroup {\n            min-width: 30%;\n        }\n\n        [igxButton='icon'] {\n            margin-#{$left}: rem(16px);\n        }\n    }\n\n    %grid-excel-menu__add-filter {\n        margin: 0 rem(16px) rem(16px);\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n        }\n    }\n\n    igx-excel-style-filter-operations,\n    [igxExcelStyleFilterOperations] {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        overflow: hidden;\n    }\n}\n\n/// Adds typography styles for the excel-style-filtering component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @access private\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(haeder-comfortable: 'overline', header-compact: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin excel-filtering-typography($type-scale, $categories: (\n    header-comfortable: 'overline',\n    header-compact: 'subtitle-1')\n) {\n    $header-comfortable: map.get($categories, 'header-comfortable');\n    $header-compact: map.get($categories, 'header-compact');\n\n\n    %grid-excel-menu {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'h6')\n        }\n    }\n\n    %grid-excel-menu__secondary {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'h6');\n        }\n    }\n\n    %grid-excel-sort,\n    %grid-excel-move {\n        header {\n            @include igx-type-style($type-scale, 'overline');\n        }\n    }\n\n    %grid-excel-menu--cosy {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'h6')\n        }\n    }\n\n    %grid-excel-menu--compact {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'subtitle-1')\n        }\n\n        %grid-excel-sort,\n        %grid-excel-move {\n            header {\n                @include igx-type-style($type-scale, 'body-2');\n                text-transform: capitalize;\n            }\n        }\n\n        %grid-excel-actions__action {\n            span {\n                @include igx-type-style($type-scale, 'body-2');\n            }\n        }\n\n        %cbx-label {\n            @include igx-type-style($type-scale, 'body-2');\n        }\n    }\n\n    %grid-excel-menu__secondary--cosy {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'h6');\n        }\n    }\n\n    %grid-excel-menu__secondary--compact {\n        %grid-excel-menu__header > h4 {\n            @include igx-type-style($type-scale, 'subtitle-1');\n        }\n    }\n}\n","@use '../../base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access private\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $theme - The grid theme used to style the component.\n/// @param {Map} $palette - The palette map used as base for the component.\n/// @requires igx-color\n/// @requires rem\n/// @requires var-get\n@mixin advanced-filtering($theme, $palette) {\n    $variant: map.get($theme, variant);\n    $not-bootstrap-theme: $variant != 'bootstrap';\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $vertical-space-comfortable: rem(16px);\n    $vertical-space-cosy: rem(12px);\n    $vertical-space-compact: rem(8px);\n    $horizontal-space-comfortable: rem(16px);\n    $horizontal-space-cosy: rem(12px);\n    $horizontal-space-compact: rem(8px);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %advanced-filter {\n        width: 660px;\n        min-width: 660px;\n        max-width: 720px;\n        background-color: var-get($theme, 'filtering-row-background');\n        box-shadow: igx-elevation($elevation: 12);\n        border-radius: rem(4px);\n    }\n\n    %advanced-filter__header {\n        display: flex;\n        align-items: center;\n        padding: $vertical-space-comfortable;\n        color: igx-color($palette, 'grays', 700);\n        background-color: igx-color($palette, 'grays', 200);\n        user-select: none;\n        cursor: grab;\n    }\n\n    %advanced-filter__main {\n        display: block;\n        padding: rem(16px);\n        overflow: auto;\n        min-height: 214px;\n        max-height: 468px;\n\n        [igxButton] + [igxButton] {\n            margin-#{$left}: rem(8px);\n        }\n    }\n\n    %advanced-filter__outlet {\n        igx-select-item > igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n            margin-#{$right}: rem(8px);\n        }\n    }\n\n    %filter-tree {\n        display: flex;\n\n        + %filter-tree,\n        + %filter-tree__expression-item,\n        + %filter-tree__inputs {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__line {\n        width: rem(8px);\n        min-width: rem(8px);\n        background-color: white;\n        margin-#{$right}: $horizontal-space-comfortable;\n        outline-style: none;\n        border-radius: rem(4px);\n        cursor: pointer;\n    }\n\n    %filter-tree__line--and {\n\n        background: var-get($theme, 'filtering-background-and');\n\n        &-selected {\n            background: var-get($theme, 'filtering-background-and--focus');\n        }\n\n        &:focus {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'filtering-background-and--focus');\n        }\n    }\n\n    %filter-tree__line--or {\n        background: var-get($theme, 'filtering-background-or');\n\n        &-selected {\n            background-color: var-get($theme, 'filtering-background-or--focus');\n        }\n\n        &:focus {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'filtering-background-or--focus');\n        }\n    }\n\n    %filter-tree__expression {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n    }\n\n    %filter-tree__expression-item {\n        display: flex;\n        align-items: center;\n\n        + %filter-tree,\n        + %filter-tree__inputs,\n        + %filter-tree__expression-item {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__expression-column {\n        padding: 0 rem(8px);\n    }\n\n    %filter-tree__expression-actions {\n        display: inline-flex;\n        margin: 0 rem(8px);\n\n        igx-icon {\n            cursor: pointer;\n            color: igx-color($palette, 'grays', 500);\n            outline-style: none;\n\n            &:hover,\n            &:focus {\n                color: igx-color($palette, 'grays', 800);\n            }\n        }\n\n        igx-icon + igx-icon {\n            margin-#{$left}: rem(8px);\n        }\n    }\n\n    %filter-tree__expression-condition {\n        opacity: .7;\n    }\n\n    %filter-tree__buttons {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: $vertical-space-comfortable;\n\n        + %filter-tree,\n        + %filter-tree__expression-item,\n        + %filter-tree__inputs {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__inputs {\n        display: flex;\n        justify-content: space-between;\n\n        igx-select + igx-select,\n        igx-select + igx-input-group,\n        igx-select + igx-date-picker,\n        igx-input-group + igx-select {\n            margin-#{$left}: rem(8px);\n        }\n\n        + %filter-tree,\n        + %filter-tree__expression-item {\n            margin-top: $vertical-space-comfortable;\n        }\n    }\n\n    %filter-tree__inputs-actions {\n        display: flex;\n        margin: 0 rem(8px);\n        align-items: center;\n\n        [igxButton] {\n            transition: none;\n        }\n\n        [igxButton] + [igxButton] {\n            margin-#{$left}: rem(8px);\n        }\n    }\n\n    %filter-legend {\n        display: flex;\n        margin-#{$left}: auto;\n        pointer-events: none;\n    }\n\n    %filter-legend__item {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        font-size: rem(12px);\n\n        &::before {\n            content: '';\n            width: rem(24px);\n            height: rem(24px);\n            background: white;\n            border-radius: rem(4px);\n            margin-#{$right}: rem(8px);\n        }\n\n        + %filter-legend__item {\n            margin-#{$left}: rem(24px);\n        }\n    }\n\n    %filter-legend__item--and::before {\n        background: var-get($theme, 'filtering-background-and');\n    }\n\n    %filter-legend__item--or::before {\n        background: var-get($theme, 'filtering-background-or');\n    }\n\n    %filter-con-menu {\n        position: relative;\n        display: flex;\n        flex-flow: column;\n        width: 196px;\n        background-color: var-get($theme, 'filtering-row-background');\n        padding: rem(16px);\n        margin-#{$left}: rem(16px);\n        border-radius: rem(4px);\n        border: 1px solid igx-color($palette, 'grays', 200);\n\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-comfortable;\n        }\n\n        > [igxButton]%filter-con-menu__close-btn + [igxButton],\n        [igxButton]%filter-con-menu__close-btn + igx-buttongroup {\n            margin-top: 0;\n        }\n\n        [igxButton] > igx-icon + * {\n            margin-#{$left}: 8px;\n        }\n\n        igx-buttongroup > * {\n            box-shadow: none;\n        }\n    }\n\n    %filter-con-menu__delete-btn {\n        color: igx-color($palette, 'error');\n        @if $bootstrap-theme {\n            border-color: igx-color($palette, 'error');\n        }\n\n        &:hover,\n        &:focus {\n            @if $bootstrap-theme {\n                background: igx-color($palette, 'error');\n                border-color: igx-color($palette, 'error');\n                color: to-opaque(igx-color($palette, 'grays', 100));\n            } @else {\n                color: igx-color($palette, 'error');\n            }\n        }\n    }\n\n    %filter-con-menu__close-btn {\n        position: absolute;\n        top: rem(-18px);\n        #{$right}: rem(-18px);\n        background-color: var-get($theme, 'filtering-row-background');\n        border: 1px solid igx-color($palette, 'grays', 200);\n\n        &:hover,\n        &:focus {\n            @if $not-bootstrap-theme {\n                background-color: var-get($theme, 'filtering-row-background');\n            }\n        }\n    }\n\n    %filter-empty {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 144px;\n    }\n\n    %filter-empty__title {\n        color: igx-color($palette, 'grays', 500);\n    }\n\n    %advanced-filter--cosy {\n        %advanced-filter__main {\n            min-height: 164px;\n            max-height: 394px;\n        }\n\n        %filter-empty {\n            height: 107px;\n        }\n\n        %advanced-filter__main,\n        %advanced-filter__header {\n            padding: $vertical-space-cosy rem(16px);\n        }\n\n        %filter-tree__expression-actions igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n        }\n\n        %filter-tree__line {\n            margin-#{$right}: $horizontal-space-cosy;\n        }\n\n        %filter-tree {\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__expression-item {\n            + %filter-tree,\n            + %filter-tree__inputs,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__buttons {\n            margin-top: $vertical-space-cosy;\n\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n\n        %filter-tree__inputs {\n            + %filter-tree,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-cosy;\n            }\n        }\n    }\n\n    %advanced-filter--compact {\n        %advanced-filter__main {\n            min-height: 138px;\n            max-height: 305px;\n        }\n\n        %filter-empty {\n            height: 92px;\n        }\n\n        %advanced-filter__main,\n        %advanced-filter__header {\n            padding: $vertical-space-compact rem(16px);\n        }\n\n        %filter-tree__expression-actions igx-icon {\n            font-size: rem(18px);\n            width: rem(18px);\n            height: rem(18px);\n        }\n\n        %filter-tree__line {\n            margin-#{$right}: $horizontal-space-compact;\n        }\n\n        %filter-tree {\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__expression-item {\n            + %filter-tree,\n            + %filter-tree__inputs,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__buttons {\n            margin-top: $vertical-space-compact;\n\n            + %filter-tree,\n            + %filter-tree__expression-item,\n            + %filter-tree__inputs {\n                margin-top: $vertical-space-compact;\n            }\n        }\n\n        %filter-tree__inputs {\n            + %filter-tree,\n            + %filter-tree__expression-item {\n                margin-top: $vertical-space-compact;\n            }\n        }\n    }\n\n    %advanced-filter--inline {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        max-width: 100%;\n        height: inherit;\n        max-height: inherit;\n        min-width: 480px;\n        box-shadow: none;\n\n        %advanced-filter__main {\n            min-height: initial;\n            max-height: initial;\n            flex-grow: 1;\n        }\n    }\n\n    %filter-con-menu--cosy {\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-cosy;\n        }\n    }\n\n    %filter-con-menu--compact {\n        > [igxButton] + [igxButton],\n        igx-buttongroup + [igxButton],\n        [igxButton] + igx-buttongroup {\n            margin-top: $vertical-space-compact;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background-color [null] - The summaries background color is inherited form igx-grid__tfoot\n/// @param {Color} $focus-background-color [null] - The background color when a summary item is on focus.\n/// @param {Color} $label-color [null] - The summaries label color.\n/// @param {Color} $result-color [null] - The summaries value/result color.\n/// @param {Color} $border-color [null] - The summaries border color.\n/// @param {Color} $pinned-border-width [null] - The border width of the summary panel.\n/// @param {Color} $pinned-border-style [null] - The border style of the summary panel.\n/// @param {Color} $pinned-border-color [null] - The border color of the summary panel.\n/// @param {Color} $label-hover-color [null] - The summaries hover label color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Change the summaries background nad labels color\n///   $my-summary-theme: igx-grid-summary-theme(\n///     $background-color: black,\n///     $label-color: white\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-summary($my-summary-theme);\n@function igx-grid-summary-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $background-color: null,\n    $focus-background-color: null,\n    $label-color: null,\n    $result-color: null,\n    $border-color: null,\n    $pinned-border-width: null,\n    $pinned-border-style: null,\n    $pinned-border-color: null,\n    $label-hover-color: null\n) {\n    $name: 'igx-grid-summary';\n    $selector: '.igx-grid-summary';\n    $grid-summary-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-summary-schema: map.get($schema, $name);\n    } @else {\n        $grid-summary-schema: $schema;\n    }\n\n    $theme: apply-palette($grid-summary-schema, $palette);\n\n    @if not($result-color) and $background-color {\n        $result-color: text-contrast($background-color);\n    }\n\n    @if not($border-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $border-color: rgba(text-contrast($background-color), .26);\n        }\n    }\n\n    @if not($pinned-border-color) and $background-color {\n        @if type-of($background-color) == 'color' {\n            $pinned-border-color: rgba(text-contrast($background-color), .26);\n        }\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        background-color: $background-color,\n        focus-background-color: $focus-background-color,\n        label-color: $label-color,\n        result-color: $result-color,\n        border-color: $border-color,\n        pinned-border-width: $pinned-border-width,\n        pinned-border-style: $pinned-border-style,\n        pinned-border-color: $pinned-border-color,\n        label-hover-color: $label-hover-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires var-get\n@mixin igx-grid-summary($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $cell-pin: (\n        style: var-get($theme, 'pinned-border-width') var-get($theme, 'pinned-border-style'),\n        color: var-get($theme, 'pinned-border-color')\n    );\n\n    $item-padding: (\n        comfortable: rem(6px) 0,\n        cosy: rem(2px) 0,\n        compact: 0\n    );\n\n    $summary-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    %igx-grid-summary {\n        position: relative;\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 0%;\n        padding: map.get($summary-padding, 'comfortable');\n        background: var-get($theme, 'background-color', inherit);\n        overflow: hidden;\n        outline-style: none;\n\n        &::after {\n            position: absolute;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n\n        &:focus::after {\n            background: var-get($theme, 'focus-background-color');\n        }\n    }\n\n    %igx-grid-summary--cosy {\n        padding: map.get($summary-padding, 'cosy');\n    }\n\n    %igx-grid-summary--compact {\n        padding: map.get($summary-padding, 'compact');\n    }\n\n    %igx-grid-summary--pinned {\n        position: relative;\n        z-index: 1;\n    }\n\n    %grid-summary--fixed-width {\n        flex-grow: 0;\n    }\n\n    %igx-grid-summary--pinned-last {\n        border-#{$right}: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\n        @media print {\n            border-right: map.get($cell-pin, 'style') #999;\n        }\n    }\n\n    %igx-grid-summary--pinned-first {\n        border-#{$left}: map.get($cell-pin, 'style') map.get($cell-pin, 'color');\n        @media print {\n            border-left: map.get($cell-pin, 'style') #999;\n        }\n    }\n\n    %igx-grid-summary__item {\n        display: flex;\n        align-items: center;\n        padding: map.get($item-padding, 'comfortable');\n        font-size: rem(12px);\n        position: relative;\n    }\n\n    %igx-grid-summary__item--cosy {\n        padding: map.get($item-padding, 'cosy');\n    }\n\n    %igx-grid-summary__item--compact {\n        padding: map.get($item-padding, 'compact');\n    }\n\n    %igx-grid-summary__label {\n        color: var-get($theme, 'label-color');\n        min-width: rem(30px);\n        margin-#{$right}: rem(3px);\n\n        &:hover {\n            color: var-get($theme, 'label-hover-color');\n        }\n    }\n\n    %igx-grid-summary__result {\n        color: var-get($theme, 'result-color');\n        font-weight: 600;\n        flex: 1 1 auto;\n        text-align: #{$right};\n    }\n\n    %igx-grid-summary__label,\n    %igx-grid-summary__result {\n        @include ellipsis();\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n/// @param {Color} $background-color [null] - The toolbar background color.\n/// @param {Color} $title-text-color [null] - The toolbar title text color.\n/// @param {Color} $dropdown-background [null] - The toolbar drop-down background color.\n/// @param {Color} $item-text-color [null] - The toolbar drop-down item text color.\n/// @param {Color} $item-hover-background [null] - The toolbar drop-down item hover background color.\n/// @param {Color} $item-hover-text-color [null] - The toolbar drop-down item hover text color.\n/// @param {Color} $item-focus-background [null] - The toolbar drop-down item focus background color.\n/// @param {Color} $item-focus-text-color [null] - The toolbar drop-down item focus text color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n///\n/// @example scss Change the toolbar background color\n///   $my-toolbar-theme: igx-grid-toolbar-theme(\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-grid-filtering component mixin\n///   @include igx-grid-toolbar($my-toolbar-theme);\n\n@function igx-grid-toolbar-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background-color: null,\n    $title-text-color: null,\n\n    $dropdown-background: null,\n    $item-text-color: null,\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-focus-background: null,\n    $item-focus-text-color: null\n) {\n    $name: 'igx-grid-toolbar';\n    $selector: 'igx-grid-toolbar, .igx-grid-toolbar__dd-list';\n    $grid-toolbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-toolbar-schema: map.get($schema, $name);\n    } @else {\n        $grid-toolbar-schema: $schema;\n    }\n\n    $theme: apply-palette($grid-toolbar-schema, $palette);\n\n    @if not($title-text-color) and $background-color {\n        $title-text-color: text-contrast($background-color);\n    }\n\n    @if not($item-text-color) and $dropdown-background {\n        $item-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $dropdown-background {\n        $item-hover-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-focus-text-color) and $dropdown-background {\n        $item-focus-text-color: text-contrast($dropdown-background);\n    }\n\n    @if not($item-hover-text-color) and $item-hover-background {\n        $item-hover-text-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-focus-text-color) and $item-focus-background {\n        $item-focus-text-color: text-contrast($item-focus-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        elevations: $elevations,\n        background-color: $background-color,\n        title-text-color: $title-text-color,\n        item-text-color: $item-text-color,\n        dropdown-background: $dropdown-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color: $item-hover-text-color,\n        item-focus-background: $item-focus-background,\n        item-focus-text-color: $item-focus-text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires igx-color\n/// @requires {mixin} ellipsis\n/// @requires rem\n/// @requires em\n/// @requires var-get\n@mixin igx-grid-toolbar($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    // Caption\n    $grid-toolbar-fs: rem(16px);\n\n    $grid-toolbar-padding: (\n        comfortable: 0 rem(16px) 0 rem(24px),\n        cosy: 0 rem(12px) 0 rem(16px),\n        compact: 0 rem(8px) 0 rem(12px)\n    );\n\n    $grid-toolbar-spacer: (\n        comfortable: rem(16px),\n        cosy: rem(12px),\n        compact: rem(8px)\n    );\n\n    $grid-toolbar-padding-rtl: (\n        comfortable: 0 rem(24px) 0 rem(16px),\n        cosy: 0 rem(16px) 0 rem(12px),\n        compact: 0 rem(12px) 0 rem(8px)\n    );\n\n    $grid-toolbar-height: (\n        comfortable: rem(58px),\n        cosy: rem(52px),\n        compact: rem(44px)\n    );\n\n    %igx-grid-toolbar {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        grid-row: 1;\n        font-size: $grid-toolbar-fs;\n        border-bottom: 1px solid igx-color(map.get($theme, 'palette'), 'grays', 300);\n        background: var-get($theme, 'background-color');\n        height: auto;\n        min-height: map.get($grid-toolbar-height, 'comfortable');\n        position: relative;\n\n        @include if-ltr() {\n            padding: map.get($grid-toolbar-padding, 'comfortable');\n        }\n\n        @include if-rtl() {\n            padding: map.get($grid-toolbar-padding-rtl, 'comfortable');\n        }\n\n        [igxButton] {\n            margin-#{$left}: map.get($grid-toolbar-spacer, 'comfortable');\n\n            &:first-of-type {\n                margin-#{$left}: 0;\n            }\n\n            &:last-of-type {\n                margin-#{$right}: 0;\n            }\n        }\n\n        &[dir='rtl'] {\n            text-align: #{$right};\n\n            [igxButton] {\n                margin-#{$left}: 0;\n                margin-#{$right}: rem(8);\n\n                &:last-child {\n                    margin-#{$right}: 0;\n                }\n            }\n        }\n    }\n\n    %igx-grid-toolbar--cosy {\n        min-height: map.get($grid-toolbar-height, 'cosy');\n        @include if-ltr() {\n            padding: map.get($grid-toolbar-padding, 'cosy');\n        }\n\n        @include if-rtl() {\n            padding: map.get($grid-toolbar-padding-rtl, 'cosy');\n        }\n\n        [igxButton] {\n            margin-#{$left}: map.get($grid-toolbar-spacer, 'cosy');\n        }\n    }\n\n    %igx-grid-toolbar--compact {\n        min-height: map.get($grid-toolbar-height, 'compact');\n        @include if-ltr() {\n            padding: map.get($grid-toolbar-padding, 'compact');\n        }\n\n        @include if-rtl() {\n            padding: map.get($grid-toolbar-padding-rtl, 'compact');\n        }\n\n        [igxButton] {\n            margin-#{$left}: map.get($grid-toolbar-spacer, 'compact');\n        }\n    }\n\n    %igx-grid-toolbar__title {\n        color: var-get($theme, 'title-text-color');\n        flex: 1 1 auto;\n        @include ellipsis();\n        max-width: 40ch;\n        margin-#{$right}: map.get($grid-toolbar-spacer, 'comfortable')\n    }\n\n    %igx-grid-toolbar__custom-content {\n        display: flex;\n        flex-wrap: wrap;\n        flex-grow: 1;\n        justify-content: flex-end;\n        margin-#{$right}: map.get($grid-toolbar-spacer, 'comfortable');\n    }\n\n    %igx-grid-toolbar__actions {\n        display: flex;\n        align-items: center;\n        flex-flow: row wrap;\n        margin-#{$left}: auto;\n\n        > * {\n            display: flex;\n            margin-#{$left}: map.get($grid-toolbar-spacer, 'comfortable');\n\n            &:first-child {\n                margin-#{$left}: 0;\n            }\n        }\n    }\n\n    %igx-grid-toolbar__actions,\n    %igx-grid-toolbar__title,\n    %igx-grid-toolbar__custom-content {\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-grid-toolbar__title:empty + %igx-grid-toolbar__custom-content:empty {\n        + %igx-grid-toolbar__actions {\n            width: 100%;\n            margin-left: 0;\n            justify-content: flex-end;\n        }\n    }\n\n    %igx-grid-toolbar__progress-bar {\n        position: absolute;\n        width: 100%;\n        left: 0;\n        right: 0;\n        bottom: rem(-1px);\n        height: rem(2px);\n        overflow: hidden;\n        background: var-get($theme, 'background-color');\n\n        igx-linear-bar > * {\n            border-radius: 0;\n\n            &:first-child > div {\n                background: igx-color(map.get($theme, 'palette'), 'secondary');\n            }\n        }\n    }\n\n    %igx-grid-toolbar__adv-filter--filtered {\n        border-color: igx-color(map.get($theme, 'palette'), 'secondary') !important;\n\n        @if $bootstrap-theme {\n            border-width: 2px;\n            border-color: igx-color(map.get($theme, 'palette'), 'primary', 800) !important;\n            color: igx-color(map.get($theme, 'palette'), 'primary', 800);\n\n            &:hover,\n            &:focus {\n                background: igx-color(map.get($theme, 'palette'), 'primary', 800);\n            }\n        }\n    }\n\n    %igx-grid-toolbar__dropdown {\n        position: relative;\n    }\n\n    %igx-grid-toolbar__dd-list {\n        list-style: none;\n        background: var-get($theme, 'dropdown-background');\n        margin: 0;\n        padding: 0;\n        box-shadow: igx-elevation($elevation: 8);\n    }\n\n    %igx-grid-toolbar__dd-list-items {\n        cursor: pointer;\n        position: relative;\n        padding: em(8px) em(16px);\n        color: var-get($theme, 'item-text-color');\n        white-space: nowrap;\n\n        &:hover {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-text-color');\n        }\n\n        &:focus {\n            background: var-get($theme, 'item-focus-background');\n            color: var-get($theme, 'item-focus-text-color');\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color(s) specified, text color(s) will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $resting-background [null]- The background color used for the highlight in its resting state.\n/// @param {Color} $resting-color [null] - The text color used for the highlight in its resting state.\n/// @param {Color} $active-background [null] - The background color used for the highlight in its active state.\n/// @param {Color} $active-color [null] - The text color used for the highlight in its active state.\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background and icon colors in icon highlight\n///   $my-avatar-theme: igx-avatar-theme($icon-background: black, $icon-color: white);\n///   // Pass the theme to the igx-avatar component mixin\n///   @include igx-avatar($my-avatar-theme);\n@function igx-highlight-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $resting-background: null,\n    $resting-color: null,\n    $active-background: null,\n    $active-color: null,\n) {\n    $name: 'igx-highlight';\n    $selector: '.igx-highlight';\n    $highlight-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $highlight-schema: map.get($schema, $name);\n    } @else {\n        $highlight-schema: $schema;\n    }\n\n    $theme: apply-palette($highlight-schema, $palette);\n\n    @if not($resting-color) and $resting-background {\n        $resting-color: text-contrast($resting-background);\n    }\n\n    @if not($active-color) and $active-background {\n        $active-color: text-contrast($active-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        resting-background: $resting-background,\n        resting-color: $resting-color,\n        active-background: $active-background,\n        active-color: $active-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-highlight($theme) {\n    @include igx-css-vars($theme);\n\n    %igx-highlight {\n        color: var-get($theme, 'resting-color');\n        background: var-get($theme, 'resting-background');\n    }\n\n    %igx-highlight--active {\n        color: var-get($theme, 'active-color');\n        background: var-get($theme, 'active-background');\n    }\n}\n\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $color [null] - The icon color.\n/// @param {String} $size [null] - The icon size.\n/// @param {Color} $disabled-color [null] - The disabled icon color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the icon color\n///   $my-icon-theme: igx-icon-theme($color: orange);\n///   // Pass the theme to the igx-icon component mixin\n///   @include igx-icon($my-icon-theme);\n@function igx-icon-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $color: null,\n    $size: null,\n    $disabled-color: null\n) {\n    $name: 'igx-icon';\n    $icon-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $icon-schema: map.get($schema, $name);\n    } @else {\n        $icon-schema: $schema;\n    }\n\n    $theme: apply-palette($icon-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        color: $color,\n        size: $size,\n        disabled-color: $disabled-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n@mixin igx-icon($theme) {\n    @include igx-css-vars($theme);\n\n    $igx-icon-font-size: var-get($theme, 'size');\n\n    %igx-icon-display {\n        display: inline-flex;\n        width: $igx-icon-font-size;\n        height: $igx-icon-font-size;\n        font-size: $igx-icon-font-size;\n        color: var-get($theme, 'color');\n\n        div,\n        svg {\n            display: block;\n            width: inherit;\n            height: inherit;\n            fill: currentColor;\n        }\n    }\n\n    %igx-icon--success {\n        color: igx-color(map.get($theme, 'palette'), 'success');\n    }\n\n    %igx-icon--error {\n        color: igx-color(map.get($theme, 'palette'), 'error');\n    }\n\n    %igx-icon--inactive {\n        color: var-get($theme, 'disabled-color') !important;\n        opacity: .54;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a> //\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.  /\n/// @param {Color} $idle-text-color [null] - The input text color in the idle state.\n/// @param {Color} $filled-text-color [null] - The input text color in the filled state.\n/// @param {Color} $focused-text-color [null] - The input text color in the focused state.\n/// @param {Color} $disabled-text-color [null] - The input text color in the disabled state.\n///\n/// @param {Color} $input-prefix-color [null] - The input prefix color in the idle state.\n/// @param {Color} $input-prefix-background [null] - The background color of an input prefix in the idle state.\n/// @param {Color} $input-suffix-color [null] - The input suffix color in the idle state.\n/// @param {Color} $input-suffix-background [null] - The background color of an input sufix in the idle state.\n///\n/// @param {Color} $idle-secondary-color [null] - The label color in the idle state.\n/// @param {Color} $filled-secondary-color [null] - The label color in the filled state.\n/// @param {Color} $focused-secondary-color [null] - The label color in the focused state.\n///\n/// @param {Color} $idle-bottom-line-color [null] - The bottom line and border colors in the idle state.\n/// @param {Color} $hover-bottom-line-color [null] - The bottom line and border colors in the hover state.\n/// @param {Color} $focused-bottom-line-color [null] - The bottom line and border colors in the focused state.\n/// @param {Color} $interim-bottom-line-color [null] - The bottom line and border colors during the to-focused transition.\n/// @param {Color} $disabled-bottom-line-color [null] - The bottom line and border colors in the disabled state.\n///\n/// @param {Color} $border-color [null] - The border color for input groups of type border and fluent.\n/// @param {Color} $hover-border-color [null] - The hover input border for input groups of type border and fluent.\n/// @param {Color} $focused-border-color [null] - The focused input border color for input groups of type border and fluent.\n/// @param {Color} $disabled-border-color [null] - The disabled border color for input groups of type border and fluent.\n///\n/// @param {Color} $box-background [null] - The background color of an input group of type box.\n/// @param {Color} $box-disabled-background [null] - The background color of an input group of type box in the disabled state.\n///\n/// @param {Color} $border-background [null] - The background color of an input group of type border.\n/// @param {Color} $border-disabled-background [null] - The background color of an input group of type border in the disabled state.\n///\n/// @param {Color} $search-background [null] - The background color of an input group of type search.\n/// @param {Color} $search-disabled-background [null] - The background color of an input group of type search in the disabled state.\n///\n/// @param {box-shadow} $search-resting-shadow [null] - The shadow color of an input group of type search in its resting state.\n/// @param {box-shadow} $search-hover-shadow [null] - The shadow color of an input group of type search in its hover state.\n/// @param {box-shadow} $search-disabled-shadow [null] - The shadow color of an input group of type search in its disabled state.\n///\n/// @param {Color} $success-secondary-color [null] - The success color used in the valid state.\n/// @param {Color} $warning-secondary-color [null] - The warning color used in the warning state.\n/// @param {Color} $error-secondary-color [null] - The error color used in the error state.\n///\n/// @param {border-radius} $box-border-radius [null] - The border radius used for box input.\n/// @param {border-radius} $border-border-radius [null] - The border radius used for border input.\n/// @param {border-radius} $search-border-radius [null] - The border radius used for search input.\n///\n/// @param {Color} placeholder-color [null] - The placeholder color of an input group.\n/// @param {Color} disabled-placeholder-color [null] - The disabled placeholder color of an input group.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the focused border and label colors\n///   $my-input-group-theme: igx-input-group-theme($focused-secondary-color: pink, $focused-bottom-line-color: pink);\n///   // Pass the theme to the igx-input-group component mixin\n///   @include igx-input-group($my-input-group-theme);\n@function igx-input-group-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $box-border-radius: null,\n    $border-border-radius: null,\n    $search-border-radius: null,\n\n    $idle-text-color: null,\n    $filled-text-color: null,\n    $focused-text-color: null,\n    $disabled-text-color: null,\n\n    $idle-secondary-color: null,\n    $filled-secondary-color: null,\n    $focused-secondary-color: null,\n\n    $idle-bottom-line-color: null,\n    $hover-bottom-line-color: null,\n    $focused-bottom-line-color: null,\n    $interim-bottom-line-color: null,\n    $disabled-bottom-line-color: null,\n\n    $border-color: null,\n    $hover-border-color: null,\n    $focused-border-color: null,\n    $disabled-border-color: null,\n\n    $box-background: null,\n    $box-disabled-background: null,\n    $border-background: null,\n    $border-disabled-background: null,\n\n    $search-background: null,\n    $search-disabled-background: null,\n\n    $search-resting-shadow: null,\n    $search-hover-shadow: null,\n    $search-disabled-shadow: null,\n\n    $success-secondary-color: null,\n    $warning-secondary-color: null,\n    $error-secondary-color: null,\n\n    $placeholder-color: null,\n    $disabled-placeholder-color: null,\n\n    $input-prefix-color: null,\n    $input-prefix-background: null,\n    $input-suffix-color: null,\n    $input-suffix-background: null,\n\n    $label-floated-background: null,\n    $label-floated-disabled-background: null\n) {\n    $name: 'igx-input-group';\n    $selector: 'igx-input-group, igx-date-range-start, igx-date-range-end';\n    $input-group-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $input-group-schema: map.get($schema, $name);\n    } @else {\n        $input-group-schema: $schema;\n    }\n\n    $theme: apply-palette($input-group-schema, $palette);\n\n    $box-border-radius: round-borders(\n        if($box-border-radius, $box-border-radius,\n        map.get($input-group-schema, 'box-border-radius')\n    ), 0, 20px);\n\n    $border-border-radius: round-borders(\n        if($border-border-radius, $border-border-radius,\n        map.get($input-group-schema, 'border-border-radius')\n    ), 0, 20px);\n\n    $search-border-radius: round-borders(\n        if($search-border-radius, $search-border-radius,\n        map.get($input-group-schema, 'search-border-radius')\n    ), 0, 20px);\n\n    $search-resting-elevation: map.get($input-group-schema, 'search-resting-elevation');\n    $search-hover-elevation: map.get($input-group-schema, 'search-hover-elevation');\n    $search-disabled-elevation: map.get($input-group-schema, 'search-disabled-elevation');\n\n    @if not($placeholder-color) and $box-background {\n        $placeholder-color: text-contrast($box-background);\n    }\n\n    @if not($placeholder-color) and $search-background {\n        $placeholder-color: text-contrast($search-background);\n    }\n\n    @if not($search-resting-shadow) {\n        $search-resting-shadow: igx-elevation($elevations, $search-resting-elevation);\n    }\n\n    @if not($search-hover-shadow) {\n        $search-hover-shadow: igx-elevation($elevations, $search-hover-elevation);\n    }\n\n    @if not($search-disabled-shadow) {\n        $search-disabled-shadow: igx-elevation($elevations, $search-disabled-elevation);\n    }\n\n    @return extend($theme, (\n        palette: $palette,\n        name: $name,\n        selector: $selector,\n\n        idle-text-color: $idle-text-color,\n        filled-text-color: $filled-text-color,\n        focused-text-color: $focused-text-color,\n        disabled-text-color: $disabled-text-color,\n\n        box-border-radius: $box-border-radius,\n        border-border-radius: $border-border-radius,\n        search-border-radius: $search-border-radius,\n\n        idle-secondary-color: $idle-secondary-color,\n        filled-secondary-color: $filled-secondary-color,\n        focused-secondary-color: $focused-secondary-color,\n\n        idle-bottom-line-color: $idle-bottom-line-color,\n        hover-bottom-line-color: $hover-bottom-line-color,\n        focused-bottom-line-color: $focused-bottom-line-color,\n        interim-bottom-line-color: $interim-bottom-line-color,\n        disabled-bottom-line-color: $disabled-bottom-line-color,\n\n        border-color: $border-color,\n        hover-border-color: $hover-border-color,\n        focused-border-color: $focused-border-color,\n        disabled-border-color: $disabled-border-color,\n\n        box-background: $box-background,\n        box-disabled-background: $box-disabled-background,\n\n        border-background: $border-background,\n        border-disabled-background: $border-disabled-background,\n\n        search-background: $search-background,\n        search-disabled-background: $search-disabled-background,\n\n        search-resting-shadow: $search-resting-shadow,\n        search-hover-shadow: $search-hover-shadow,\n        search-disabled-shadow: $search-disabled-shadow,\n\n        success-secondary-color: $success-secondary-color,\n        warning-secondary-color: $warning-secondary-color,\n        error-secondary-color: $error-secondary-color,\n        placeholder-color: $placeholder-color,\n        disabled-placeholder-color: $disabled-placeholder-color,\n\n        input-prefix-color: $input-prefix-color,\n        input-prefix-background: $input-prefix-background,\n        input-suffix-color: $input-suffix-color,\n        input-suffix-background: $input-suffix-background,\n\n        label-floated-background: $label-floated-background,\n        label-floated-disabled-background: $label-floated-disabled-background,\n    ));\n}\n\n\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires {mixin} ellipsis\n/// @requires var-get\n@mixin igx-input-group($theme) {\n    @include igx-css-vars($theme);\n\n    $palette: map.get($theme, 'palette');\n\n    $transition-timing: .25s $ease-out-cubic;\n\n    $variant: map.get($theme, variant);\n    $indigo-theme: $variant == 'indigo-design';\n\n    $required-symbol: '*';\n    $required-symbol-margin: 2px;\n\n    // This creates an inverse relationship\n    // between the value of the base scale size and\n    // the sizing of all inner elements.\n    // i.e. the bigger the scale size,\n    // the smaller the padding of the inner items.\n    $base-scale-size: (\n        'comfortable': 16px,\n        'cosy': 19px,\n        'compact': 22px\n    );\n\n    $bootstrap-padding: (\n        'comfortable': rem(8px) rem(16px),\n        'cosy': rem(6px) rem(12px),\n        'compact': rem(4px) rem(8px)\n    );\n\n    $bootstrap-font-size: (\n        'comfortable': rem(20px),\n        'cosy': rem(16px),\n        'compact': rem(14px),\n    );\n\n    $hint-padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));\n    $hint--box-margin: rem(12px, map.get($base-scale-size, 'comfortable'));\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    igx-input-group {\n        --theme: #{map.get($theme, 'variant')};\n    }\n\n    %form-group-display {\n        position: relative;\n        display: block;\n        color: var-get($theme, 'idle-text-color');\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix;\n            outline-style: none;\n        }\n\n        input,\n        textarea,\n        span {\n            font: inherit;\n            margin: 0;\n        }\n\n        input[type='file'] {\n            @include hide-default();\n        }\n\n        textarea {\n            overflow: auto;\n        }\n\n        // Don't show the number spinner\n        input[type='number']::-webkit-inner-spin-button {\n            -webkit-appearance: none;\n            height: auto;\n        }\n\n        input[type='search']::-webkit-search-cancel-button,\n        input[type='search']::-webkit-search-decoration {\n            -webkit-appearance: none;\n        }\n    }\n\n    %form-group-display--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy;\n        }\n    }\n\n    %form-group-display--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact;\n        }\n    }\n\n    %form-group-display--no-margin {\n        margin-top: 0;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--box;\n        }\n    }\n\n    %form-group-display--no-margin-cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-cosy;\n        }\n    }\n\n    %form-group-display--no-margin-compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--box-compact;\n        }\n    }\n\n    %form-group-display--error {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--error;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--error;\n        }\n    }\n\n    %form-group-box-wrapper {\n        border-radius: var-get($theme, 'box-border-radius');\n        overflow: hidden;\n    }\n\n    %form-group-display--hover {\n        cursor: pointer;\n    }\n\n    %form-group-display--disabled {\n        user-select: none;\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled;\n        }\n    }\n\n    %form-group-bundle {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        max-width: 100%;\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 -1px 0 0 var-get($theme, 'idle-bottom-line-color');\n        transition: box-shadow $transition-timing, color $transition-timing;\n    }\n\n    %form-group-bundle--cosy {\n        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--compact {\n        padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--box {\n        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));\n        background: var-get($theme, 'box-background');\n        box-shadow: inset 0 -2px 0 0 var-get($theme, 'idle-bottom-line-color');\n    }\n\n    %form-group-bundle--indigo {\n        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));\n        background: transparent;\n        transition: background $transition-timing, box-shadow $transition-timing;\n        box-shadow: inset 0 -1px 0 0 var-get($theme, 'idle-bottom-line-color');\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'box-background');\n        }\n    }\n\n    %indigo--box-focused {\n        background: var-get($theme, 'box-background');\n    }\n\n    %form-group-bundle-success--indigo {\n        box-shadow: inset 0 -2px 0 0 var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle-error--indigo {\n        box-shadow: inset 0 -2px 0 0 var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper--indigo--disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle--box-cosy {\n        padding: 0 rem(16px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--box-compact {\n        padding: 0 rem(16px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle--hover {\n        cursor: pointer;\n        @if not $indigo-theme {\n            box-shadow: inset 0 -2px 0 0 var-get($theme, 'hover-bottom-line-color');\n        } @else {\n            box-shadow: inset 0 -1px 0 0 var-get($theme, 'hover-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--focus {\n        caret-color: var-get($theme, 'focused-secondary-color');\n        @if not $indigo-theme {\n            box-shadow: inset 0 -2px 0 0 var-get($theme, 'interim-bottom-line-color');\n        } @else {\n            box-shadow: inset 0 -2px 0 0 var-get($theme, 'focused-bottom-line-color');\n        }\n    }\n\n    %form-group-bundle--success {\n        caret-color: var-get($theme, 'success-secondary-color');\n        box-shadow: inset 0 -1px 0 0 var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-bundle--error {\n        caret-color: var-get($theme, 'error-secondary-color');\n        box-shadow: inset 0 -1px 0 0 var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle--disabled {\n        @if not $indigo-theme {\n            box-shadow: none;\n        } @else {\n            box-shadow: inset 0 -1px 0 0 var-get($theme, 'disabled-bottom-line-color');\n        }\n        background-image: linear-gradient(to #{$left}, var-get($theme, 'disabled-bottom-line-color') 40%, transparent 10%);\n        background-position: bottom;\n        background-size: 4px 1px;\n        background-repeat: repeat-x;\n    }\n\n    %form-group-bundle--box-disabled {\n        @if not $indigo-theme {\n            background: var-get($theme, 'box-disabled-background');\n        } @else {\n            background: transparent;\n        }\n    }\n\n    %form-group-bundle--border {\n        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));\n        box-shadow: inset 0 0 0 1px var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-border-radius');\n        background: var-get($theme, 'border-background');\n    }\n\n    %form-group-bundle--border-cosy {\n        padding: 0 rem(16px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--border-compact {\n        padding: 0 rem(16px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-border--hover {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'hover-border-color');\n        } @else {\n            box-shadow: inset 0 0 0 1px var-get($theme, 'hover-border-color');\n        }\n    }\n\n    %form-group-bundle-border--focus {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'focused-border-color');\n        } @else {\n            box-shadow: inset 0 0 0 1px var-get($theme, 'focused-border-color');\n        }\n    }\n\n    %form-group-bundle-border--error {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'error-secondary-color');\n        } @else {\n            box-shadow: inset 0 0 0 1px var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %form-group-bundle-border--success {\n        @if not $indigo-theme {\n            box-shadow: inset 0 0 0 2px var-get($theme, 'success-secondary-color');\n        } @else {\n            box-shadow: inset 0 0 0 1px var-get($theme, 'success-secondary-color');\n        }\n    }\n\n    %form-group-bundle-border--disabled {\n        background: var-get($theme, 'border-disabled-background');\n        box-shadow: inset 0 0 0 1px var-get($theme, 'disabled-border-color');\n    }\n\n    // FLUENT START\n    %igx-input-group-fluent {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent;\n            outline-style: none;\n        }\n\n        select {\n            width: calc(100% + #{rem(8px)});\n            margin-#{$left}: rem(-8px) !important;\n            cursor: pointer !important;\n        }\n    }\n\n    %igx-input-group-fluent-search {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search;\n            outline-style: none;\n            overflow: hidden;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--focused {\n        igx-prefix,\n        [igxPrefix] {\n            visibility: hidden;\n            width: 0;\n            padding-#{$left}: 0 !important;\n        }\n    }\n\n    %igx-input-group-fluent--cosy {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent--cosy;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent--cosy;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--cosy {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search--cosy;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search--cosy;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent--compact {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent--compact;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent--compact;\n            outline-style: none;\n        }\n    }\n\n    %igx-input-group-fluent-search--compact {\n        display: flex;\n        flex-direction: column;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix-fluent-search--compact;\n            outline-style: none;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix-fluent-search--compact;\n            outline-style: none;\n        }\n    }\n\n    %form-group-bundle-required--fluent {\n        &::after {\n            content: '*';\n            position: absolute;\n            top: rem(-8px);\n            #{$left}: calc(100% + #{rem(4px)});\n            color: var-get($theme, 'error-secondary-color');\n        }\n    }\n\n    %fluent-label + %form-group-bundle-required--fluent {\n        &::after {\n            display: none;\n        }\n    }\n\n    // Bundle\n    %form-group-bundle--fluent {\n        padding: 0;\n        min-height: 32px;\n        border: 1px solid var-get($theme, 'border-color');\n        box-shadow: none;\n        border-radius: var-get($theme, 'border-border-radius');\n        background: var-get($theme, 'border-background');\n        position: relative;\n        align-items: stretch;\n    }\n\n    %form-group-bundle--fluent--hover {\n        border-color: var-get($theme, 'hover-border-color');\n        box-shadow: none;\n    }\n\n    %form-group-bundle--fluent--focus {\n        border-color: var-get($theme, 'focused-border-color');\n        box-shadow: none;\n    }\n\n    %form-group-bundle--fluent--hover-disabled,\n    %form-group-bundle--fluent-disabled {\n        border-color: var-get($theme, 'disabled-border-color');\n        background: var-get($theme, 'border-disabled-background');\n    }\n\n    %form-group-bundle-error--fluent--hover,\n    %form-group-bundle-error--fluent {\n        border-color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-bundle-success--fluent--hover,\n    %form-group-bundle-success--fluent {\n        border-color: var-get($theme, 'success-secondary-color');\n    }\n\n    %fluent-input {\n        padding: 0;\n        margin: 0;\n        border: none;\n    }\n\n    %fluent-input-disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-bundle-main--fluent {\n        padding-#{$left}: rem(8px);\n        align-self: center;\n    }\n\n    igx-prefix + %form-group-bundle-main--fluent,\n    [igx-prefix] + %form-group-bundle-main--fluent {\n        @if $variant != 'fluent' {\n            padding-#{$left}: 0;\n        }\n    }\n\n    %fluent-placeholder-label {\n        transform: translateY(0) scale(1);\n    }\n\n    %fluent-label {\n        padding: rem(5px) 0;\n        line-height: normal !important;\n        position: static;\n        transform: translateY(0);\n        transform-origin: top #{$left};\n        margin-top: 0 !important;\n        height: auto;\n        color: igx-color(map.get($theme, 'palette'), 'grays', 800);\n    }\n\n    %fluent-label-success {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-error {\n        color: var-get($theme, 'idle-text-color');\n    }\n\n    %fluent-label-disabled {\n        color: igx-color(map.get($theme, 'palette'), 'grays', 500);\n    }\n\n    %fluent-label-filled {\n        transform: translateY(0);\n    }\n\n    %fluent-label-focused {\n        color: igx-color(map.get($theme, 'palette'), 'grays', 800);\n        transform: translateY(0) scale(1);\n    }\n\n    %fluent-textarea {\n        padding: 0;\n    }\n\n    %form-group-bundle--search {\n        padding: 0 rem(16px, map.get($base-scale-size, 'comfortable'));\n        border-radius: var-get($theme, 'search-border-radius');\n        background: var-get($theme, 'search-background');\n        box-shadow: var-get($theme, 'search-resting-shadow');\n    }\n\n    %form-group-bundle--search-cosy {\n        padding: 0 rem(16px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle--search-compact {\n        padding: 0 rem(16px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-bundle-search--hover {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--focus {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'hover-border-color');\n    }\n\n    %form-group-bundle-search--error {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--success {\n        box-shadow: var-get($theme, 'search-hover-shadow');\n        border-color: var-get($theme, 'search-hover-shadow');\n    }\n\n    %form-group-bundle-search--disabled {\n        background: var-get($theme, 'search-disabled-background');\n        box-shadow: var-get($theme, 'search-disabled-shadow');\n        border-color: var-get($theme, 'disabled-border-color');\n    }\n\n    %form-group-bundle-main {\n        position: relative;\n        flex-grow: 1;\n        max-width: inherit;\n    }\n\n    %form-group-bundle-main--box {\n        padding-top: rem(18px, map.get($base-scale-size, 'comfortable'));\n    }\n\n    %form-group-bundle-main--box-cosy {\n        padding-top: rem(18px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-bundle-main--box-compact {\n        padding-top: rem(18px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-label {\n        @include ellipsis();\n        position: absolute;\n        // width: 100%;\n        transform: translateY(50%); /* 8px, base is 16px */\n        line-height: 1 !important;\n        height: rem(18px);\n        backface-visibility: hidden;\n        will-change: transform;\n        transform-origin: top #{$left};\n        transition: transform $transition-timing, color $transition-timing, margin $transition-timing;\n    }\n\n    %form-group-label--cosy {\n        margin-top: rem(-2px);\n    }\n\n    %form-group-label--compact {\n        margin-top: rem(-4px);\n    }\n\n    %form-group-label--box {\n        transform: translateY(0);\n\n        + %form-group-input--box,\n        ~ %form-group-file-input--box {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-label--border {\n        padding: 0 rem(4px);\n        transition: all $transition-timing;\n    }\n\n    %form-group-label--border,\n    %form-group-label--search {\n        transform: translateY(0);\n    }\n\n    %form-group-label--search {\n        + %form-group-input--search {\n            transform: translateY(0);\n        }\n    }\n\n    %form-group-label--float {\n        overflow: visible;\n        transform: translateY(-50%) scale(.75);\n        margin-top: auto;\n    }\n\n    %form-group-label--float-border {\n        // width: auto;\n        transform: translateY(-130%) scale(.75);\n        background: var-get($theme, 'label-floated-background', inherit);\n    }\n\n    %form-group-label--float-border-disabled {\n        background: var-get($theme, 'label-floated-disabled-background', inherit);\n    }\n\n    %form-group-label--float-border-cosy {\n        transform: translateY(-115%) scale(.75);\n    }\n\n    %form-group-label--float-border-compact {\n        transform: translateY(-105%) scale(.75);\n    }\n\n    %form-group-label--fixed {\n        transition: color $transition-timing;\n    }\n\n    %form-group-label--focus {\n        color: var-get($theme, 'focused-secondary-color');\n    }\n\n    %form-group-label--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-label--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-label--required {\n        &::after {\n            content: '#{$required-symbol}';\n            font-size: inherit;\n            vertical-align: top;\n            margin-#{$left}: $required-symbol-margin; /* 2px base is 16px */\n            display: inline-block;\n        }\n    }\n\n    %form-group-input {\n        position: relative;\n        display: block;\n        border: none;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        width: 100%;\n        min-width: 0;\n        overflow: visible;\n        background: transparent;\n        color: var-get($theme, 'filled-text-color');\n        outline-style: none;\n        box-shadow: none;\n        border-top: rem(3px) solid transparent;\n        padding-bottom: rem(3px);\n\n        &:not([type='date']) {\n            line-height: 0 !important; /* Reset typography */\n        }\n\n        &::-webkit-input-placeholder {\n            line-height: normal;\n        }\n\n        &::placeholder {\n            color: var-get($theme, 'placeholder-color');\n            opacity: 1;\n            line-height: normal; /* Fix placeholder position in Safari */\n        }\n    }\n\n    %form-group-file-input {\n        position: relative;\n        width: 100%;\n        max-width: 100%;\n        overflow: hidden;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        color: var-get($theme, 'filled-text-color');\n        line-height: 1;\n\n        span {\n            @include ellipsis();\n            position: absolute;\n            display: inline-block;\n            width: inherit;\n            max-width: inherit;\n            top: 50%;\n            transform: translateY(-50%);\n        }\n    }\n\n    %form-group-input--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-file-input--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-input--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-file-input--compact {\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-upload-button {\n        margin-bottom: rem(10px);\n    }\n\n    %form-group-clear-icon {\n        &:focus {\n            border-radius: 4px;\n            background-color: igx-color($palette, 'primary', 500);\n            color: igx-contrast-color($palette, 'primary', 500);\n\n            @if $variant == 'material' {\n                background-color: transparent;\n                color: igx-color($palette, 'secondary', 500);\n            }\n\n            @if $variant == 'fluent' {\n                border-radius: 0;\n            }\n\n            @if $variant == 'bootstrap' {\n                border-radius: 0;\n                color: igx-contrast-color($palette, 'primary', 600);\n            }\n        }\n    }\n\n    %chrome-autofill-fix {\n        &:-webkit-autofill,\n        &:-webkit-autofill:hover,\n        &:-webkit-autofill:focus,\n        &:-webkit-autofill:active {\n            -webkit-transition-delay: 99999s;\n            transition-delay: 99999s;\n        }\n    }\n\n    %edge-clear-icon-fix {\n        &::-ms-clear {\n            display: none;\n        }\n    }\n\n    %form-group-input--box,\n    %form-group-file-input--box,\n    %form-group-input--search,\n    %form-group-input--border,\n    %form-group-input--indigo,\n    %form-group-file-input-indigo {\n        transform: translateY(-25%);\n    }\n\n    %form-group-input--hover {\n        cursor: pointer;\n    }\n\n    %form-group-input--focus {\n        cursor: text;\n        color: var-get($theme, 'focused-text-color');\n    }\n\n    %form-group-input--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea {\n        // 3 lines * 22px + 8px bottom padding + 8px top padding\n        min-height: rem(82px, map.get($base-scale-size, 'comfortable'));\n\n        // this fixes resizing in chrome !?!?\n        margin-#{$right}: -#{rem(16px, map.get($base-scale-size, 'comfortable'))};\n\n        height: auto;\n        resize: vertical;\n        overflow: hidden;\n\n        // resets typography styles\n        line-height: normal !important;\n\n        &:not([type='*']) {\n            line-height: normal !important; /* resets typography styles */\n        }\n    }\n\n    %form-group-textarea--disabled {\n        color: var-get($theme, 'disabled-text-color') !important;\n\n        &::placeholder {\n            color: var-get($theme, 'disabled-placeholder-color');\n        }\n    }\n\n    %form-group-textarea--cosy {\n        min-height: rem(82px, map.get($base-scale-size, 'cosy'));\n        margin-#{$right}: -#{rem(16px, map.get($base-scale-size, 'cosy'))};\n    }\n\n    %form-group-textarea--compact {\n        min-height: rem(82px, map.get($base-scale-size, 'compact'));\n        margin-#{$right}: -#{rem(16px, map.get($base-scale-size, 'compact'))};\n    }\n\n    %form-group-textarea--indigo {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'comfortable'))} !important;\n    }\n\n    %form-group-textarea--indigo-cosy {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'cosy'))} !important;\n    }\n\n    %form-group-textarea--indigo-compact {\n        margin-top: -#{rem(18px, map.get($base-scale-size, 'compact'))} !important;\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        height: rem(32px, map.get($base-scale-size, 'comfortable'));\n        transition: color $transition-timing;\n    }\n\n    %form-group-prefix {\n        @include if-ltr() {\n            padding: rem(8px, map.get($base-scale-size, 'comfortable'))\n                rem(8px, map.get($base-scale-size, 'comfortable'))\n                rem(8px, map.get($base-scale-size, 'comfortable'))\n                0;\n        }\n\n        @include if-rtl() {\n            padding: rem(8px, map.get($base-scale-size, 'comfortable'))\n                0\n                rem(8px, map.get($base-scale-size, 'comfortable'))\n                rem(8px, map.get($base-scale-size, 'comfortable'));\n        }\n    }\n\n    %form-group-suffix {\n        padding: rem(8px, map.get($base-scale-size, 'comfortable')) 0;\n    }\n\n    %form-group-prefix--cosy,\n    %form-group-suffix--cosy {\n        height: rem(32px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix--compact,\n    %form-group-suffix--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: rem(32px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-prefix--cosy {\n        @include if-ltr() {\n            padding: rem(8px, map.get($base-scale-size, 'cosy'))\n                rem(8px, map.get($base-scale-size, 'cosy'))\n                rem(8px, map.get($base-scale-size, 'cosy'))\n                0;\n        }\n\n        @include if-rtl() {\n            padding: rem(8px, map.get($base-scale-size, 'cosy'))\n                0\n                rem(8px, map.get($base-scale-size, 'cosy'))\n                rem(8px, map.get($base-scale-size, 'cosy'));\n        }\n    }\n\n    %form-group-prefix--compact {\n        @include if-ltr() {\n            padding: rem(8px, map.get($base-scale-size, 'compact'))\n                rem(8px, map.get($base-scale-size, 'compact'))\n                rem(8px, map.get($base-scale-size, 'compact'))\n                0;\n        }\n\n        @include if-rtl() {\n            padding: rem(8px, map.get($base-scale-size, 'compact'))\n                0\n                rem(8px, map.get($base-scale-size, 'compact'))\n                rem(8px, map.get($base-scale-size, 'compact'));\n        }\n    }\n\n    %form-group-suffix--cosy {\n        padding: rem(8px, map.get($base-scale-size, 'cosy')) 0;\n    }\n\n    %form-group-suffix--compact {\n        padding: rem(8px, map.get($base-scale-size, 'compact')) 0;\n    }\n\n    %form-group-prefix-fluent {\n        color: var-get($theme, 'input-prefix-color');\n        background: var-get($theme, 'input-prefix-background');\n        padding: rem(8px, map.get($base-scale-size, 'comfortable'));\n        width: auto;\n        height: auto;\n        line-height: normal;\n        font-weight: 400;\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n        }\n\n        &:last-of-type {\n            margin-#{$right}: rem(8px);\n        }\n    }\n\n    %form-group-prefix-fluent-search {\n        padding: rem(8px, map.get($base-scale-size, 'comfortable'));\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n        }\n\n        &:last-of-type {\n            margin-#{$right}: 0;\n        }\n    }\n\n    %form-group-suffix-fluent {\n        color: var-get($theme, 'input-suffix-color');\n        padding: rem(8px, map.get($base-scale-size, 'comfortable'));\n        background: var-get($theme, 'input-suffix-background');\n        width: auto;\n        height: auto;\n        line-height: normal;\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n        }\n\n        &:first-of-type {\n            margin-#{$left}: rem(8px);\n        }\n    }\n\n    %form-group-suffix-fluent-search {\n        width: auto;\n        height: auto;\n        padding: rem(8px, map.get($base-scale-size, 'comfortable'));\n        line-height: normal;\n\n        igx-icon {\n            width: rem(18px);\n            height: rem(18px);\n            font-size: rem(18px);\n        }\n\n        &:first-of-type {\n            margin-#{$left}: 0;\n        }\n    }\n\n    %form-group-prefix-fluent-search--cosy,\n    %form-group-suffix-fluent-search--cosy,\n    %form-group-prefix-fluent--cosy,\n    %form-group-suffix-fluent--cosy {\n        height: auto;\n        line-height: normal;\n    }\n\n    %form-group-prefix-fluent-search--compact,\n    %form-group-suffix-fluent-search--compact,\n    %form-group-prefix-fluent--compact,\n    %form-group-suffix-fluent--compact {\n        font-size: rem(map.get($base-scale-size, 'compact') - 1px, map.get($base-scale-size, 'compact'));\n        height: auto;\n        line-height: normal;\n    }\n\n    %form-group-prefix-fluent-search--cosy,\n    %form-group-prefix-fluent--cosy {\n        padding: rem(8px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-prefix-fluent-search--compact,\n    %form-group-prefix-fluent--compact {\n        padding: rem(8px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-suffix-fluent-search--cosy,\n    %form-group-suffix-fluent--cosy {\n        padding: rem(8px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-suffix-fluent-search--compact,\n    %form-group-suffix-fluent--compact {\n        padding: rem(8px, map.get($base-scale-size, 'compact'));\n    }\n    // FLUENT END\n\n    %form-group-prefix--box {\n        @include if-ltr() {\n            padding: 0 rem(8px, map.get($base-scale-size, 'comfortable')) 0 0;\n        }\n\n        @include if-rtl() {\n            padding: 0 0 0 rem(8px, map.get($base-scale-size, 'comfortable')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-cosy {\n        @include if-ltr() {\n            padding: 0 rem(8px, map.get($base-scale-size, 'cosy')) 0 0;\n        }\n\n        @include if-rtl() {\n            padding: 0 0 0 rem(8px, map.get($base-scale-size, 'cosy')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-prefix--box-compact {\n        @include if-ltr() {\n            padding: 0 rem(8px, map.get($base-scale-size, 'compact')) 0 0;\n        }\n\n        @include if-rtl() {\n            padding: 0 0 0 rem(8px, map.get($base-scale-size, 'compact')); /* 8px, base is 16px */\n        }\n    }\n\n    %form-group-suffix--box {\n        padding: 0;\n    }\n\n    %form-group-prefix--error,\n    %form-group-suffix--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-border {\n        height: 2px; /* 2px, when base is 16px */\n        margin-top: -2px; /* 2px, when base is 16px */\n        transform: scaleX(0);\n        transform-origin: center;\n        background: var-get($theme, 'focused-secondary-color');\n    }\n\n    %form-group-border--focus {\n        transform: scaleX(1);\n        transition: transform $transition-timing;\n    }\n\n    %form-group-border--success {\n        background: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-border--warning {\n        background: var-get($theme, 'warning-secondary-color');\n    }\n\n    %form-group-border--error {\n        background: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-border--hidden {\n        display: none;\n    }\n\n    %form-group-helper {\n        position: relative;\n        display: flex;\n        padding-top: rem(6px, map.get($base-scale-size, 'comfortable'));\n        justify-content: space-between;\n\n        > * {\n            margin-#{$right}: rem(8px);\n\n            &:last-child {\n                margin-#{$right}: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %form-group-help--cosy {\n        padding-top: rem(6px, map.get($base-scale-size, 'cosy'));\n    }\n\n    %form-group-help--compact {\n        padding-top: rem(6px, map.get($base-scale-size, 'compact'));\n    }\n\n    %form-group-helper--box {\n        margin-#{$left}: $hint--box-margin; /* 16px, base is 12px */\n        margin-#{$right}: $hint--box-margin; /* 16px, base is 12px */\n    }\n\n    %form-group-helper--success {\n        color: var-get($theme, 'success-secondary-color');\n    }\n\n    %form-group-helper--error {\n        color: var-get($theme, 'error-secondary-color');\n    }\n\n    %form-group-helper-item {\n        display: flex;\n        align-items: center;\n        position: relative;\n    }\n\n    %form-group-helper-item--start {\n        justify-content: flex-start;\n    }\n\n    %form-group-helper-item--end {\n        justify-content: flex-end;\n    }\n\n    %form-group-helper-item--start,\n    %form-group-helper-item--end {\n        width: 100%;\n    }\n\n    %form-group-prefix--disabled,\n    %form-group-suffix--disabled {\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    // Bootstrap\n    %form-group-display--bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--bootstrap;\n        }\n\n        %form-group-prefix--bootstrap:first-child {\n            border-top-#{$left}-radius: var-get($theme, 'box-border-radius');\n            border-bottom-#{$left}-radius: var-get($theme, 'box-border-radius');\n        }\n\n        %form-group-suffix--bootstrap:last-child {\n            border-top-#{$right}-radius: var-get($theme, 'box-border-radius');\n            border-bottom-#{$right}-radius: var-get($theme, 'box-border-radius');\n        }\n\n        %bootstrap-input:not(:first-child),\n        %bootstrap-file-input:not(:first-child) {\n            border-top-#{$left}-radius: 0;\n            border-bottom-#{$left}-radius: 0;\n        }\n\n        %bootstrap-input:not(:last-child),\n        %bootstrap-file-input:not(:last-child) {\n            border-top-#{$right}-radius: 0;\n            border-bottom-#{$right}-radius: 0;\n        }\n    }\n\n    %form-group-display--cosy-bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--cosy-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--cosy-bootstrap;\n        }\n    }\n\n    %form-group-display--compact-bootstrap {\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--compact-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--compact-bootstrap;\n        }\n    }\n\n    %form-group-display--disabled-bootstrap {\n        background-image: none;\n\n        igx-prefix,\n        [igxPrefix] {\n            @extend %form-group-prefix--disabled-bootstrap;\n        }\n\n        igx-suffix,\n        [igxSuffix] {\n            @extend %form-group-suffix--disabled-bootstrap;\n        }\n    }\n\n    %form-group-bundle--bootstrap {\n        align-items: stretch;\n        padding: 0;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %form-group-bundle--bootstrap-hover {\n        border: none;\n        box-shadow: none;\n    }\n\n    %form-group-prefix--bootstrap,\n    %form-group-suffix--bootstrap {\n        border: 1px solid var-get($theme, 'border-color');\n        padding: map.get($bootstrap-padding, 'comfortable');\n        z-index: -1;\n        width: auto;\n        height: auto;\n        font-size: map.get($bootstrap-font-size, 'comfortable');\n        line-height: 1.5;\n        white-space: nowrap;\n\n        igx-icon {\n            width: map.get($bootstrap-font-size, 'comfortable');\n            height: map.get($bootstrap-font-size, 'comfortable');\n            font-size: map.get($bootstrap-font-size, 'comfortable');\n            font-weight: 400;\n        }\n    }\n\n    %form-group-prefix--bootstrap {\n        color: var-get($theme, 'input-prefix-color');\n        background: var-get($theme, 'input-prefix-background');\n        border-#{$right}: 0;\n    }\n\n    %form-group-suffix--bootstrap {\n        color: var-get($theme, 'input-suffix-color');\n        background: var-get($theme, 'input-suffix-background');\n        border-#{$left}: 0;\n    }\n\n    %form-group-prefix--disabled-bootstrap,\n    %form-group-suffix--disabled-bootstrap {\n        border: 1px solid var-get($theme, 'disabled-border-color');\n        color: var-get($theme, 'disabled-text-color');\n    }\n\n    %form-group-prefix--cosy-bootstrap,\n    %form-group-suffix--cosy-bootstrap {\n        padding: map.get($bootstrap-padding, 'cosy');\n        width: auto;\n        height: auto;\n\n        igx-icon {\n            width: map.get($bootstrap-font-size, 'cosy');\n            height: map.get($bootstrap-font-size, 'cosy');\n            font-size: map.get($bootstrap-font-size, 'cosy');\n        }\n    }\n\n    %form-group-prefix--compact-bootstrap,\n    %form-group-suffix--compact-bootstrap {\n        padding: map.get($bootstrap-padding, 'compact');\n        width: auto;\n        height: auto;\n\n        igx-icon {\n            width: map.get($bootstrap-font-size, 'compact');\n            height: map.get($bootstrap-font-size, 'compact');\n            font-size: map.get($bootstrap-font-size, 'compact');\n        }\n    }\n\n    %bootstrap-label {\n        position: static;\n        display: block;\n        color: var-get($theme, 'idle-secondary-color');\n        padding: 0;\n        line-height: normal !important;\n        transform: translateY(0);\n        transform-origin: top #{$left};\n        margin-top: 0 !important;\n        margin-bottom: rem(8px);\n        height: auto;\n        font-size: rem(16px);\n    }\n\n    %bootstrap-label--cosy {\n        font-size: rem(14px);\n        margin-bottom: rem(6px);\n    }\n\n    %bootstrap-label--compact {\n        font-size: rem(14px);\n        margin-bottom: rem(4px);\n    }\n\n    %bootstrap-input {\n        height: auto;\n        line-height: 1.5 !important;\n        margin: 0;\n        border-radius: var-get($theme, 'box-border-radius');\n        border: 1px solid var-get($theme, 'border-color');\n        font-size: map.get($bootstrap-font-size, 'comfortable');\n        padding: map.get($bootstrap-padding, 'comfortable');\n    }\n\n    %bootstrap-file-input {\n        width: calc(100% - #{2 * nth(map.get($bootstrap-padding, 'comfortable'), 2)});\n        height: inherit;\n        border-radius: var-get($theme, 'box-border-radius');\n        border: 1px solid var-get($theme, 'border-color');\n        padding: map.get($bootstrap-padding, 'comfortable');\n    }\n\n    %bootstrap-input--focus {\n        border: 1px solid var-get($theme, 'focused-secondary-color');\n        box-shadow: 0 0 0 rem(3px) var-get($theme, 'focused-secondary-color');\n    }\n\n    %bootstrap-input--success {\n        border: 1px solid var-get($theme, 'success-secondary-color');\n        box-shadow: 0 0 0 rem(3px) var-get($theme, 'success-secondary-color');\n    }\n\n    %bootstrap-input--error {\n        border: 1px solid var-get($theme, 'error-secondary-color');\n        box-shadow: 0 0 0 rem(3px) var-get($theme, 'error-secondary-color');\n    }\n\n    %bootstrap-input--disabled {\n        background: var-get($theme, 'border-disabled-background');\n        border: 1px solid var-get($theme, 'disabled-border-color');\n        box-shadow: none;\n    }\n\n    %bootstrap-input--search {\n        transform: translateY(0);\n    }\n\n    %bootstrap-input--cosy {\n        font-size: map.get($bootstrap-font-size, 'cosy');\n        padding: map.get($bootstrap-padding, 'cosy');\n    }\n\n    %bootstrap-input--compact {\n        font-size: map.get($bootstrap-font-size, 'compact');\n        padding: map.get($bootstrap-padding, 'compact');\n    }\n}\n\n/// Adds typography styles for the igx-input-group component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(helper-text: 'caption', input-text: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-input-group-typography($type-scale, $categories: (\n    helper-text: 'caption',\n    input-text: 'subtitle-1')\n) {\n    $helper-text: map.get($categories, 'helper-text');\n    $input-text: map.get($categories, 'input-text');\n    $input-text-props: igx-type-scale-category($type-scale, $input-text);\n\n    %form-group-input {\n        @include igx-type-style($type-scale, $input-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-helper {\n        @include igx-type-style($type-scale, $helper-text) {\n            margin: 0;\n        }\n    }\n\n    %form-group-prefix,\n    %form-group-suffix {\n        @include igx-type-style($type-scale, $input-text) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The list background color.\n/// @param {Color} $header-background [null] - The list header background color.\n/// @param {Color} $header-text-color [null] - The list header text color.\n///\n/// @param {Color} $item-background [null] - The list item background color.\n/// @param {Color} $item-background-hover [null] - The list item hover background color.\n/// @param {Color} $item-background-active [null] - The active list item background color.\n///\n/// @param {Color} $item-text-color [null] - The list item text color.\n/// @param {Color} $item-text-color-hover [null] - The list item hover text color.\n/// @param {Color} $item-text-color-active [null] - The active list item text color.\n///\n/// @param {Color} $item-title-color [null] - The list item title color.\n/// @param {Color} $item-title-color-hover [null] - The list item hover title color.\n/// @param {Color} $item-title-color-active [null] - The active list item title color.\n///\n/// @param {Color} $item-subtitle-color [null] - The list item subtitle color.\n/// @param {Color} $item-subtitle-color-hover [null] - The list item hover subtitle color.\n/// @param {Color} $item-subtitle-color-active [null] - The active list item subtitle color.\n///\n/// @param {Color} $item-action-color [null] - The list item action color.\n/// @param {Color} $item-action-color-hover [null] - The list item hover action color.\n/// @param {Color} $item-action-color-active [null] - The active list item action color.\n///\n/// @param {Color} $item-thumbnail-color [null] - The list item thumbnail color.\n/// @param {Color} $item-thumbnail-color-hover [null] - The list item hover thumbnail color.\n/// @param {Color} $item-thumbnail-color-active [null] - The active list item thumbnail color.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for list component.\n/// @param {border-radius} $item-border-radius [null] - The border radius used for list item.\n///\n/// @param {Color} $border-width [null] - The list border width.\n/// @param {Number} $border-color [null] - The list border color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n/// @requires luminance\n///\n/// @example scss Change the list background color\n///   $my-list-theme: igx-list-theme($background: black);\n///   // Pass the theme to the igx-list component mixin\n///   @include igx-list($my-list-theme);\n@function igx-list-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $item-border-radius: null,\n    $background: null,\n    $header-background: null,\n    $header-text-color: null,\n    $item-background: null,\n    $item-background-hover: null,\n    $item-background-active: null,\n    $item-text-color: null,\n    $item-text-color-hover: null,\n    $item-text-color-active: null,\n    $item-title-color: null,\n    $item-title-color-hover: null,\n    $item-title-color-active: null,\n    $item-subtitle-color: null,\n    $item-subtitle-color-hover: null,\n    $item-subtitle-color-active: null,\n    $item-action-color: null,\n    $item-action-color-hover: null,\n    $item-action-color-active: null,\n    $item-thumbnail-color: null,\n    $item-thumbnail-color-hover: null,\n    $item-thumbnail-color-active: null,\n    $border-color: null,\n    $border-width: null,\n) {\n    $name: 'igx-list';\n    $list-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $list-schema: map.get($schema, $name);\n    } @else {\n        $list-schema: $schema;\n    }\n\n    $theme: apply-palette($list-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($list-schema, 'border-radius')), 0, 24px\n    );\n\n    $item-border-radius: round-borders(\n        if($item-border-radius, $item-border-radius, map.get($list-schema, 'item-border-radius')), 0, 24px\n    );\n\n    @if not($header-background) and $background {\n        $header-background: $background;\n    }\n\n    @if not($header-background) and $item-background {\n        $header-background: $item-background;\n    }\n\n    @if not($item-background) and $background {\n        $item-background: $background;\n    }\n\n    @if not($background) and $item-background {\n        $background: $item-background;\n    }\n\n    @if not($item-background-hover) and $item-background {\n        @if meta.type-of($item-background) == 'color' and luminance($item-background) < .5 {\n            $item-background-hover: lighten-color($item-background, 8%);\n        } @else {\n            $item-background-hover: darken-color($item-background, 8%);\n        }\n    }\n\n    @if not($item-background-active) and $item-background {\n        @if meta.type-of($item-background) == 'color' and luminance($item-background) < .5 {\n            $item-background-active: lighten-color($item-background, 8%);\n        } @else {\n            $item-background-active: darken-color($item-background, 8%);\n        }\n    }\n\n    @if not($header-text-color) and $header-background {\n        $header-text-color: text-contrast($header-background);\n    }\n\n    @if not($item-text-color) and $item-background {\n        $item-text-color: text-contrast($item-background);\n    }\n\n    @if not($item-title-color) and $item-background {\n        $item-title-color: text-contrast($item-background);\n    }\n\n    @if not($item-action-color) and $item-background {\n        $item-action-color: text-contrast($item-background);\n    }\n\n    @if not($item-thumbnail-color) and $item-background {\n        $item-thumbnail-color: text-contrast($item-background);\n    }\n\n    @if not($item-subtitle-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-subtitle-color: rgba(text-contrast($item-background), .74);\n        }\n    }\n\n    @if not($item-subtitle-color) and $item-text-color {\n        $item-subtitle-color: $item-text-color;\n    }\n\n    @if not($item-text-color-hover) and $item-background-hover {\n        $item-text-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-title-color-hover) and $item-background-hover {\n        $item-title-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-action-color-hover) and $item-background-hover {\n        $item-action-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-thumbnail-color-hover) and $item-background-hover {\n        $item-thumbnail-color-hover: text-contrast($item-background-hover);\n    }\n\n    @if not($item-subtitle-color-hover) and $item-background-hover {\n        @if meta.type-of($item-background-hover) == 'color' {\n            $item-subtitle-color-hover: rgba(text-contrast($item-background-hover), .74);\n        }\n    }\n\n    @if not($item-subtitle-color-hover) and $item-text-color-hover {\n        $item-subtitle-color-hover: $item-text-color-hover;\n    }\n\n    @if not($item-text-color-active) and $item-background-active {\n        $item-text-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-title-color-active) and $item-background-active {\n        $item-title-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-action-color-active) and $item-background-active {\n        $item-action-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-thumbnail-color-active) and $item-background-active {\n        $item-thumbnail-color-active: text-contrast($item-background-active);\n    }\n\n    @if not($item-subtitle-color-active) and $item-background-active {\n        @if meta.type-of($item-background-active) == 'color' {\n            $item-subtitle-color-active: rgba(text-contrast($item-background-active), .74);\n        }\n    }\n\n    @if not($item-subtitle-color-active) and $item-text-color-active {\n        $item-subtitle-color-active: $item-text-color-active;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        header-background: $header-background,\n        header-text-color: $header-text-color,\n        item-background: $item-background,\n        item-background-hover: $item-background-hover,\n        item-background-active: $item-background-active,\n        item-text-color: $item-text-color,\n        item-text-color-hover: $item-text-color-hover,\n        item-text-color-active: $item-text-color-active,\n        item-title-color:$item-title-color,\n        item-title-color-hover:$item-title-color-hover,\n        item-title-color-active:$item-title-color-active,\n        item-subtitle-color: $item-subtitle-color,\n        item-subtitle-color-hover: $item-subtitle-color-hover,\n        item-subtitle-color-active: $item-subtitle-color-active,\n        item-action-color: $item-action-color,\n        item-action-color-hover: $item-action-color-hover,\n        item-action-color-active: $item-action-color-active,\n        item-thumbnail-color: $item-thumbnail-color,\n        item-thumbnail-color-hover: $item-thumbnail-color-hover,\n        item-thumbnail-color-active: $item-thumbnail-color-active,\n        border-color: $border-color,\n        border-width: $border-width,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires var-get\n@mixin igx-list($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $list-empty-padding: (\n        comfortable: rem(16px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    $list-item-padding: (\n        comfortable: rem(8px) rem(16px),\n        cosy: rem(4px) rem(8px),\n        compact: rem(2px) rem(4px)\n    );\n\n    $list-icon-margin: (\n        comfortable: rem(8px) rem(16px) rem(8px) 0,\n        cosy: rem(6px) rem(8px) rem(6px) 0,\n        compact: rem(4px) rem(4px) rem(4px) 0\n    );\n\n    $list-icon-margin-rtl: (\n        comfortable: rem(8px) 0 rem(8px) rem(16px),\n        cosy: rem(6px) 0 rem(6px) rem(8px),\n        compact: rem(4px) 0 rem(4px) rem(4px)\n    );\n\n    $list-line-margin: (\n        comfortable: 0 0 0 rem(16px),\n        cosy: 0 0 0 rem(12px),\n        compact: 0 0 0 rem(8px)\n    );\n\n    $list-line-margin-rtl: (\n        comfortable: 0 rem(16px) 0 0 ,\n        cosy: 0 rem(12px) 0 0 ,\n        compact: 0 rem(8px) 0 0\n    );\n\n    %igx-list {\n        position: relative;\n        display: flex;\n        flex-flow: column nowrap;\n        background: var-get($theme, 'background');\n        height: 100%;\n        overflow: hidden;\n        z-index: 0;\n        border-radius: var-get($theme, 'border-radius');\n\n        @if $bootstrap-theme {\n            border: var-get($theme, 'border-width') solid var-get($theme, 'border-color');\n        }\n    }\n\n    %igx-list--empty {\n        justify-content: center;\n        align-items: center;\n    }\n\n    %igx-list__message--empty {\n        text-align: center;\n        color: var-get($theme, 'item-text-color');\n        padding: map.get($list-empty-padding, 'comfortable');\n        z-index: 1;\n    }\n\n    %igx-list-header {\n        display: flex;\n        align-items: center;\n        color: var-get($theme, 'header-text-color');\n        background: var-get($theme, 'header-background');\n        padding: map.get($list-item-padding, 'comfortable');\n        user-select: none;\n    }\n\n    %igx-list-header--cosy {\n        padding: map.get($list-item-padding, 'cosy');\n    }\n\n    %igx-list-header--compact {\n        padding: map.get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-base {\n        display: flex;\n        flex-flow: column wrap;\n        justify-content: center;\n        border-radius: var-get($theme, 'item-border-radius');\n        color: var-get($theme, 'item-text-color');\n        background: var-get($theme, 'item-background');\n\n        &:hover {\n            color: var-get($theme, 'item-text-color-hover');\n            background: var-get($theme, 'item-background-hover');\n\n            %igx-list__item-lines {\n                color: currentColor;\n            }\n\n            %igx-list__item-line-title {\n                color: var-get($theme, 'item-title-color-hover');\n            }\n\n            %igx-list__item-line-subtitle {\n                color: var-get($theme, 'item-subtitle-color-hover');\n            }\n\n            %igx-list__item-actions {\n                color: var-get($theme, 'item-action-color-hover');\n\n                igx-icon {\n                    color: var-get($theme, 'item-action-color-hover')\n                }\n            }\n\n            %igx-list__item-thumbnail {\n                color: var-get($theme, 'item-thumbnail-color-hover');\n\n                igx-icon {\n                    color: var-get($theme, 'item-thumbnail-color-hover')\n                }\n            }\n        }\n    }\n\n    %igx-list-item-pan {\n        position: absolute;\n        visibility: hidden;\n        display: flex;\n        z-index: 1;\n    }\n\n    %igx-list__item-lines {\n        color: currentColor;\n        display: flex;\n        flex-direction: column;\n        flex: 1 0 0%;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-line-subtitle {\n        color: var-get($theme, 'item-subtitle-color');\n        opacity: .74\n    }\n\n    %igx-list__item-line-title {\n        color: var-get($theme, 'item-title-color');\n    }\n\n    %igx-list__item-actions {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: var-get($theme, 'item-action-color');\n\n        > * {\n            margin-#{$left}: rem(8px);\n        }\n\n        &:empty {\n            display: none;\n        }\n\n        igx-icon {\n            color: var-get($theme, 'item-action-color')\n        }\n    }\n\n    %igx-list-item-content {\n        display: flex;\n        align-items: center;\n        position: relative;\n        padding: map.get($list-item-padding, 'comfortable');\n        border-radius: var-get($theme, 'item-border-radius');\n        background: inherit;\n        z-index: 2;\n    }\n\n    %igx-list-item-content--compact {\n        padding: map.get($list-item-padding, 'compact');\n    }\n\n    %igx-list-item-content--cosy {\n        padding: map.get($list-item-padding, 'cosy');\n    }\n\n    %igx-list__item-thumbnail {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        align-self: flex-start;\n        padding: 0;\n        color: var-get($theme, 'item-thumbnail-color');\n\n        > igx-icon {\n            @include if-ltr() {\n                margin: map.get($list-icon-margin, 'comfortable');\n            }\n\n            @include if-rtl() {\n                margin: map.get($list-icon-margin-rtl, 'comfortable');\n            }\n        }\n\n        > igx-avatar {\n            > igx-icon {\n                margin: 0;\n            }\n        }\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %igx-list__item-thumbnail:not(:empty) + %igx-list__item-lines {\n        @include if-ltr() {\n            margin: map.get($list-line-margin, 'comfortable');\n        }\n\n        @include if-rtl() {\n            margin: map.get($list-line-margin-rtl, 'comfortable');\n        }\n    }\n\n    %igx-list__item-thumbnail--cosy:not(:empty) + %igx-list__item-lines {\n        @include if-ltr() {\n            margin: map.get($list-line-margin, 'cosy');\n        }\n\n        @include if-rtl() {\n            margin: map.get($list-line-margin-rtl, 'cosy');\n        }\n    }\n\n    %igx-list__item-thumbnail--compact:not(:empty) + %igx-list__item-lines {\n        @include if-ltr() {\n            margin: map.get($list-line-margin, 'compact');\n        }\n\n        @include if-rtl() {\n            margin: map.get($list-line-margin-rtl, 'compact');\n        }\n    }\n\n    %igx-list__item-thumbnail--cosy {\n        @include if-ltr() {\n            > igx-icon {\n                margin: map.get($list-icon-margin, 'cosy');\n            }\n        }\n\n        @include if-rtl() {\n            > igx-icon {\n                margin: map.get($list-icon-margin-rtl, 'cosy');\n            }\n        }\n    }\n\n    %igx-list__item-thumbnail--compact {\n        @include if-ltr() {\n            > igx-icon {\n                margin: map.get($list-icon-margin, 'compact');\n            }\n        }\n\n        @include if-rtl() {\n            > igx-icon {\n                margin: map.get($list-icon-margin-rtl, 'compact');\n            }\n        }\n    }\n\n    %igx-list__item-actions--cosy {\n        > * {\n            margin-#{$left}: rem(6px);\n        }\n    }\n\n    %igx-list__item-actions--compact {\n        > * {\n            margin-#{$left}: rem(4px);\n        }\n    }\n\n    %igx-list__item-lines + %igx-list__item-actions {\n        margin-#{$left}: rem(8px);\n    }\n\n    %igx-list-item-content--active {\n        %igx-list__item-line-title {\n            color: var-get($theme, 'item-title-color-active')\n        }\n\n        %igx-list__item-line-subtitle {\n            color: var-get($theme, 'item-subtitle-color-active')\n        }\n\n        %igx-list__item-actions {\n            color: var-get($theme, 'item-action-color-active');\n\n            igx-icon {\n                color: var-get($theme, 'item-action-color-active')\n            }\n        }\n\n        %igx-list__item-thumbnail {\n            color: var-get($theme, 'item-thumbnail-color-active');\n\n            igx-icon {\n                color: var-get($theme, 'item-thumbnail-color-active')\n            }\n        }\n\n        color: var-get($theme, 'item-text-color-active');\n        background: var-get($theme, 'item-background-active');\n        z-index: 3;\n    }\n\n    %igx-list-item-content--inactive {\n        transition: transform .3s $ease-out-quad;\n    }\n}\n\n/// Adds typography styles for the igx-list component.\n/// Uses the 'caption' and 'subtitle-1'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header: 'overline', item: 'subtitle-1', title: 'subtitle-1', subtitle: 'caption')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-list-typography(\n    $type-scale,\n    $categories: (\n        header: 'overline',\n        item: 'subtitle-1',\n        title: 'subtitle-1',\n        subtitle: 'caption'\n    )\n) {\n    $header: map.get($categories, 'header');\n    $item: map.get($categories, 'item');\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n\n    %igx-list-header {\n        @include igx-type-style($type-scale, $header) {\n            margin: 0;\n        }\n    }\n\n    %igx-list-item {\n        @include igx-type-style($type-scale, $item) {\n            margin: 0;\n        }\n    }\n\n    %igx-list__item-lines,\n    %igx-list__item-line-title {\n        @include igx-type-style($type-scale, $title) {\n            margin: 0;\n        }\n    }\n\n    %igx-list__item-line-subtitle {\n        @include igx-type-style($type-scale, $subtitle) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navbar background color.\n/// @param {Color} $text-color [null] - The navbar text color.\n/// @param {box-shadow} $shadow [null] - The shadow of the navbar.\n/// @param {Color} $idle-icon-color [null] - The navbar idle icon color.\n/// @param {Color} $hover-icon-color [null] - The navbar hover icon color.\n/// @param {Bool} $disable-shadow [true] - Sets the navbar shadow visibility.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n///\n/// @example scss Change the background color\n///   $my-navbar-theme: igx-navbar-theme($background: green);\n///   // Pass the theme to the igx-navbar component mixin\n///   @include igx-navbar($my-navbar-theme);\n@function igx-navbar-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n    $idle-icon-color: null,\n    $hover-icon-color: null,\n    $disable-shadow: false\n) {\n    $name: 'igx-navbar';\n    $navbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $navbar-schema: map.get($schema, $name);\n    } @else {\n        $navbar-schema: $schema;\n    }\n\n    $theme: apply-palette($navbar-schema, $palette);\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($idle-icon-color) and $background {\n        $idle-icon-color: text-contrast($background);\n    }\n\n    @if not($hover-icon-color) and $background {\n        $hover-icon-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($navbar-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @if $disable-shadow {\n        $shadow: none;\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        text-color: $text-color,\n        idle-icon-color: $idle-icon-color,\n        hover-icon-color: $hover-icon-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires var-get\n@mixin igx-navbar($theme) {\n    @include igx-css-vars($theme);\n\n    $navbar-padding: rem(16px);\n    $navbar-title-fz: rem(18px, 16px);\n    $navbar-title-lh: rem(18px, 16px);\n    $navbar-title-margin: 0;\n    $left: if-ltr(left, right);\n\n    %igx-navbar-display {\n        display: flex;\n        position: relative;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n        min-height: 56px;\n        max-height: 128px;\n        padding: $navbar-padding;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'text-color');\n        box-shadow: var-get($theme, 'shadow');\n        z-index: 4;\n        overflow: hidden;\n    }\n\n    %igx-navbar-part {\n        display: flex;\n        align-items: center;\n    }\n\n    %igx-navbar-title {\n        @include line-clamp(4, true, true);\n        margin: $navbar-title-margin;\n        flex-grow: 1;\n        user-select: text;\n        display: flex;\n        flex-direction: row\n    }\n\n    %igx-navbar-bundle {\n        @extend %igx-navbar-part;\n        user-select: none;\n\n        > * + * {\n            margin-#{$left}: rem(16px);\n        }\n    }\n\n    %igx-navbar-icon-display {\n        > igx-icon {\n            cursor: pointer;\n            color: var-get($theme, 'idle-icon-color');\n            transition: color .15s $ease-out-quad;\n\n            &:hover {\n                color: var-get($theme, 'hover-icon-color');\n            }\n        }\n    }\n\n    %igx-navbar-left {\n        @extend %igx-navbar-bundle;\n        @extend %igx-navbar-icon-display;\n        flex-grow: 1;\n    }\n\n    %igx-navbar-right {\n        @extend %igx-navbar-bundle;\n        @extend %igx-navbar-icon-display;\n    }\n\n    igx-navbar-action,\n    [igxNavbarAction] {\n        @extend %igx-navbar-part;\n    }\n\n    igx-navbar-title,\n    [igxNavbarTitle] {\n        @extend %igx-navbar-part;\n        @extend %igx-navbar-title !optional;\n    }\n}\n\n/// Adds typography styles for the igx-navbar component.\n/// Uses the 'body-1', 'caption'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'h6')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navbar-typography($type-scale, $categories: (title: 'h6')) {\n    $title: map.get($categories, 'title');\n\n    %igx-navbar-title {\n        @include igx-type-style($type-scale, $title);\n        margin-bottom: 0;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The navigation drawer background color.\n/// @param {Color} $border-color [null] - The navigation drawer right border color.\n/// @param {Color} $item-header-text-color [null] - The header's idle text color.\n/// @param {Color} $item-text-color [null] - The item's idle text color.\n/// @param {Color} $item-icon-color [null] - The item's icon color.\n/// @param {Color} $item-active-text-color [null] - The item's active text color.\n/// @param {Color} $item-active-background [null] - The item's active background color.\n/// @param {Color} $item-active-icon-color [null] - The item's icon active color.\n/// @param {Color} $item-hover-background [null] - The item's hover background color.\n/// @param {Color} $item-hover-text-color [null] - The item's hover text color.\n/// @param {Color} $item-hover-icon-color [null] - The item's hover icon color.\n/// @param {Color} $shadow [null] - Sets a custom shadow to be used by the drawer.\n/// @param {border-radius} $border-radius [null] - The border radius used for the navdrawer.\n/// @param {border-radius} $item-border-radius [null] - The border radius used for the navdrawer item.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Change the background and item colors\n///   $navdrawer-theme: igx-navdrawer-theme(\n///     $background: #2d313a,\n///     $item-active-background: #ecc256,\n///     $item-icon-color: #ecc256\n///   );\n///   // Pass the theme to the igx-navdrawer component mixin\n///   @include igx-navdrawer($navdrawer-theme);\n@function igx-navdrawer-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $item-border-radius: null,\n\n    $background: null,\n    $border-color: null,\n\n    $item-header-text-color: null,\n    $item-text-color: null,\n    $item-icon-color: null,\n\n    $item-active-text-color: null,\n    $item-active-background: null,\n    $item-active-icon-color:null,\n\n    $item-hover-background: null,\n    $item-hover-text-color: null,\n    $item-hover-icon-color: null,\n    $shadow: null\n) {\n    $name: 'igx-nav-drawer';\n    $navdrawer-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $navdrawer-schema: map.get($schema, $name);\n    } @else {\n        $navdrawer-schema: $schema;\n    }\n\n    $theme: apply-palette($navdrawer-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($navdrawer-schema, 'border-radius')), 0, 36px\n    );\n\n    $item-border-radius: round-borders(\n        if($item-border-radius, $item-border-radius, map.get($navdrawer-schema, 'item-border-radius')), 0, 24px\n    );\n\n    @if not($item-header-text-color) and $background {\n        $item-header-text-color: text-contrast($background);\n    }\n\n    @if not($item-text-color) and $background {\n        $item-text-color: text-contrast($background);\n    }\n\n    @if not($item-icon-color) and $background {\n        $item-icon-color: text-contrast($background);\n    }\n\n    @if not($item-active-background) and $background {\n        @if meta.type-of($background) == 'color' {\n            $item-active-background: rgba(text-contrast($background), .24);\n        }\n    }\n\n    @if not($item-active-text-color) and $item-active-background {\n        $item-active-text-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-hover-background) and $background {\n        @if meta.type-of($background) == 'color' {\n            $item-hover-background: rgba(text-contrast($background), .08);\n        }\n    }\n\n    @if not($item-hover-text-color) and $background {\n        $item-hover-text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($navdrawer-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        item-border-radius: $item-border-radius,\n        background: $background,\n        border-color: $border-color,\n        item-text-color:$item-text-color,\n        item-active-text-color: $item-active-text-color,\n        item-active-background: $item-active-background,\n        item-hover-background: $item-hover-background,\n        item-hover-text-color:$item-hover-text-color,\n        item-header-text-color:$item-header-text-color,\n        item-icon-color:$item-icon-color,\n        item-active-icon-color:$item-active-icon-color,\n        item-hover-icon-color: $item-hover-icon-color,\n        shadow: $shadow,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-navdrawer($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $drawer-icon-size: rem(24px);\n    $drawer-item-margin: rem(8px);\n    $text-side-padding: rem(8px);\n    $drawer-item-min-h: auto;\n    $drawer-item-max-h: rem(48px);\n    $drawer-item-min-w: rem(32px);\n\n    $variant: map.get($theme, variant);\n\n\n    %navdrawer-display {\n        transition: flex-basis;\n        transition-duration: .3s;\n        transition-timing-function: $ease-out-quad;\n        flex-shrink: 0;\n    }\n\n    %aside {\n        position: fixed;\n        height: 100%;\n        max-width: 90%;\n        min-height: 100%;\n        overflow-x: hidden;\n        background: var-get($theme, 'background');\n        top: 0;\n        bottom: 0;\n        #{$left}: 0;\n        z-index: 999;\n        transition: width, transform;\n        transition-timing-function: $ease-out-quad, $ease-out-quad;\n        box-shadow: var-get($theme, 'shadow');\n        @if $variant != 'indigo-design' {\n            border-#{$right}: 1px solid var-get($theme, 'border-color');\n        }\n        border-radius: var-get($theme, 'border-radius');\n    }\n\n    %aside-panning {\n        overflow-x: hidden;\n        transition: none;\n    }\n\n    %aside--pinned {\n        position: relative;\n        max-width: 100%;\n        box-shadow: none;\n        z-index: 0;\n    }\n\n    %aside--collapsed--right {\n        transform: translate3d(300px, 0, 0);\n        box-shadow: none;\n    }\n\n    %igx-nav-drawer__aside--collapsed {\n        transform: none;\n        width: 0;\n        overflow: hidden;\n        border: none;\n    }\n\n    %aside--collapsed {\n        @include if-ltr() {\n            transform: translate3d(-300px, 0, 0);\n        }\n\n        @include if-rtl() {\n            transform: translate3d(300px, 0, 0);\n        }\n\n        box-shadow: none;\n    }\n\n    %aside--right {\n        left: auto;\n        right: 0;\n        border-#{$right}: none;\n        border-#{$left}: 1px solid var-get($theme, 'border-color');\n    }\n\n    %aside--mini {\n        width: rem(60px);\n        transition-duration: .2s, .2s;\n\n        %item {\n            justify-content: center;\n            @if $variant == 'indigo-design' {\n                max-width: rem(32px);\n                // important is needed to override the typography margins\n                margin: rem(14px) auto !important;\n\n                igx-icon {\n                    margin-#{$left}: 0;\n                }\n            }\n        }\n    }\n\n    %aside--normal {\n        width: rem(242px);\n        transition-duration: .3s, .3s;\n    }\n\n    %overlay {\n        opacity: 1;\n        background: igx-color(map.get($theme, 'palette'), 'grays', 500, .54);\n        transition: opacity, visibility;\n        transition-duration: .25s, .25s;\n        transition-timing-function: ease-in, step-start;\n        transition-delay: 0s, 0s;\n        position: absolute;\n        #{$left}: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        visibility: visible;\n        z-index: 999;\n    }\n\n    %overlay-panning {\n        transform: translate3d(0, 0, 0);\n        transition: none;\n    }\n\n    %overlay--hidden {\n        transition-timing-function: ease-in-out, step-end;\n        visibility: hidden;\n        opacity: 0;\n    }\n\n    %overlay-panning--hidden {\n        /* must be visible during pan.. */\n        visibility: visible;\n    }\n\n    %item {\n        position: relative;\n        display: flex;\n        align-items: center;\n        flex-flow: row nowrap;\n        color: var-get($theme, 'item-text-color');\n        max-height: $drawer-item-max-h;\n        min-width: $drawer-item-min-w;\n\n        @if $variant != 'indigo-design' {\n            // important is needed to override the typography margins\n            margin: $drawer-item-margin !important;\n            padding: rem(12px) rem(8px);\n        } @else {\n            // important is needed to override the typography margins\n            margin: rem(15px) $drawer-item-margin !important;\n            padding: rem(4px);\n        }\n\n        cursor: pointer;\n        user-select: none;\n        outline: transparent;\n        white-space: nowrap;\n        border-radius: var-get($theme, 'item-border-radius');\n        text-decoration: none;\n        width: calc(100% - #{$drawer-item-margin * 2});\n        border: none;\n        justify-content: flex-start;\n\n        > igx-icon + span {\n            @if $variant == 'indigo-design' {\n                margin-#{$left}: calc(32px - #{$text-side-padding});\n            } @else {\n                margin-#{$left}: rem(32px);\n            }\n        }\n\n        span {\n            @if $variant == 'indigo-design' {\n                padding-#{$left}: $text-side-padding;\n            }\n        }\n\n        igx-icon {\n            color: var-get($theme, 'item-icon-color');\n            @if $variant == 'indigo-design' {\n                margin-#{$left}: rem(4px);\n            }\n        }\n\n        // Need this to override the igx-buttons\n        &[igxButton] {\n            background: transparent;\n            border: none;\n            box-shadow: none;\n\n            igx-icon {\n                width: $drawer-icon-size;\n                height: $drawer-icon-size;\n                font-size: $drawer-icon-size;\n                margin: 0;\n            }\n\n            &:hover,\n            &:focus {\n                box-shadow: none;\n                border: none;\n            }\n        }\n\n        &%igx-button--fab {\n            min-height: $drawer-item-min-h;\n        }\n\n        &%igx-button--icon {\n            height: auto;\n            transition: none;\n        }\n\n        &:hover,\n        &:focus {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-text-color');\n            box-shadow: none;\n\n            igx-icon {\n                color: var-get($theme, 'item-hover-icon-color');\n            }\n        }\n    }\n\n    %item--active {\n        // should be app primary color\n        color: var-get($theme, 'item-active-text-color');\n        background: var-get($theme, 'item-active-background');\n\n        igx-icon {\n            color: var-get($theme, 'item-active-icon-color');\n        }\n\n        // Need this to override the igx-buttons\n        &[igxButton] {\n            box-shadow: none;\n\n            igx-icon {\n                width: $drawer-icon-size;\n                height: $drawer-icon-size;\n                font-size: $drawer-icon-size;\n                margin: 0;\n            }\n\n            &:hover,\n            &:focus {\n                box-shadow: none;\n                border: none;\n            }\n        }\n\n        &:focus,\n        &:hover {\n            color: var-get($theme, 'item-active-text-color');\n            background: var-get($theme, 'item-active-background');\n\n            igx-icon {\n                color: var-get($theme, 'item-active-icon-color');\n            }\n        }\n    }\n\n    %item--header {\n        display: block;\n        padding: rem(12px) rem(16px);\n        white-space: nowrap;\n        color: var-get($theme, 'item-header-text-color');\n    }\n\n    %style-dummy {\n        height: 0;\n        background: none;\n        box-shadow: none;\n        transition: none;\n        visibility: hidden;\n    }\n\n    %disable-animation {\n        transition-duration: 0s;\n    }\n}\n\n/// Adds typography styles for the igx-navdrawer component.\n/// Uses the 'subtitle-1', 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(item: 'subtitle-2', header: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-navdrawer-typography(\n    $type-scale,\n    $categories: (\n        item: 'subtitle-2',\n        header: 'subtitle-1'\n    )\n) {\n    $item: map.get($categories, 'item');\n    $header: map.get($categories, 'header');\n\n    %item {\n        @include igx-type-style($type-scale, $item);\n    }\n\n    %item--header {\n        @include igx-type-style($type-scale, $header) {\n            margin: 0;\n        }\n    }\n}\n","////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @type Timing Function\n$ease-in-quad: cubic-bezier(.55, .085, .68, .53);\n/// @type Timing Function\n$ease-in-cubic: cubic-bezier(.55, .55, .675, .19);\n/// @type Timing Function\n$ease-in-quart: cubic-bezier(.895, .03, .685, .22);\n/// @type Timing Function\n$ease-in-quint: cubic-bezier(.755, .05, .855, .06);\n/// @type Timing Function\n$ease-in-sine: cubic-bezier(.47, 0, .745, .715);\n/// @type Timing Function\n$ease-in-expo: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-circ: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-in-back: cubic-bezier(.95, .05, .795, .035);\n/// @type Timing Function\n$ease-out-quad: cubic-bezier(.25, .46, .45, .94);\n/// @type Timing Function\n$ease-out-cubic: cubic-bezier(.215, .61, .355, 1);\n/// @type Timing Function\n$ease-out-quart: cubic-bezier(.165, .84, .44, 1);\n/// @type Timing Function\n$ease-out-quint: cubic-bezier(.23, 1, .32, 1);\n/// @type Timing Function\n$ease-out-sine: cubic-bezier(.39, .575, .565, 1);\n/// @type Timing Function\n$ease-out-expo: cubic-bezier(.19, 1, .22, 1);\n/// @type Timing Function\n$ease-out-circ: cubic-bezier(.075, .82, .165, 1);\n/// @type Timing Function\n$ease-out-back: cubic-bezier(.175, .885, .32, 1.275);\n/// @type Timing Function\n$ease-in-out-quad: cubic-bezier(.455, .03, .515, .955);\n/// @type Timing Function\n$ease-in-out-cubic: cubic-bezier(.645, .045, .355, 1);\n/// @type Timing Function\n$ease-in-out-quart: cubic-bezier(.77, 0, .175, 1);\n/// @type Timing Function\n$ease-in-out-quint: .5s cubic-bezier(.86, 0, .07, 1);\n/// @type Timing Function\n$ease-in-out-sine: cubic-bezier(.445, .05, .55, .95);\n/// @type Timing Function\n$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);\n/// @type Timing Function\n$ease-in-out-circ: cubic-bezier(.785, .135, .15, .86);\n/// @type Timing Function\n$ease-in-out-back: cubic-bezier(.68, -.55, .265, 1.55);\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background-color [null] - The background color used for modal overlays.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the background color\n///   $my-overlay-theme: igx-overlay-theme($background-color: rgba(yellow, .74));\n///   // Pass the theme to the igx-overlay component mixin\n///   igx-overlay($my-overlay-theme);\n///\n@function igx-overlay-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $background-color: null\n) {\n    $name: 'igx-overlay';\n    $selector: '.igx-overlay__wrapper--modal, .igx-overlay__content--modal';\n    $overlay-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $overlay-schema: map.get($schema, $name);\n    } @else {\n        $overlay-schema: $schema;\n    }\n\n    $theme: apply-palette($overlay-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        background-color: $background-color,\n    ));\n}\n\n///\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n///\n@mixin igx-overlay($theme) {\n    @include igx-css-vars($theme);\n\n    %overlay-display {\n        width: 0;\n        height: 0;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper {\n        position: fixed;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        background: transparent;\n        transition: background .25s $ease-in-out-quad;\n        pointer-events: none;\n        z-index: 10005;\n        box-sizing: content-box;\n    }\n\n    %overlay-wrapper--modal {\n        background: var-get($theme, 'background-color');\n        pointer-events: initial;\n    }\n\n    %overlay-wrapper--flex {\n        display: flex;\n    }\n\n    %overlay-wrapper--flex-container {\n        display: flex;\n        position: absolute;\n    }\n\n    %overlay-content {\n        position: absolute;\n        pointer-events: all;\n        box-sizing: content-box;\n    }\n\n    %overlay-content--modal {\n        pointer-events: initial;\n    }\n\n    %overlay-content--elastic {\n        overflow: auto;\n    }\n\n    %overlay-content--relative {\n        position: relative;\n    }\n\n    %igx-toggle--hidden {\n        display: none !important;\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// Grid Paging Theme\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $text-color [currentColor] - The text color.\n/// @param {Color} $background-color [rgba(0, 0, 0, .04)] - The background color of the paging panel.\n/// @param {Color} $border-color [rgba(0, 0, 0, .26)] - The border color of the paging panel.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the stripes color\n///   $my-paginator-theme: igx-paginator-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-paginator component mixin\n///   @include igx-paginator($my-paginator-theme);\n@function igx-paginator-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $text-color: null,\n    $background-color: null,\n    $border-color: null\n) {\n    $name: 'igx-paginator';\n    $grid-paginator-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $grid-paginator-schema: map.get($schema, $name);\n    } @else {\n        $grid-paginator-schema: $schema;\n    }\n\n    $theme: apply-palette($grid-paginator-schema, $palette);\n\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        text-color: $text-color,\n        background-color: $background-color,\n        border-color: $border-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-paginator($theme) {\n    @include igx-css-vars($theme);\n\n    $paginator-padding: (\n        comfortable: 0 rem(24px),\n        cosy: 0 rem(16px),\n        compact: 0 rem(12px)\n    );\n\n    $paginator-height: (\n        comfortable: rem(56px),\n        cosy: rem(48px),\n        compact: rem(44px)\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %igx-paginator {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background-color');\n        grid-row: 7;\n        font-size: 12px;\n        border-top: 1px solid var-get($theme, 'border-color');\n        z-index: 1;\n        padding: map.get($paginator-padding, 'comfortable');\n        height: map.get($paginator-height, 'comfortable');\n        width: 100%;\n\n        &:empty {\n            padding: 0;\n        }\n    }\n\n    %igx-paginator--cosy {\n        padding: map.get($paginator-padding, 'cosy');\n        height: map.get($paginator-height, 'cosy');\n    }\n\n    %igx-paginator--compact {\n        padding: map.get($paginator-padding, 'compact');\n        height: map.get($paginator-height, 'compact');\n    }\n\n    %igx-paginator-content {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        width: 100%;\n    }\n\n    %igx-page-size {\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex: 1;\n    }\n\n    %igx-page-size__label {\n        margin-#{$right}: 8px;\n        @include ellipsis();\n    }\n\n    %igx-page-size__select {\n        display: flex;\n        max-width: 90px;\n        min-width: 80px;\n    }\n\n    %igx-page-nav {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        flex: 1;\n\n        > * {\n            margin-#{$left}: rem(8px);\n        }\n\n        @include if-rtl() {\n            igx-icon {\n                transform: scaleX(-1);\n            }\n        }\n    }\n\n    %igx-page-nav__text {\n        display: flex;\n    }\n}\n","@use '../../utilities' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin rotate-center {\n    @include keyframes(rotate-center) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-bl {\n    @include keyframes(rotate-bl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: bottom left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-center {\n    @include keyframes(rotate-vert-center) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-br {\n    @include keyframes(rotate-diagonal-br) {\n        0% {\n            transform: rotate3d(-1, 1, 0, 0deg);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate3d(-1, 1, 0, -360deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-top {\n    @include keyframes(rotate-top) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-left {\n    @include keyframes(rotate-left) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-vert-left {\n    @include keyframes(rotate-vert-left) {\n        0% {\n            transform: rotateY(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotateY(360deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-diagonal-bl {\n    @include keyframes(rotate-diagonal-bl) {\n        0% {\n            transform: rotate3d(1, 1, 0, 0deg);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate3d(1, 1, 0, 360deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tr {\n    @include keyframes(rotate-tr) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-tl {\n    @include keyframes(rotate-tl) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top left;\n        }\n\n        100% {\n            transform: rotate(360deg);\n            transform-origin: top left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up {\n    @include keyframes(rotate-scale-up) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(2) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-1 {\n    @include keyframes(rotate-scale-up-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down {\n    @include keyframes(rotate-scale-down) {\n        0% {\n            transform: scale(1) rotateZ(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateZ(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateZ(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-1 {\n    @include keyframes(rotate-scale-down-diag-1) {\n        0% {\n            transform: scale(1) rotate3d(1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(1, 1, 0, -180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(1, 1, 0, -360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-hor {\n    @include keyframes(rotate-scale-up-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(2) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-diag-2 {\n    @include keyframes(rotate-scale-up-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(2) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-hor {\n    @include keyframes(rotate-scale-down-hor) {\n        0% {\n            transform: scale(1) rotateX(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateX(-180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateX(-360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-diag-2 {\n    @include keyframes(rotate-scale-down-diag-2) {\n        0% {\n            transform: scale(1) rotate3d(-1, 1, 0, 0deg);\n        }\n\n        50% {\n            transform: scale(.5) rotate3d(-1, 1, 0, 180deg);\n        }\n\n        100% {\n            transform: scale(1) rotate3d(-1, 1, 0, 360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-up-ver {\n    @include keyframes(rotate-scale-up-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(2) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-scale-down-ver {\n    @include keyframes(rotate-scale-down-ver) {\n        0% {\n            transform: scale(1) rotateY(0);\n        }\n\n        50% {\n            transform: scale(.5) rotateY(180deg);\n        }\n\n        100% {\n            transform: scale(1) rotateY(360deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-cw {\n    @include keyframes(rotate-90-cw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-cw {\n    @include keyframes(rotate-90-right-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-cw {\n    @include keyframes(rotate-90-bl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-fwd {\n    @include keyframes(rotate-90-horizontal-fwd) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-ccw {\n    @include keyframes(rotate-90-ccw) {\n        0% {\n            transform: rotate(0);\n        }\n\n        100% {\n            transform: rotate(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-right-ccw {\n    @include keyframes(rotate-90-right-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bl-ccw {\n    @include keyframes(rotate-90-bl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-horizontal-bck {\n    @include keyframes(rotate-90-horizontal-bck) {\n        0% {\n            transform: rotateX(0);\n        }\n\n        100% {\n            transform: rotateX(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-cw {\n    @include keyframes(rotate-90-top-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-cw {\n    @include keyframes(rotate-90-br-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-cw {\n    @include keyframes(rotate-90-left-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-fwd {\n    @include keyframes(rotate-90-vertical-fwd) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-top-ccw {\n    @include keyframes(rotate-90-top-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-br-ccw {\n    @include keyframes(rotate-90-br-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 100% 100%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 100% 100%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-left-ccw {\n    @include keyframes(rotate-90-left-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: left;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: left;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-vertical-bck {\n    @include keyframes(rotate-90-vertical-bck) {\n        0% {\n            transform: rotateY(0);\n        }\n\n        100% {\n            transform: rotateY(-90deg);\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-cw {\n    @include keyframes(rotate-90-tr-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-cw {\n    @include keyframes(rotate-90-bottom-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-cw {\n    @include keyframes(rotate-90-tl-cw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tr-ccw {\n    @include keyframes(rotate-90-tr-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: top right;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: top right;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-bottom-ccw {\n    @include keyframes(rotate-90-bottom-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: bottom;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: bottom;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin rotate-90-tl-ccw {\n    @include keyframes(rotate-90-tl-ccw) {\n        0% {\n            transform: rotate(0);\n            transform-origin: 0% 0%;\n        }\n\n        100% {\n            transform: rotate(-90deg);\n            transform-origin: 0% 0%;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:list';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $track-color [null] - The main track color.\n/// @param {Color} $fill-color-default [null] - The track default fill color.\n/// @param {Color} $fill-color-danger [null] - The track danger fill color.\n/// @param {Color} $fill-color-warning [null] - The track warning fill color.\n/// @param {Color} $fill-color-info [null] - The track info fill color.\n/// @param {Color} $fill-color-success [null] - The track success fill color.\n/// @param {Color} $stripes-color [null] - The track stripes color.\n/// @param {Color} $text-color [null] - The track value text color.\n/// @param {Number} $track-border-radius [null] - The border radius fraction, between 0 - 8 to be used fot the progress bar track\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires round-borders\n///\n/// @example scss Change the stripes color\n///   $my-progress-linear-theme: igx-progress-linear-theme(\n///     $stripes-color: orange\n///   );\n///   // Pass the theme to the igx-progress-linear component mixin\n///   @include igx-progress-linear($my-progress-linear-theme);\n@function igx-progress-linear-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $track-color: null,\n    $fill-color-default: null,\n    $fill-color-danger: null,\n    $fill-color-warning: null,\n    $fill-color-info: null,\n    $fill-color-success: null,\n    $stripes-color: null,\n    $text-color: null,\n    $track-border-radius: null,\n) {\n    $name: 'igx-linear-bar';\n    $linear-bar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $linear-bar-schema: map.get($schema, $name);\n    } @else {\n        $linear-bar-schema: $schema;\n    }\n\n    $theme: apply-palette($linear-bar-schema, $palette);\n\n    $track-border-radius: round-borders(\n        if($track-border-radius, $track-border-radius, map.get($linear-bar-schema, 'track-border-radius')), 0, 8px\n    );\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        track-color: $track-color,\n        fill-color-default: $fill-color-default,\n        fill-color-danger: $fill-color-danger,\n        fill-color-warning: $fill-color-warning,\n        fill-color-info: $fill-color-info,\n        fill-color-success: $fill-color-success,\n        stripes-color: $stripes-color,\n        text-color: $text-color,\n        track-border-radius: $track-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires var-get\n@mixin igx-progress-linear($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $bar-height: map.get((\n        material: rem(4px),\n        fluent: rem(4px),\n        bootstrap: rem(16px),\n        indigo-design: rem(4px),\n    ), $variant);\n\n    $gradient-orientation: map.get((\n        material: -45deg,\n        fluent: -45deg,\n        bootstrap: 45deg,\n        indigo-design: 45deg,\n    ), $variant);\n\n    $background-size: map.get((\n        material: rem(40px) rem(40px),\n        fluent: rem(40px) rem(40px),\n        bootstrap: rem(16px) rem(16px),\n        indigo-design: rem(20px),\n    ), $variant);\n\n    $stripe-color: var-get($theme, 'stripes-color');\n    $value-fs: em(14px, 16px);\n    $value-fw: 600;\n    $value-margin: 0;\n    $animation-direction: if-ltr(normal, reverse);\n\n    %linear-display {\n        position: relative;\n        display: flex;\n        width: 100%;\n        flex: 1 1 100%;\n        flex-direction: column;\n    }\n\n    %linear-bar {\n        position: relative;\n        width: inherit;\n        height: $bar-height;\n        background: var-get($theme, 'track-color');\n        overflow: hidden;\n        border-radius: var-get($theme, 'track-border-radius');\n        z-index: 0;\n    }\n\n    %linear-indicator {\n        width: 100%;\n        position: relative;\n        height: inherit;\n    }\n\n    %linear-indicator--striped {\n        @if $variant != 'indigo-design' {\n            background-image: linear-gradient(\n                $gradient-orientation,\n                $stripe-color 25%,\n                transparent 25%,\n                transparent 50%,\n                $stripe-color 50%,\n                $stripe-color 75%,\n                transparent 75%,\n                transparent\n            );\n        } @else {\n            background-image: linear-gradient(\n                $gradient-orientation,\n                transparent 25%,\n                $stripe-color 25%,\n                $stripe-color 75%,\n                transparent 75%,\n            );\n        }\n\n        background-size: $background-size;\n    }\n\n    %linear-indicator--indeterminate {\n        @include animation(indeterminate-bar 2s cubic-bezier(0, .085, .68, .53) #{$animation-direction} infinite);\n\n        width: 100% !important;\n\n        &::before {\n            position: absolute;\n            content: '';\n            top: 0;\n            left: -200%;\n            width: 100%;\n            height: inherit;\n            background-color: inherit;\n            transform-origin: top right;\n        }\n    }\n\n    %linear-indicator--default {\n        background: var-get($theme, 'fill-color-default')\n    }\n\n    %linear-indicator--danger {\n        background-color: var-get($theme, 'fill-color-danger');\n    }\n\n    %linear-indicator--warning {\n        background-color: var-get($theme, 'fill-color-warning');\n    }\n\n    %linear-indicator--info {\n        background-color: var-get($theme, 'fill-color-info');\n    }\n\n    %linear-indicator--success {\n        background-color: var-get($theme, 'fill-color-success');\n    }\n\n\n    %linear-value {\n        margin: $value-margin;\n        color: var-get($theme, 'text-color');\n        font-size: $value-fs;\n        font-weight: $value-fw;\n    }\n\n    %linear-value--start {\n        align-self: flex-start;\n    }\n\n    %linear-value--center {\n        align-self: center;\n    }\n\n    %linear-value--end {\n        align-self: flex-end;\n    }\n\n    %linear-value--top {\n        order: -1;\n    }\n\n    %linear-value--hidden {\n        display: none;\n    }\n\n    @include keyframes('indeterminate-bar') {\n        0% {\n            transform: scaleX(0) translateX(-100%);\n            transform-origin: left;\n        }\n\n        50% {\n            transform: scaleX(1) translateX(50%);\n            transform-origin: right;\n        }\n\n        100% {\n            transform: scaleX(0) translateX(200%);\n            transform-origin: right;\n        }\n    }\n}\n\n/// @param {Map} $palette [$default-palette] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $base-circle-color [null] - The base circle fill color.\n/// @param {Color | List<Color>} $progress-circle-color [null] - The progress circle fill color.\n/// @param {Color} $text-color [null] - The value text color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Change the circle progress color\n///   $my-progress-circular-theme: igx-progress-circular-theme(\n///     $progress-circle-color: purple\n///   );\n///   // Pass the theme to the igx-progress-circular component mixin\n///   @include igx-progress-circular($my-progress-circle-theme);\n@function igx-progress-circular-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $base-circle-color: null,\n    $progress-circle-color: null,\n\n    $text-color: null\n) {\n    $name: 'igx-circular-bar';\n    $circular-bar-schema: ();\n\n\n    @if map.has-key($schema, $name) {\n        $circular-bar-schema: map.get($schema, $name);\n    } @else {\n        $circular-bar-schema: $schema;\n    }\n\n    $theme: apply-palette($circular-bar-schema, $palette);\n\n    $progress-circle-color-start: map.get($theme, 'progress-circle-color');\n    $progress-circle-color-end: map.get($theme, 'progress-circle-color');\n\n    @if meta.type-of($progress-circle-color) == 'color' {\n        $progress-circle-color-start: $progress-circle-color;\n        $progress-circle-color-end: $progress-circle-color;\n    }\n\n    @if list.length($progress-circle-color) == 2 {\n        $progress-circle-color-start: list.nth($progress-circle-color, 1);\n        $progress-circle-color-end: list.nth($progress-circle-color, 2);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        base-circle-color: $base-circle-color,\n        progress-circle-color-start: $progress-circle-color-start,\n        progress-circle-color-end: $progress-circle-color-end,\n        text-color: $text-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires {mixin} rotate-center\n/// @requires var-get\n@mixin igx-progress-circular($theme) {\n    // Include rotate animation\n    @include rotate-center();\n\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $stroke-width: map.get((\n        material: rem(4px),\n        fluent: rem(4px),\n        bootstrap: rem(8px),\n        indigo-design: rem(6px),\n    ), $variant);\n\n    $palette: map.get($theme, 'palette');\n    $circular-value-fs: rem(32px, 16px);\n    $circular-value-fw: 600;\n    $animation-direction: if-ltr(normal, reverse);\n\n    %circular-display {\n        display: inline-flex;\n        flex: 1 1 auto;\n        width: rem(32px);\n        height: rem(32px);\n\n        svg {\n            width: 100%;\n            height: 100%;\n            min-width: inherit;\n            min-height: inherit;\n        }\n    }\n\n    %circular-display--indeterminate {\n        @include animation(rotate-center 3s linear #{$animation-direction} infinite);\n        transform-origin: 50% 50%;\n    }\n\n    %circular-inner {\n        stroke-width: $stroke-width;\n        fill: transparent;\n        stroke: var-get($theme, 'base-circle-color');\n    }\n\n    %circular-outer {\n        fill: transparent;\n        stroke-width: $stroke-width;\n        stroke-dashoffset: 289;\n        stroke-dasharray: 289;\n        transform-origin: 50% 50%;\n        transform: rotate(-90deg);\n\n        @if $variant == 'indigo-design' {\n            stroke-linecap: round;\n        }\n    }\n\n    %circular-outer--indeterminate {\n        stroke-dasharray: 289;\n        @include animation(indeterminate-accordion 1.5s cubic-bezier(0, .085, .68, .53) #{$animation-direction} infinite);\n    }\n\n    %circular-text {\n        font-size: $circular-value-fs;\n        font-weight: $circular-value-fw;\n        fill: var-get($theme, 'text-color');\n    }\n\n    %circular-text--hidden {\n        visibility: hidden;\n    }\n\n    %circular-gradient-start {\n        stop-color: var-get($theme, 'progress-circle-color-start');\n    }\n\n    %circular-gradient-end {\n        stop-color: var-get($theme, 'progress-circle-color-end');\n    }\n\n    @include keyframes('indeterminate-accordion') {\n        from {\n            stroke-dashoffset: 578;\n            stroke-dasharray: 259;\n        }\n\n        to {\n            stroke-dashoffset: 120;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../typography/base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n@use 'sass:map';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $label-color [null]- The text color used for the label text.\n/// @param {Color} $empty-color [null] - The unchecked border color.\n/// @param {Color} $fill-color [null] - The checked border and dot colors.\n/// @param {Color} $disabled-color [null] - The disabled border and dot colors.\n/// @param {Color} $hover-color [null] - The border and dot colors on hover.\n/// @param {Color} $fill-color-hover [null] - The checked border and dot colors on hover.\n/// @param {Color} $fill-hover-border-color [null] - The checked dot border color on hover.\n/// @param {Color} $focus-outline-color [null] - TThe focus outlined color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// Set light to true when the surrounding area is dark.\n/// @example scss Change the checked dot and border colors\n///   $my-radio-theme: igx-radio-theme($fill-color: magenta);\n///   // Pass the theme to the igx-radio component mixin\n///   @include igx-radio($my-radio-theme);\n@function igx-radio-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $label-color: null,\n    $empty-color: null,\n    $fill-color: null,\n    $fill-hover-border-color:null,\n    $focus-outline-color: null,\n    $disabled-color: null,\n    $hover-color: null,\n    $fill-color-hover: null,\n) {\n    $name: 'igx-radio';\n    $radio-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $radio-schema: map.get($schema, $name);\n    } @else {\n        $radio-schema: $schema;\n    }\n\n    $theme: apply-palette($radio-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        label-color: $label-color,\n        empty-color: $empty-color,\n        fill-color: $fill-color,\n        fill-hover-border-color: $fill-hover-border-color,\n        disabled-color: $disabled-color,\n        hover-color: $hover-color,\n        fill-color-hover: $fill-color-hover,\n        focus-outline-color: $focus-outline-color\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires em\n/// @requires var-get\n@mixin igx-radio($theme) {\n    @include igx-css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $label-margin: em(8px);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'bootstrap';\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $size: map.get((\n        material: em(20px),\n        fluent: em(20px),\n        bootstrap: em(14px),\n        indigo-design: em(20px),\n    ), $variant);\n\n    $scale: map.get((\n        material: scale(.5),\n        fluent: scale(.5),\n        bootstrap: scale(.3),\n        indigo-design: scale(.5),\n    ), $variant);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $border-width: map.get((\n        material: rem(2px),\n        fluent: rem(1px),\n        bootstrap: rem(1px),\n        indigo-design: rem(2px),\n    ), $variant);\n\n    $radio-hover-scale: map.get((\n        material: null,\n        fluent: scale(.5),\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        indigo-design: none,\n    ), $variant);\n\n    $border-style: solid;\n    $border-radius: 50% 50%;\n\n    $transition: all .2s ease-in;\n\n    $ripple-size: em(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $ripple-theme: igx-ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'fill-color')\n    );\n\n    %radio-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        color: var-get($theme, 'label-color');\n    }\n\n    %radio-input {\n        @include hide-default();\n    }\n\n    %radio-display--disabled {\n        pointer-events: none;\n        color: var-get($theme, 'disabled-color');\n        user-select: none;\n    }\n\n    %radio-composite {\n        position: relative;\n        display: inline-block;\n        width: $size;\n        height: $size;\n        min-width: $size;\n        line-height: $size;\n        cursor: pointer;\n        color: var-get($theme, 'label-color');\n\n        user-select: none;\n\n        &::before,\n        &::after {\n            position: absolute;\n            content: '';\n            width: $size;\n            height: $size;\n            left: 0;\n            top: 0;\n            border-radius: $border-radius;\n        }\n\n        &::before {\n            backface-visibility: hidden;\n            transform: scale(0);\n\n            @if $not-bootstrap-theme {\n                transition: $transition;\n            }\n\n            z-index: 1;\n        }\n\n        &::after {\n            border: $border-width $border-style var-get($theme, 'empty-color');\n        }\n    }\n\n    %radio-composite--x {\n        &::before {\n            border: $border-width $border-style var-get($theme, 'fill-color');\n\n            @if $bootstrap-theme {\n                border-color: var-get($theme, 'fill-hover-border-color');\n            }\n\n            background: var-get($theme, 'fill-color-hover');\n            transform: $scale;\n        }\n\n        &::after {\n            border: $border-width $border-style var-get($theme, 'fill-color');\n\n            @if $bootstrap-theme{\n                background: var-get($theme, 'fill-color');\n            }\n        }\n    }\n\n    %igx-radio-hover__composite {\n        &::before {\n            background: var-get($theme, 'fill-color-hover');\n            transform: $radio-hover-scale;\n        }\n    }\n\n    %igx-radio--checked-active__composite {\n        &::before {\n            background: var-get($theme, 'fill-color-hover');\n            border-color: var-get($theme, 'fill-hover-border-color');\n        }\n\n        &::after {\n            @if $bootstrap-theme {\n                border-color: var-get($theme, 'fill-color');\n            } @else {\n                border-color: var-get($theme, 'fill-hover-border-color');\n            }\n        }\n    }\n\n    %radio-composite--disabled {\n        &::after {\n            border: $border-width $border-style var-get($theme, 'disabled-color');\n\n            @if $bootstrap-theme {\n                background: transparent;\n            }\n        }\n    }\n\n    %radio-composite--x--disabled {\n        &::after {\n            border: $border-width $border-style var-get($theme, 'disabled-color');\n        }\n\n        &::before {\n            background: var-get($theme, 'disabled-color');\n            border: $border-width $border-style transparent;\n        }\n    }\n\n    %radio-label {\n        color: currentColor;\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            display: none;\n        }\n    }\n\n    %radio-label--after {\n        margin-#{$left}: $label-margin;\n    }\n\n    %radio-label--before {\n        order: -1;\n        margin-#{$right}: $label-margin;\n    }\n\n    %radio-label--before,\n    %radio-label--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %radio-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        border-radius: $ripple-radius;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %igx-radio--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                left: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 1px var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %radio-composite {\n                border-radius: $border-radius;\n                box-shadow: 0 0 0 2px var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %radio-composite {\n                border-radius: $border-radius;\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-radio--focused-checked {\n        @if $variant == 'indigo-design' {\n            %radio-composite {\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %radio-ripple--focused {\n        background: var-get($theme, 'empty-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %radio-ripple--focused-checked {\n        background: var-get($theme, 'fill-color');\n    }\n\n    %radio-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %radio-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'empty-color');\n        }\n    }\n\n    %radio-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'fill-color');\n        }\n    }\n\n    %radio-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-radio component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-radio-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %radio-label {\n        @include igx-type-style($type-scale, $label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// If only background color is specified, text/icon color will be assigned automatically to a contrasting color.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} $thumb-background [null] - The background color used for the thumb.\n/// @param {Color} $track-background [null] - The background color used for the track.\n/// @param {Number | String} $size [null] - The size of the track.\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n///\n/// @example scss Change the background and track colors\n///   $my-scrollbar-theme: igx-scrollbar-theme($thumb-background: black, $track-background: gray);\n///   // Pass the theme to the igx-scrollbar component mixin\n///   @include igx-scrollbar($my-scrollbar-theme);\n@function igx-scrollbar-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $size: null,\n    $thumb-background: null,\n    $track-background: null,\n) {\n    $name: 'igx-scrollbar';\n    $selector: '.igx-scrollbar';\n    $scrollbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $scrollbar-schema: map.get($schema, $name);\n    } @else {\n        $scrollbar-schema: $schema;\n    }\n\n    $theme: apply-palette($scrollbar-schema, $palette);\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        thumb-background: $thumb-background,\n        track-background: $track-background,\n        size: $size\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-scrollbar($theme) {\n    @include igx-css-vars($theme);\n\n    %scrollbar-display {\n        @if type-of(map.get($theme, 'size') == 'string') {\n            scrollbar-width: var-get($theme, 'size');\n        }\n\n        scrollbar-color: var-get($theme, 'thumb-background') var-get($theme, 'track-background');\n\n        ::-webkit-scrollbar {\n            width: var-get($theme, 'size');\n            height: var-get($theme, 'size');\n            background: var-get($theme, 'track-background');\n        }\n\n        ::-webkit-scrollbar-thumb {\n            background: var-get($theme, 'thumb-background');\n        }\n    }\n\n    @media (hover: none) {\n        %scrollbar-display ::-webkit-scrollbar {\n            width: auto;\n            height: auto;\n        }\n    }\n}\n\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $track-color [null] - The color of the track.\n/// @param {Color} $track-step-color [null] - The color of the track steps.\n/// @param {Color} $thumb-color [null] - The color of the thumb.\n/// @param {Color} $thumb-focus-color [null] - The focus color of the thumb.\n///\n/// @param {Color} $label-background-color [null] - The background color of the bubble label.\n/// @param {Color} $label-text-color [null] - The text color of the bubble label.\n///\n/// @param {Color} $disabled-thumb-color [null] - The thumb color when its disabled.\n/// @param {Color} $base-track-color [null] - The base background color of the track.\n/// @param {Color} $disabled-base-track-color [null] - The base background color of the track when is disabled.\n///\n/// @param {Color} $tick-label-color [null] - The color of the tick label.\n/// @param {Color} $tick-label-color--tall [null] - The color of the tall tick label .\n/// @param {Color} $tick-color [null] - The background-color of the tick.\n/// @param {Color} $tick-color--tall [null] - The background-color of the tall tick.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n///\n/// @example scss Set custom track and thumb on colors\n///   $my-slider-theme: igx-slider-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-slider component mixin\n///   @include igx-slider($my-slider-theme);\n@function igx-slider-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $track-color: null,\n    $track-step-color: null,\n    $thumb-color: null,\n    $thumb-focus-color: null,\n\n    $label-background-color: null,\n    $label-text-color: null,\n\n    $disabled-thumb-color: null,\n    $base-track-color: null,\n    $disabled-base-track-color: null,\n    $thumb-border-color: null,\n    $thumb-disabled-border-color: null,\n    $track-hover-color: null,\n    $thumb-hover-color: null,\n    $base-track-hover-color: null,\n    $tick-label-color: null,\n    $tick-label-color-tall: null,\n    $tick-color: null,\n    $tick-color-tall: null,\n) {\n    $name: 'igx-slider';\n    $slider-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $slider-schema: map.get($schema, $name);\n    } @else {\n        $slider-schema: $schema;\n    }\n\n    $theme: apply-palette($slider-schema, $palette);\n\n    @if not($label-text-color) and $label-background-color {\n        $label-text-color: text-contrast($label-background-color);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        track-color: $track-color,\n        track-step-color: $track-step-color,\n        track-hover-color: $track-hover-color,\n        thumb-color: $thumb-color,\n        thumb-hover-color: $thumb-hover-color,\n        thumb-focus-color: $thumb-focus-color,\n        label-background-color: $label-background-color,\n        label-text-color: $label-text-color,\n        disabled-thumb-color: $disabled-thumb-color,\n        base-track-color: $base-track-color,\n        disabled-base-track-color: $disabled-base-track-color,\n        thumb-border-color: $thumb-border-color,\n        thumb-disabled-border-color: $thumb-disabled-border-color,\n        base-track-hover-color: $base-track-hover-color,\n        tick-label-color: $tick-label-color,\n        tick-label-color-tall: $tick-label-color-tall,\n        tick-color: $tick-color,\n        tick-color-tall: $tick-color-tall,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-slider($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $slider-height: 48px;\n\n    $slider-track-height: map.get((\n        material: 2px,\n        fluent: 4px,\n        bootstrap: 5px,\n        indigo-design: 2px\n    ), $variant);\n\n    $slider-outline-width: map.get((\n        material: 3px,\n        fluent: 0,\n        bootstrap: 3px,\n        indigo-design: 3px\n    ), $variant);\n\n    // Slide ticks\n    $tick-push: rem(4px);\n    $base-tick-height: rem(8px);\n    $tick-height: $base-tick-height;\n    $tick-height--tall: $base-tick-height * 2;\n    $tick-width: rem(2px);\n\n    $thumb-border-width: map.get((\n        material: 0,\n        fluent: 2px,\n        bootstrap: 1px,\n        indigo-design: 0\n    ), $variant);\n\n    // Slider Thumb\n    $slider-thumb-width: 40px;\n    $slider-thumb-height: $slider-thumb-width;\n    $slider-thumb-radius: math.div($slider-thumb-width, 2);\n\n    // Slider Label\n    $slider-label-width: 36px;\n    $slider-label-height: $slider-label-width;\n    $slider-label-radius: math.div($slider-label-width, 2);\n    $slider-label-padding: 0 rem(2px);\n\n    $switch-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none,\n    ), $variant);\n\n    $dot-size: map.get((\n        material: 12px,\n        fluent: 16px,\n        bootstrap: 14px,\n        indigo-design: 14px\n    ), $variant);\n\n    %igx-slider-display {\n        display: flex;\n        position: relative;\n        height: rem($slider-height);\n        flex-grow: 1;\n        align-items: center;\n        transition: all .2s $ease-out-quad;\n\n        &:hover {\n            %igx-slider-track-fill {\n                background: var-get($theme, 'track-hover-color');\n            }\n\n            %igx-slider-track {\n                background: var-get($theme, 'base-track-hover-color');\n            }\n\n            %igx-slider-thumb__dot {\n                &::before {\n                    border-color: var-get($theme, 'track-hover-color');\n                }\n            }\n        }\n    }\n\n    %igx-slider-disabled {\n        &:hover {\n            %igx-slider-track--disabled {\n                background: var-get($theme, 'disabled-base-track-color');\n            }\n\n            %igx-slider-thumb__dot {\n                &::before {\n                    border-color: var-get($theme, 'thumb-disabled-border-color');\n                }\n            }\n        }\n    }\n\n    %igx-slider-thumbs-container {\n        position: absolute;\n        width: 100%;\n        height: 0;\n        cursor: default;\n        z-index: 1;\n        #{$left}: 0;\n    }\n\n    %igx-slider-track {\n        position: relative;\n        width: 100%;\n        height: rem($slider-track-height);\n        background: var-get($theme, 'base-track-color');\n        transition: background .2s $ease-out-quad;\n    }\n\n    %igx-slider-track--disabled {\n        background: var-get($theme, 'disabled-base-track-color');\n    }\n\n    %igx-slider-track-fill {\n        position: absolute;\n        width: 100%;\n        height: inherit;\n        background: var-get($theme, 'track-color');\n        transform-origin: #{$left} center;\n        transform: scaleX(0);\n    }\n\n    %igx-slider-track-fill--disabled {\n        visibility: hidden;\n    }\n\n    %igx-slider__ticks {\n        width: 100%;\n        display: flex;\n        position: absolute;\n        top: $tick-push;\n        justify-content: space-between;\n        z-index: -1;\n\n        &%igx-slider__ticks--top {\n            bottom: $tick-push;\n            top: auto;\n            align-items: flex-end;\n        }\n    }\n\n    %igx-slider__ticks-group {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        position: relative;\n\n        &:first-of-type {\n            margin-#{$left}: rem(-1px);\n        }\n\n        &:last-of-type {\n            margin-#{$left}: rem(-1px);\n        }\n    }\n\n    %igx-slider__ticks-label {\n        color: var-get($theme, 'tick-label-color');\n        position: absolute;\n        top: $tick-height--tall;\n        transform: translate(-50%);\n        line-height: .7;\n        opacity: 1;\n        transition: opacity .2s $ease-in-out-quad;\n\n        @include if-rtl() {\n            left: 100%;\n        }\n    }\n\n    %igx-slider__ticks-tick {\n        background: var-get($theme, 'tick-color');\n        height: $tick-height;\n        width: $tick-width;\n    }\n\n    %igx-slider__ticks--tall {\n        %igx-slider__ticks-label {\n            top: calc(#{$tick-height--tall} + #{$tick-height});\n        }\n    }\n\n    %igx-slider__tick--disabled {\n        background: var-get($theme, 'disabled-base-track-color') !important;\n    }\n\n    %igx-slider__ticks-labels--disabled {\n        color: var-get($theme, 'disabled-base-track-color') !important;\n    }\n\n    %igx-slider__ticks-group--tall {\n        %igx-slider__ticks-tick {\n            height: $tick-height--tall;\n            background: var-get($theme, 'tick-color-tall');\n        }\n\n        %igx-slider__ticks-label {\n            top: calc(#{$tick-height--tall} + #{$tick-height});\n            color: var-get($theme, 'tick-label-color-tall');\n        }\n    }\n\n    %igx-slider__ticks--top {\n        %igx-slider__ticks-label {\n            bottom: calc(#{$tick-height} + #{$tick-height});\n            top: auto;\n        }\n\n        &%igx-slider__ticks--tall {\n            %igx-slider__ticks-label {\n                bottom: calc(#{$tick-height--tall} + #{$tick-height});\n                top: auto;\n            }\n        }\n    }\n\n    %igx-slider__tick-label--hidden {\n        opacity: 0;\n    }\n\n    %igx-slider-track-steps {\n        position: absolute;\n        width: 100%;\n        height: rem($slider-track-height);\n        // TODO Remove after making sure that this does not break anything\n        //background-size: 100% em($slider-track-height);\n        //background-color: var-get($theme, 'track-step-color');\n        //opacity: .85;\n        transition: opacity .2s $ease-out-quad;\n        z-index: 1;\n    }\n\n    %igx-slider-track-steps--disabled {\n        visibility: hidden;\n    }\n\n    %igx-slider__tick-labels--top-bottom {\n        %igx-slider__ticks-group {\n            display: block;\n        }\n\n        %igx-slider__ticks-label {\n            writing-mode: vertical-rl;\n            transform: translate(-50%) rotate(0deg);\n        }\n\n        %igx-slider__ticks--tall {\n            %igx-slider__ticks-label {\n                top: calc(#{$tick-height--tall} + #{rem(2px)});\n            }\n        }\n\n        &%igx-slider__ticks--top {\n            %igx-slider__ticks-label {\n                writing-mode: vertical-rl;\n                transform: translate(-50%) rotate(0deg);\n            }\n\n            %igx-slider__ticks--tall {\n                %igx-slider__ticks-label {\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\n                }\n            }\n        }\n    }\n\n    %igx-slider__tick-labels--bottom-top {\n        %igx-slider__ticks-group {\n            display: block;\n        }\n\n\n        %igx-slider__ticks-label {\n            writing-mode: vertical-rl;\n            transform: translate(-50%) rotate(180deg);\n        }\n\n        &%igx-slider__ticks--top {\n            %igx-slider__ticks-label {\n                writing-mode: vertical-rl;\n                transform: translate(-50%) rotate(180deg);\n            }\n\n            %igx-slider__ticks--tall {\n                %igx-slider__ticks-label {\n                    bottom: calc(#{$tick-height--tall} + #{rem(2px)});\n                }\n            }\n        }\n    }\n\n    %igx-thumb-display {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        width: $slider-thumb-width;\n        height: $slider-thumb-height;\n        outline-style: none;\n        top: -#{rem($slider-thumb-radius)};\n        margin-#{$left}: -#{rem($slider-thumb-radius)};\n\n        &:focus div::after {\n            opacity: .18;\n            /* 32 / 40 */\n            transform: scale(.8);\n        }\n\n        &:focus div::before {\n            box-shadow: 0 0 0 rem($slider-outline-width) var-get($theme, 'thumb-focus-color');\n\n            @if $variant == 'fluent' {\n                border-color: var-get($theme, 'thumb-focus-color') !important;\n            }\n        }\n    }\n\n    %igx-thumb--disabled {\n        &:focus div::before {\n            box-shadow: none;\n\n            @if $variant == 'fluent' {\n                border-color: var-get($theme, 'thumb-disabled-border-color') !important;\n            }\n        }\n\n        &:focus div::after {\n            transform: scale(0);\n        }\n    }\n\n    %igx-label-display {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        height: $slider-thumb-height;\n        outline-style: none;\n        top: -#{rem($slider-thumb-radius)};\n        margin: 0 auto;\n    }\n\n    %igx-slider-thumb-label__container {\n        position: relative;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        flex: 0 0 auto;\n        top: -#{rem($slider-thumb-height - 4px)};\n        #{$left}: -50%;\n        pointer-events: none;\n        min-width: rem($slider-label-width);\n        height: rem($slider-label-height);\n        padding: $slider-label-padding;\n        border-radius: rem($slider-label-radius);\n        margin: 0 auto;\n        line-height: rem(18px);\n        color: var-get($theme, 'label-text-color');\n        background: var-get($theme, 'label-background-color');\n        opacity: 0;\n        border-color: var-get($theme, 'label-background-color') transparent transparent;\n        // transition: opacity .1s $ease-out-quad;\n        z-index: -1;\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            #{$left}: 50%;\n            margin-#{$left}: -#{$slider-label-radius};\n            width: rem($slider-label-width);\n            height: $slider-label-height;\n            border-radius: 0 $slider-label-radius $slider-label-radius;\n            background: inherit;\n            transform: rotate(-135deg);\n            z-index: -1;\n        }\n\n        &::before {\n            content: '';\n            position: absolute;\n            top: rem(40px);\n            #{$left}: calc(50% - 1px);\n            border-#{$left}: 1px solid;\n            border-#{$right}: 1px solid;\n            border-top: rem(14px) solid;\n            border-color: inherit;\n        }\n    }\n\n    %igx-slider-thumb__dot {\n        position: relative;\n        #{$left}: 0;\n        padding: rem(20px);\n        pointer-events: none;\n\n        &:hover::after {\n            opacity: .12;\n            /* 32 / 40 */\n            transform: scale(.8);\n        }\n\n        &::before {\n            position: absolute;\n            content: '';\n            width: rem($dot-size);\n            height: rem($dot-size);\n            #{$left}: #{rem($slider-thumb-radius) - math.div(rem($dot-size), 2)};\n            top: #{rem($slider-thumb-radius) - math.div(rem($dot-size), 2)};\n            background: var-get($theme, 'thumb-color');\n            border: rem($thumb-border-width) solid var-get($theme, 'thumb-border-color');\n            transform: rotate(45deg);\n            transition: transform .1s $ease-out-quad, border-radius .1s $ease-out-quad;\n            border-radius: rem($slider-thumb-radius);\n        }\n\n        &::after {\n            display: $switch-display;\n            position: absolute;\n            content: '';\n            width: rem($slider-thumb-width);\n            height: rem($slider-thumb-height);\n            background: var-get($theme, 'thumb-color');\n            top: 0;\n            #{$left}: 0;\n            opacity: 0;\n            transform: scale(0);\n            transform-origin: center center;\n            transition: transform .1s $ease-out-quad, opacity .1s $ease-out-quad;\n            border-radius: 50%;\n        }\n    }\n\n    %igx-slider-thumb__dot--disabled {\n        pointer-events: none;\n\n        &::before {\n            background: var-get($theme, 'disabled-thumb-color');\n            border-color: var-get($theme, 'thumb-disabled-border-color');\n            border-radius: rem($slider-thumb-radius);\n        }\n    }\n\n    %igx-slider-thumb__dot--active {\n        &::before {\n            border-radius: 0 $slider-thumb-radius $slider-thumb-radius;\n        }\n    }\n\n    %igx-slider-thumb__dot--pressed {\n        &::after {\n            opacity: .24 !important;\n            /* 48 / 40 */\n            transform: scale(1.2) !important;\n        }\n    }\n\n    %igx-slider-thumb-label__container--active {\n        opacity: 1;\n    }\n\n    %igx-slider-thumb-label__container--pressed {\n        z-index: 1;\n    }\n}\n\n/// Adds typography styles for the igx-slider component.\n/// Uses the 'caption'\n/// categories from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(ticks-label: 'caption', thumb-label: 'caption')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-slider-typography(\n    $type-scale,\n    $categories: (\n        ticks-label: 'caption',\n        thumb-label: 'caption',\n    )\n) {\n    $ticks-label: map.get($categories, 'ticks-label');\n    $thumb-label: map.get($categories, 'thumb-label');\n\n    %igx-slider-thumb-label__container {\n        @include igx-type-style($type-scale, $thumb-label)\n    }\n\n    %igx-slider__tick-label {\n        @include igx-type-style($type-scale, $ticks-label)\n    }\n}\n","@use '../../utilities' as *;\n\n////\n/// @group animations\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n////\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bck {\n    @include keyframes(fade-in-bck) {\n        0% {\n            transform: translateZ(80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bl {\n    @include keyframes(fade-in-bl) {\n        0% {\n            transform: translateX(-50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-bottom {\n    @include keyframes(fade-in-bottom) {\n        0% {\n            transform: translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-br {\n    @include keyframes(fade-in-br) {\n        0% {\n            transform: translateX(50px) translateY(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-fwd {\n    @include keyframes(fade-in-fwd) {\n        0% {\n            transform: translateZ(-80px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateZ(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-left {\n    @include keyframes(fade-in-left) {\n        0% {\n            transform: translateX(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-right {\n    @include keyframes(fade-in-right) {\n        0% {\n            transform: translateX(50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tl {\n    @include keyframes(fade-in-tl) {\n        0% {\n            transform: translateX(-50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-top {\n    @include keyframes(fade-in-top) {\n        0% {\n            transform: translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in-tr {\n    @include keyframes(fade-in-tr) {\n        0% {\n            transform: translateX(50px) translateY(-50px);\n            opacity: 0;\n        }\n\n        100% {\n            transform: translateX(0) translateY(0);\n            opacity: 1;\n        }\n    }\n}\n\n/// @requires {mixin} keyframes\n@mixin fade-in {\n    @include keyframes(fade-in) {\n        0% {\n            opacity: 0;\n        }\n\n        100% {\n            opacity: 1;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If you specify a background color, but do not specify colors for either the\n/// button or the text, their colors will be set automatically to a contrasting color.\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $background [null] - The background color used in the snackbar.\n/// @param {Color} $text-color [null] - The text color used in the snackbar.\n/// @param {Color} $button-color [null] - The button color used in the snackbar.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the snackbar.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the snackbar component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Set a custom background color\n///   $my-snackbar-theme: igx-snackbar-theme($background: white);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-snackbar($my-snackbar-theme);\n@function igx-snackbar-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null,\n    $button-color: null,\n    $shadow: null\n) {\n    $name: 'igx-snackbar';\n    $snackbar-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $snackbar-schema: map.get($schema, $name);\n    } @else {\n        $snackbar-schema: $schema;\n    }\n\n    $theme: apply-palette($snackbar-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($snackbar-schema, 'border-radius')), 0, 24px\n    );\n\n    @if not($button-color) and $background {\n        $button-color: text-contrast($background);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @if not($shadow) {\n        $elevation: map.get($snackbar-schema, 'elevation');\n        $shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        border-radius: $border-radius,\n        background: $background,\n        text-color: $text-color,\n        button-color: $button-color,\n        shadow: $shadow\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-snackbar($theme) {\n    @include igx-css-vars($theme);\n    @include fade-in();\n\n    // @debug $theme;\n\n    $snackbar-min-height: rem(48px);\n    $snackbar-padding: rem(7px) rem(24px);\n    $snackbar-button-left-margin: rem(24px);\n    $snackbar-button-line-height: rem(16px);\n    $snackbar-button-font-weight: 600;\n    $left: if-ltr(left, right);\n\n    %igx-snackbar-display {\n        position: relative;\n        display: flex;\n        flex-flow: row nowrap;\n        align-items: center;\n        justify-content: space-between;\n        min-height: $snackbar-min-height;\n        padding: $snackbar-padding;\n        margin: 8px;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        backface-visibility: hidden;\n        box-shadow: var-get($theme, 'shadow');\n        border-radius: var-get($theme, 'border-radius');\n        backdrop-filter: blur(8px);\n    }\n\n    %igx-snackbar-message {\n        @include animation('fade-in' .35s ease-out);\n    }\n\n    %igx-snackbar-button {\n        background: transparent;\n        color: var-get($theme, 'button-color');\n        border: 0;\n        line-height: $snackbar-button-line-height;\n        margin-#{$left}: $snackbar-button-left-margin;\n        text-transform: uppercase;\n        user-select: none;\n        font-weight: $snackbar-button-font-weight;\n        -webkit-tap-highlight-color: transparent;\n        outline: none;\n        transition: color .2s ease;\n        font-size: inherit;\n        font-family: inherit;\n        cursor: pointer;\n        @include animation('fade-in' .35s ease-out);\n\n        &:hover {\n            color: var-get($theme, 'button-color');\n        }\n    }\n}\n\n/// Adds typography styles for the igx-snackbar component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-snackbar-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map.get($categories, 'text');\n\n    %igx-snackbar-message {\n        @include igx-type-style($type-scale, $text);\n    }\n}\n","@use '../../base' as *;\n@use '../../typography/base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n@use 'sass:map';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $thumb-on-color [null] - The color of the thumb when the switch is on.\n/// @param {Color} $track-on-color [null] - The color of the track when the switch is on.\n/// @param {Color} $thumb-off-color [null] - The color of the thumb when the switch is off.\n/// @param {Color} $track-off-color [null] - The color of the track when the switch is off.\n/// @param {Color} $thumb-disabled-color [null] - The color of the thumb when the switch is disabled.\n/// @param {Color} $track-disabled-color [null] - The color of the track when the switch is disabled.\n/// @param {Color} $label-color [null] - The color of the switch label\n/// @param {Color} $label-disabled-color [null] - The color of the switch label when the switch is disabled\n/// @param {box-shadow} $resting-shadow [null] - The shadow used for the thumb in resting state of the switch.\n/// @param {box-shadow} $hover-shadow [null] - The shadow used for the thumb in hover state of the switch.\n/// @param {box-shadow} $disabled-shadow [null] - The shadow used for the thumb in disable state of the switch.\n///\n/// @param {border-radius} $border-radius-track [null] - The border radius used for switch track.\n/// @param {border-radius} $border-radius-thumb [null] - The border radius used for switch thumb.\n/// @param {border-radius} $border-radius-ripple [null] - The border radius used for switch ripple.\n/// @param {Color} $border-color [null] - The border color of the switch.\n/// @param {Color} $border-hover-color [null] - The border color of the switch on hover.\n/// @param {Color} $border-disabled-color [null] - The border color of the switch when it is disabled.\n/// @param {Color} $border-on-color [null] - The border color when the switch is on.\n/// @param {Color} $border-on-hover-color [null] - The border color when the switch is on and hovered.\n/// @param {Color} $focus-outline-color [null] - TThe focus outlined color.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires round-borders\n///\n/// @example scss Set custom track and thumb on colors\n///   $my-switch-theme: igx-toast-theme($thumb-on-color: black, $track-on-color: yellow);\n///   // Pass the theme to the igx-bottom-nav component mixin\n///   @include igx-switch($my-switch-theme);\n@function igx-switch-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $thumb-on-color: null,\n    $track-on-color: null,\n\n    $thumb-off-color: null,\n    $track-off-color: null,\n\n    $track-disabled-color: null,\n    $thumb-disabled-color: null,\n\n    $label-color: null,\n    $label-disabled-color: null,\n\n    $resting-shadow: null,\n    $hover-shadow: null,\n    $disabled-shadow: null,\n\n    $border-radius-track: null,\n    $border-radius-thumb: null,\n    $border-radius-ripple: null,\n    $border-color: null,\n    $border-hover-color: null,\n    $border-disabled-color: null,\n    $border-on-color: null,\n    $border-on-hover-color: null,\n    $focus-outline-color: null,\n) {\n    $name: 'igx-switch';\n    $switch-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $switch-schema: map.get($schema, $name);\n    } @else {\n        $switch-schema: $schema;\n    }\n\n    $theme: apply-palette($switch-schema, $palette);\n\n    $border-radius-track: round-borders(\n        if($border-radius-track, $border-radius-track, map.get($switch-schema, 'border-radius-track')), 0, 7px\n    );\n\n    $border-radius-thumb: round-borders(\n        if($border-radius-thumb, $border-radius-thumb, map.get($switch-schema, 'border-radius-thumb')), 0, 10px\n    );\n\n    $border-radius-ripple: round-borders(\n        if($border-radius-ripple, $border-radius-ripple, map.get($switch-schema, 'border-radius-ripple')), 0, 24px\n    );\n\n    @if not($resting-shadow) {\n        $resting-elevation: map.get($switch-schema, 'resting-elevation');\n        $resting-shadow: igx-elevation($elevation: $resting-elevation);\n    }\n\n    @if not($hover-shadow) {\n        $hover-elevation: map.get($switch-schema, 'hover-elevation');\n        $hover-shadow: igx-elevation($elevation: $hover-elevation);\n    }\n\n    @if not($disabled-shadow) {\n        $disabled-elevation: map.get($switch-schema, 'disabled-elevation');\n        $disabled-shadow: igx-elevation($elevation: $disabled-elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n\n        thumb-on-color: $thumb-on-color,\n        track-on-color: $track-on-color,\n\n        thumb-off-color: $thumb-off-color,\n        track-off-color: $track-off-color,\n\n        track-disabled-color: $track-disabled-color,\n        thumb-disabled-color: $thumb-disabled-color,\n\n        label-color: $label-color,\n        label-disabled-color: $label-disabled-color,\n\n        resting-shadow: $resting-shadow,\n        hover-shadow: $hover-shadow,\n        disabled-shadow: $disabled-shadow,\n\n        border-radius-track: $border-radius-track,\n        border-radius-thumb: $border-radius-thumb,\n        border-radius-ripple: $border-radius-ripple,\n        border-color: $border-color,\n        border-hover-color: $border-hover-color,\n        border-disabled-color: $border-disabled-color,\n        border-on-color: $border-on-color,\n        border-on-hover-color: $border-on-hover-color,\n        focus-outline-color: $focus-outline-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} igx-ripple\n/// @requires {mixin} hide-default\n/// @requires igx-ripple-theme\n/// @requires em\n/// @requires {mixin} scale-in-out\n/// @requires {mixin} animation\n/// @requires var-get\n@mixin igx-switch($theme) {\n    @include igx-css-vars($theme);\n    @include scale-in-out($start-scale: .9);\n\n    $variant: map.get($theme, variant);\n\n    $switch-width: map.get((\n        material: 36px,\n        fluent: 40px,\n        bootstrap: 32px,\n        indigo-design: 34px\n    ), $variant);\n\n    $switch-height: map.get((\n        material: 14px,\n        fluent: 20px,\n        bootstrap: 16px,\n        indigo-design: 16px\n    ), $variant);\n\n    $switch-thumb-width: map.get((\n        material: 20px,\n        fluent: 12px,\n        bootstrap: 8px,\n        indigo-design: 8px\n    ), $variant);\n\n    $switch-on-offset: map.get((\n        material: 1px,\n        fluent: math.div($switch-thumb-width, 2),\n        bootstrap: math.div($switch-thumb-width, 2),\n        indigo-design: 7px\n    ), $variant);\n\n    $switch-off-offset: map.get((\n        material: -1px,\n        fluent: math.div($switch-thumb-width, 3),\n        bootstrap: math.div($switch-thumb-width, 3),\n        indigo-design: math.div($switch-thumb-width, 3),\n    ), $variant);\n\n    $ripple-display: map.get((\n        material: block,\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-resting-shadow: map.get((\n        material: var-get($theme, 'resting-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-hover-shadow: map.get((\n        material: var-get($theme, 'hover-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $thumb-disabled-shadow: map.get((\n        material: var-get($theme, 'disabled-shadow'),\n        fluent: none,\n        bootstrap: none,\n        indigo-design: none\n    ), $variant);\n\n    $switch-thumb-height: $switch-thumb-width ;\n\n    $ripple-size: em(48px);\n    $ripple-radius: math.div($ripple-size, 2);\n\n    $label-margin: em(8px);\n\n    $input-transition: all .2s $ease-in-out-quad;\n\n    $ripple-theme: igx-ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'thumb-on-color')\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %switch-display {\n        position: relative;\n        display: inline-flex;\n        flex-flow: row nowrap;\n        align-items: center;\n    }\n\n    %switch-input {\n        @include hide-default();\n    }\n\n    %switch-display--disabled {\n        user-select: none;\n        pointer-events: none;\n        cursor: initial;\n    }\n\n    %switch-composite {\n        display: flex;\n        align-items: center;\n        width: rem($switch-width);\n        height: rem($switch-height);\n        border: 1px solid var-get($theme, 'border-color');\n        border-radius: var-get($theme, 'border-radius-track');\n        background: var-get($theme, 'track-off-color');\n        cursor: pointer;\n        user-select: none;\n        transition: $input-transition;\n\n        @if $variant == 'indigo-design' {\n            border: 2px solid var-get($theme, 'border-color');\n        }\n\n        &:hover,\n        &:focus {\n            border-color: var-get($theme, 'border-hover-color');\n        }\n    }\n\n    %switch-composite--x {\n        background: var-get($theme, 'track-on-color');\n        border-color: var-get($theme, 'border-on-color');\n\n        &:hover,\n        &:focus {\n            border-color: var-get($theme, 'border-on-hover-color');\n        }\n    }\n\n    %switch-composite--disabled {\n        background: var-get($theme, 'track-disabled-color');\n        border-color: var-get($theme, 'border-disabled-color');\n    }\n\n    %switch-composite-thumb {\n        position: relative;\n        display: block;\n        width: rem($switch-thumb-width);\n        height: $switch-thumb-height;\n        min-width: rem($switch-thumb-width);\n        border-radius: var-get($theme, 'border-radius-thumb');\n        background: var-get($theme, 'thumb-off-color');\n        box-shadow: $thumb-resting-shadow;\n        transition: $input-transition;\n\n        @include if-ltr() {\n            transform: translateX(#{rem($switch-off-offset)});\n        }\n\n        @include if-rtl() {\n            transform: translateX(#{rem(-1 * $switch-off-offset)});\n        }\n\n        &:hover {\n            box-shadow: $thumb-hover-shadow;\n        }\n    }\n\n    %switch-composite-thumb--x {\n        background: var-get($theme, 'thumb-on-color');\n\n        @include if-ltr() {\n            transform: translateX(#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\n        }\n\n        @include if-rtl() {\n            transform: translateX(-#{rem($switch-width) - rem($switch-thumb-width) - rem($switch-on-offset)});\n        }\n    }\n\n    %switch-composite-thumb--disabled {\n        background: var-get($theme, 'thumb-disabled-color');\n        box-shadow: $thumb-disabled-shadow;\n    }\n\n    %switch-ripple {\n        @include igx-ripple($ripple-theme);\n        @include igx-css-vars($ripple-theme);\n        display: $ripple-display;\n        position: absolute;\n        top: calc(50% - #{$ripple-radius});\n        left: calc(50% - #{$ripple-radius});\n        width: $ripple-size;\n        height: $ripple-size;\n        overflow: hidden;\n        pointer-events: none;\n        filter: opacity(1);\n        border-radius: var-get($theme, 'border-radius-ripple');\n    }\n\n    %igx-switch--focused {\n        @if $variant == 'fluent' {\n            position: relative;\n            $focus-outline-offset-top: rem(2px);\n            $focus-outline-offset-left: rem(2px);\n\n            &::after {\n                content: '';\n                position: absolute;\n                top: -$focus-outline-offset-top;\n                left: -$focus-outline-offset-left;\n                box-shadow: 0 0 0 1px var-get($theme, 'focus-outline-color');\n                width: calc(100% + (#{$focus-outline-offset-left} * 2));\n                height: calc(100% + (#{$focus-outline-offset-top} * 2));\n            }\n        }\n\n        @if $variant == 'bootstrap' {\n            %switch-composite {\n                border-radius: var-get($theme, 'border-radius-thumb');\n                box-shadow: 0 0 0 2px var-get($theme, 'focus-outline-color');\n            }\n        }\n\n        @if $variant == 'indigo-design' {\n            %switch-composite {\n                border-radius: var-get($theme, 'border-radius-thumb');\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color');\n            }\n        }\n    }\n\n    %igx-switch--focused-checked {\n        @if $variant == 'indigo-design' {\n            %switch-composite {\n                box-shadow: 0 0 0 3px var-get($theme, 'focus-outline-color-focused');\n            }\n        }\n    }\n\n    %switch-ripple--focused {\n        background: var-get($theme, 'track-off-color');\n        transition: background .2s $ease-out-quad;\n        opacity: .12;\n    }\n\n    %switch-ripple--focused-checked {\n        background: var-get($theme, 'thumb-on-color');\n    }\n\n    %switch-label {\n        display: inline-block;\n        color: var-get($theme, 'label-color');\n        cursor: pointer;\n        user-select: none;\n        word-wrap: break-all;\n\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--before,\n    %switch-label--after {\n        &:empty {\n            margin: 0;\n        }\n    }\n\n    %switch-label--after {\n        margin-#{$left}: $label-margin;\n    }\n\n    %switch-label--before {\n        order: -1;\n        margin-#{$right}: $label-margin;\n    }\n\n    %switch-label--disabled {\n        color: var-get($theme, 'label-disabled-color');\n    }\n\n    %switch-ripple--hover {\n        &::after {\n            position: absolute;\n            content: '';\n            opacity: .06;\n            top: 0;\n            bottom: 0;\n            left: 0;\n            right: 0;\n        }\n    }\n\n    %switch-ripple--hover-unchecked {\n        &::after {\n            background: var-get($theme, 'track-off-color');\n        }\n    }\n\n    %switch-ripple--hover-checked {\n        &::after {\n            background: var-get($theme, 'thumb-on-color');\n        }\n    }\n\n    %switch-ripple--pressed {\n        &::after {\n            opacity: .12;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-checkbox component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-switch-typography(\n    $type-scale,\n    $categories: (label: 'subtitle-1')\n) {\n    $label: map.get($categories, 'label');\n\n    %switch-label {\n        @include igx-type-style($type-scale, $label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../typography/base' as *;\n@use '../../themes/schemas' as *;\n@use '../ripple/ripple-theme' as *;\n@use '../ripple/ripple-component' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the idle item color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $item-text-color [null] - The color used for the tab text color.\n/// @param {Color} $item-background [null] - The background color used for the tabs header.\n/// @param {Color} $item-hover-background [null] - The background used for the tabs on hover.\n/// @param {Color} $item-hover-color [null] - The text color used for the tabs on hover.\n///\n/// @param {Color} $item-active-color [null] - The color used for the active tabs text.\n/// @param {Color} $item-active-icon-color [null] - The color used for the active tabs icon.\n/// @param {Color} $item-active-background [null] - The color used for the active/focused tab background.\n///\n/// @param {Color} $indicator-color [null] - The color used for the active tab indicator.\n/// @param {Color} $button-color [null] - The color used for the button icon/text color.\n/// @param {Color} $button-hover-color [null] - The color used for the button icon/text color on hover.\n/// @param {Color} $button-background [null] - The color used for the button background.\n/// @param {Color} $button-hover-background [null] - The color used for the button background on hover.\n///\n/// @param {border-radius} $border-radius [null] - The border radius for the tabs.\n/// @param {Color} $border-color [null] - The border color of the tabs.\n/// @param {Color} $border-color--hover [null] - The border color of the tabs on hover.\n///\n/// @param {Color} $tab-ripple-color [null] - The color used for the button background.\n/// @param {Color} $button-ripple-color [null] - The color used for the button background on hover.\n/// @param {Bool} $disable-shadow [true] - Sets the tabs header shadow visibility.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires igx-elevation\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Set a custom background color\n///   $my-tabs-theme: igx-tabs-theme(\n///      $item-background: orange\n///    );\n///   // Pass the theme to the igx-tabs component mixin\n///   @include igx-tabs($my-tabs-theme);\n@function igx-tabs-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $item-text-color: null,\n    $item-background: null,\n\n    $item-hover-background: null,\n    $item-hover-color: null,\n\n    $item-active-color: null,\n    $item-active-icon-color: null,\n    $item-active-background: null,\n    $indicator-color: null,\n\n    $button-color: null,\n    $button-background: null,\n    $button-hover-background: null,\n    $button-hover-color: null,\n\n    $tab-ripple-color: null,\n    $button-ripple-color: null,\n    $border-radius: null,\n\n    $border-color: null,\n    $border-color--hover: null,\n\n    $disable-shadow: true\n) {\n    $name: 'igx-tabs';\n    $tabs-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tabs-schema: map.get($schema, $name);\n    } @else {\n        $tabs-schema: $schema;\n    }\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($tabs-schema, 'border-radius')), 0, 6px\n    );\n\n    $theme: apply-palette($tabs-schema, $palette);\n\n    $variant: map.get($theme, variant);\n    $bootstrap-theme: $variant == 'boostrap';\n\n    $tab-area-shadow: if($disable-shadow == true, none, igx-elevation($elevation: 1));\n    $buttons-shadow: if($disable-shadow == true, none, igx-elevation($elevation: 4));\n\n    @if not($item-text-color) and $item-background {\n        @if meta.type-of($item-background) == 'color' {\n            $item-text-color: rgba(text-contrast($item-background), .54);\n        }\n    }\n\n    @if not($item-hover-color) and $item-background {\n        $item-hover-color: text-contrast($item-background);\n    }\n\n    @if not($item-hover-color) and $item-hover-background {\n        $item-hover-color: text-contrast($item-hover-background);\n    }\n\n    @if not($item-active-icon-color) and $item-active-background {\n        $item-active-icon-color: text-contrast($item-active-background);\n    }\n\n    @if not($item-active-icon-color) and $item-background {\n        $item-active-icon-color: text-contrast($item-background);\n    }\n\n    @if not($indicator-color) and $item-background {\n        $indicator-color: text-contrast($item-background);\n    }\n\n    @if not($item-active-color) and $item-active-icon-color {\n        $item-active-color: $item-active-icon-color;\n    }\n\n    // Button\n    @if not($button-color) and $item-background {\n        $button-color: text-contrast($item-background);\n    }\n\n    @if not($button-color) and $button-background {\n        $button-color: text-contrast($button-background);\n    }\n\n    @if not($button-color) and $item-background {\n        $button-background: transparent;\n    }\n\n    @if not($button-hover-color) and $button-hover-background {\n        $button-hover-color: text-contrast($button-hover-background);\n    }\n\n    @if not($button-hover-background) and $item-background {\n        $button-hover-color: text-contrast($item-background);\n    }\n\n    @if not($button-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-background: transparent;\n        } @else {\n            $button-background: rgba(255, 255, 255 , .1);\n        }\n    }\n\n    @if not($button-hover-background) and $item-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-hover-background: rgba(0, 0, 0, .05);\n        } @else {\n            $button-hover-background: rgba(255, 255, 255 , .14);\n        }\n    }\n\n    @if not($button-ripple-color) and $button-background {\n        @if meta.type-of($item-background) == 'color' and lightness($item-background) > 50 {\n            $button-ripple-color: rgba(0, 0, 0, .4);\n        } @else {\n            $button-ripple-color: rgba(255, 255, 255, .4);\n        }\n    }\n    // Button end\n\n    @if not($tab-ripple-color) and $item-active-background {\n        $tab-ripple-color: text-contrast($item-active-background);\n    }\n\n    @if not($tab-ripple-color) and $item-background {\n        $tab-ripple-color: text-contrast($item-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        item-text-color: $item-text-color,\n        item-background: $item-background,\n        item-hover-color: $item-hover-color,\n        item-hover-background: $item-hover-background,\n        item-active-color: $item-active-color,\n        item-active-icon-color: $item-active-icon-color,\n        item-active-background: $item-active-background,\n        indicator-color: $indicator-color,\n        button-color: $button-color,\n        button-background: $button-background,\n        button-hover-background:$button-hover-background,\n        button-hover-color:$button-hover-color,\n        tab-ripple-color: $tab-ripple-color,\n        button-ripple-color: $button-ripple-color,\n        tab-area-shadow: $tab-area-shadow,\n        buttons-shadow: $buttons-shadow,\n        border-color: $border-color,\n        border-radius: $border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires {mixin} ellipsis\n/// @requires igx-ripple-theme\n/// @requires {mixin} igx-ripple\n/// @requires igx-elevation\n/// @requires rem\n/// @requires var-get\n@mixin igx-tabs($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $not-bootstrap-theme: $variant != 'bootstrap';\n    $bootstrap-theme: $variant == 'bootstrap';\n    $indigo-theme: $variant == 'indigo-design';\n\n    $item-min-width: 90px;\n    $item-max-width: 360px;\n\n    $tabs-animation-function: cubic-bezier(.35, 0, .25, 1);\n\n    $item-padding: rem(11px) rem(16px);\n\n    $tabs-ripple-theme: igx-ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'tab-ripple-color')\n    );\n    $button-ripple-theme: igx-ripple-theme(\n        $schema: $light-schema,\n        $color: var-get($theme, 'button-ripple-color')\n    );\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $icon-space: (\n        comfortable: rem(12px),\n        cosy: rem(8px),\n        compact: rem(4px)\n    );\n\n    %tabs-header,\n    %tabs-header-button,\n    %tabs-header-item-inner,\n    %tabs-header-content {\n        display: flex;\n    }\n\n    %tabs-display {\n        display: block;\n    }\n\n    %tabs-header {\n        overflow: hidden;\n        background: var-get($theme, 'item-background');\n        box-shadow: var-get($theme, 'tab-area-shadow');\n        min-height: rem(42px);\n        z-index: 1;\n\n        @if $bootstrap-theme or $indigo-theme {\n            box-shadow: none;\n        }\n    }\n\n    %tabs-header-content {\n        flex: 1 1 auto;\n        overflow: hidden;\n    }\n\n    %tabs-header-wrapper {\n        position: relative;\n        flex-grow: 1;\n        transition: transform .2s $tabs-animation-function;\n\n        @if $bootstrap-theme or $indigo-theme {\n            &::after {\n                content: '';\n                position: absolute;\n                bottom: 0;\n                left: 0;\n                width: 100%;\n                height: 1px;\n                background: var-get($theme, 'border-color');\n                z-index: 0;\n            }\n        }\n    }\n\n    %tabs-header-scroll {\n        display: flex;       \n        height: 100%;\n    }\n\n    %tabs-header-button {\n        align-items: center;\n        justify-content: center;\n        z-index: 1;\n        border: none;\n        padding: 0;\n        min-width: rem(48px);\n        width: rem(48px);\n        cursor: pointer;\n        position: relative;\n        background: var-get($theme, 'button-background');\n        color: var-get($theme, 'button-color');\n        outline: 0;\n\n        @if not $indigo-theme {\n            box-shadow: var-get($theme, 'buttons-shadow');\n        }\n\n        &:hover {\n            background: var-get($theme, 'button-hover-background');\n            color: var-get($theme, 'button-hover-color');\n        }\n\n        &:focus {\n            outline: 0;\n            background: var-get($theme, 'button-hover-background');\n        }\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        &--hidden {\n            visibility: hidden;\n        }\n\n        &--none {\n            display: none;\n        }\n\n        @include igx-ripple($button-ripple-theme);\n        @include igx-css-vars($button-ripple-theme);\n    }\n\n    %tabs-header-item {\n        @include icon-w-margin(map.get($icon-space, 'comfortable'), $left);\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        min-width: $item-min-width;\n        max-width: $item-max-width;\n        word-wrap: break-word;\n        // Flex basis & shrink are Needed for IE11\n        flex-basis: auto;\n        flex-shrink: 0;\n        padding: $item-padding;\n        overflow: hidden;\n        cursor: pointer;\n        position: relative;\n\n        @if $not-bootstrap-theme {\n            transition: all .3s $tabs-animation-function;\n        }\n\n        user-select: none;\n        background: var-get($theme, 'item-background');\n        color: var-get($theme, 'item-text-color');\n        outline: 0;\n\n        @if $bootstrap-theme {\n            border: 1px solid transparent;\n            border-top-left-radius: var-get($theme, 'border-radius');\n            border-top-right-radius: var-get($theme, 'border-radius');\n        }\n\n        @if $indigo-theme {\n            border-bottom: 1px solid var-get($theme, 'border-color');\n        }\n\n        &::-moz-focus-inner {\n            border: 0;\n        }\n\n        &:focus {\n            background: var-get($theme, 'item-active-background');\n            border-bottom-color: transparent;\n        }\n\n        &:hover {\n            background: var-get($theme, 'item-hover-background');\n            color: var-get($theme, 'item-hover-color');\n\n            @if $bootstrap-theme {\n                border-color: var-get($theme, 'border-color--hover') var-get($theme, 'border-color--hover') transparent;\n            }\n        }\n\n        @if $not-bootstrap-theme {\n            border: 1px solid var-get($theme, 'border-color');\n\n            &:hover,\n            &:focus {\n                border: 1px solid var-get($theme, 'border-color--hover');\n            }\n        }\n\n        @if $indigo-theme {\n            border-top: transparent;\n            border-left: transparent;\n            border-right: transparent;\n\n            &:hover,\n            &:focus {\n                border-top: transparent;\n                border-left: transparent;\n                border-right: transparent;\n            }\n        }\n\n        @include igx-ripple($tabs-ripple-theme);\n        @include igx-css-vars($tabs-ripple-theme);\n    }\n\n    %tabs-header-item--selected {\n        outline: 0;\n        color: var-get($theme, 'item-active-color');\n\n        @if $bootstrap-theme {\n            border-color: var-get($theme, 'border-color--hover') var-get($theme, 'border-color--hover') transparent;\n        }\n\n        &:focus {\n            background: var-get($theme, 'item-active-background');\n            color: var-get($theme, 'item-active-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'item-active-background');\n            color: var-get($theme, 'item-active-color');\n        }\n\n        igx-icon {\n            color: var-get($theme, 'item-active-icon-color');\n        }\n\n        @if $bootstrap-theme {\n            background: var-get($theme, 'item-active-background');\n            position: relative;\n            z-index: 1;\n            border-top-color: var-get($theme, 'border-color');\n            border-left-color: var-get($theme, 'border-color');\n            border-right-color: var-get($theme, 'border-color');\n            border-bottom-color: transparent;\n\n            &::after {\n                content: '';\n                position: absolute;\n                bottom: -1px;\n                left: 0;\n                width: 100%;\n                height: 1px;\n                background: var-get($theme, 'item-active-background');\n            }\n\n            &:hover,\n            &:focus {\n                border-top-color: var-get($theme, 'border-color');\n                border-left-color: var-get($theme, 'border-color');\n                border-right-color: var-get($theme, 'border-color');\n                border-bottom-color: transparent;\n            }\n        }\n    }\n\n    %tabs-header-item--disabled {\n        outline: 0;\n        @if not $indigo-theme {\n            opacity: .5;\n        } @else  {\n            > * {\n                opacity: .4;\n            }\n        }\n        cursor: default;\n        pointer-events: none;\n    }\n\n    %tabs-header-item-inner {\n        align-items: center;\n        justify-content: center;\n        flex-direction: column;\n        text-align: center;\n\n        > [igxtabheadericon] {\n            margin-bottom: rem(8px);\n\n            &:last-child {\n                margin-bottom: 0;\n            }\n        }\n    }\n\n    %tabs-header-active-indicator {\n        position: absolute;\n        bottom: 0;\n        // We need to explicitly set the default for IE 11\n        left: 0;\n        transform: translateX(0);\n        height: 2px;\n        min-width: $item-min-width;\n        background: var-get($theme, 'indicator-color');\n        transition: transform .3s $tabs-animation-function, width .2s $tabs-animation-function;\n        @if $bootstrap-theme {\n            display: none;\n        }\n    }\n\n    %tabs-panels {\n        position: relative;\n        overflow: hidden;\n        flex-grow: 1;\n    }\n\n    %tabs-panel {\n        display: block;\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n        overflow-x: hidden;\n        overflow-y: auto;\n\n        &::-moz-focus-inner {\n            // remove focus dotted border in firefox\n            border: 0;\n        }\n\n        &:focus {\n            outline-width: 0;\n        }\n\n        &[tabindex='0'] {\n            position: relative;\n        }\n    }\n\n    %tabs-header-scroll--start {\n        justify-content: flex-start;\n    }\n\n    %tabs-header-scroll--end {\n        justify-content: flex-end;\n    }\n\n    %tabs-header-scroll--center {\n        justify-content: center;\n    }\n\n    %tabs-header-scroll--justify {\n        %tabs-header-item {\n            flex-basis: 0;\n            flex-grow: 1;\n            max-width: 100%;\n        }\n    }\n}\n\n/// Adds typography styles for the igx-tabs component.\n/// Uses the 'subtitle-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'button')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-tabs-typography($type-scale, $categories: (label: 'button')) {\n    $label: map.get($categories, 'label');\n\n    %tabs-header-item-inner > [igxtabheaderlabel]{\n        @include igx-type-style($type-scale, $label) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n\n\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:math';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $step-background [null] - The background of the step header.\n/// @param {Color} $step-hover-background [null] - The background of the step header on hover.\n/// @param {Color} $step-focus-background [null] - The background of the step header on focus.\n/// @param {Color} $title-color [null] - The color of the step title.\n/// @param {Color} $title-hover-color [null] - The color of the step title on hover.\n/// @param {Color} $title-focus-color [null] - The color of the step title on focus.\n/// @param {Color} $subtitle-color [null] - The color of the step subtitle.\n/// @param {Color} $subtitle-hover-color [null] - The color of the step subtitle on hover.\n/// @param {Color} $subtitle-focus-color [null] - The color of the step subtitle on focus.\n/// @param {Color} $indicator-color [null] - The text color of the step indicator.\n/// @param {Color} $indicator-background [null] - The background color of the step indicator.\n/// @param {Color} $indicator-outline [null] - The outline color of the step indicator.\n///\n/// @param {Color} $invalid-step-background [null] - The background of the invalid step header.\n/// @param {Color} $invalid-step-hover-background [null] - The background of the invalid step header on hover.\n/// @param {Color} $invalid-step-focus-background [null] - The background of the invalid step header on focus.\n/// @param {Color} $invalid-title-color [null] - The color of the invalid step title.\n/// @param {Color} $invalid-title-hover-color [null] - The color of the invalid step title on hover.\n/// @param {Color} $invalid-title-focus-color [null] - The color of the invalid step title on focus.\n/// @param {Color} $invalid-subtitle-color [null] - The color of the invalid step subtitle.\n/// @param {Color} $invalid-subtitle-hover-color [null] - The color of the invalid step subtitle on hover.\n/// @param {Color} $invalid-subtitle-focus-color [null] - The color of the invalid step subtitle on focus.\n/// @param {Color} $invalid-indicator-color [null] - The color of the invalid step indicator.\n/// @param {Color} $invalid-indicator-background [null] - The background color of the invalid step indicator.\n/// @param {Color} $invalid-indicator-outline [null] - The outline color of the invalid step indicator.\n///\n/// @param {Color} $current-step-background [null] - The background of the current step header.\n/// @param {Color} $current-step-hover-background [null] - The background of the current step header on hover.\n/// @param {Color} $current-step-focus-background [null] - The background of the current step header on focus.\n/// @param {Color} $current-title-color [null] - The color of the current step title.\n/// @param {Color} $current-title-hover-color [null] - The color of the current step title on hover.\n/// @param {Color} $current-title-focus-color [null] - The color of the current step title on focus.\n/// @param {Color} $current-subtitle-color [null] - The color of the current step subtitle.\n/// @param {Color} $current-subtitle-hover-color [null] - The color of the current step subtitle on hover.\n/// @param {Color} $current-subtitle-focus-color [null] - The color of the current step subtitle on focus.\n/// @param {Color} $current-indicator-color [null] - The color of the current step indicator.\n/// @param {Color} $current-indicator-background [null] - The background color of the current step indicator.\n/// @param {Color} $current-indicator-outline [null] - The outline color of the current step indicator.\n///\n/// @param {Color} $complete-step-background [null] - The background of the complete step header.\n/// @param {Color} $complete-step-hover-background [null] - The background of the complete step header on hover.\n/// @param {Color} $complete-step-focus-background [null] - The background of the complete step header on focus.\n/// @param {Color} $complete-title-color [null] - The color of the complete step title.\n/// @param {Color} $complete-title-hover-color [null] - The color of the complete step title on hover.\n/// @param {Color} $complete-title-focus-color [null] - The color of the complete step title on focus.\n/// @param {Color} $complete-subtitle-color [null] - The color of the complete step subtitle.\n/// @param {Color} $complete-subtitle-hover-color [null] - The color of the complete step subtitle on hover.\n/// @param {Color} $complete-subtitle-focus-color [null] - The color of the complete step subtitle on focus.\n/// @param {Color} $complete-indicator-color [null] - The color of the completed step indicator.\n/// @param {Color} $complete-indicator-background [null] - The background color of the completed step indicator.\n/// @param {Color} $complete-indicator-outline [null] - The outline color of the completed step indicator.\n///\n/// @param {Color} $disabled-title-color [null] - The title color of the disabled step.\n/// @param {Color} $disabled-subtitle-color [null] - The subtitle color of the disabled step.\n/// @param {Color} $disabled-indicator-color [null] - The indicator color of the disabled step.\n/// @param {Color} $disabled-indicator-background [null] - The indicator background of the disabled step.\n/// @param {Color} $disabled-indicator-outline [null] - The indicator outline color of the disabled step.\n///\n/// @param {Color} $step-separator-color [null] - The separator border-color of between the steps.\n/// @param {Color} $complete-step-separator-color [null] - The separator border-color between the completed steps.\n///\n/// @param {Color} $step-separator-style [null] - The separator border-style of between the steps.\n/// @param {Color} $complete-step-separator-style [null] - The separator border-style between the completed steps.\n///\n/// @param {Color} $border-radius-indicator [null] - The border-radius of the step indicator.\n/// @param {Color} $border-radius-step-header [null] - The border-radius of the step header.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n///\n/// @example scss Set custom track and thumb on colors\n/// $my-stepper-theme: igx-stepper-theme();\n/// @include igx-stepper($my-stepper-theme);\n///\n/// @example scss Set custom steppet colors\n///   $my-stepper-theme: igx-stepper-theme($step-hover-background: red);\n///   // Pass the theme to the igx-stepper component mixin\n///   @include igx-stepper($my-stepper-theme);\n@function igx-stepper-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $step-background: null,\n    $step-hover-background: null,\n    $step-focus-background: null,\n\n    $invalid-step-background: null,\n    $invalid-step-hover-background: null,\n    $invalid-step-focus-background: null,\n\n    $current-step-background: null,\n    $current-step-hover-background: null,\n    $current-step-focus-background: null,\n\n    $complete-step-background: null,\n    $complete-step-hover-background: null,\n    $complete-step-focus-background: null,\n\n    // Incomplete\n    $indicator-color: null,\n    $indicator-background: null,\n    $indicator-outline: null,\n\n    $title-color: null,\n    $title-hover-color: null,\n    $title-focus-color: null,\n\n    $subtitle-color: null,\n    $subtitle-hover-color: null,\n    $subtitle-focus-color: null,\n\n    // Invalid\n    $invalid-indicator-color: null,\n    $invalid-indicator-background: null,\n    $invalid-indicator-outline: null,\n\n    $invalid-title-color: null,\n    $invalid-title-hover-color: null,\n    $invalid-title-focus-color: null,\n\n    $invalid-subtitle-color: null,\n    $invalid-subtitle-hover-color: null,\n    $invalid-subtitle-focus-color: null,\n\n    // Current\n    $current-indicator-color: null,\n    $current-indicator-background: null,\n    $current-indicator-outline: null,\n\n    $current-title-color: null,\n    $current-title-hover-color: null,\n    $current-title-focus-color: null,\n\n    $current-subtitle-color: null,\n    $current-subtitle-hover-color: null,\n    $current-subtitle-focus-color: null,\n\n    // complete\n    $complete-indicator-color: null,\n    $complete-indicator-background: null,\n    $complete-indicator-outline: null,\n\n    $complete-title-color: null,\n    $complete-title-hover-color: null,\n    $complete-title-focus-color: null,\n\n    $complete-subtitle-color: null,\n    $complete-subtitle-hover-color: null,\n    $complete-subtitle-focus-color: null,\n\n    // Disabled\n    $disabled-indicator-color: null,\n    $disabled-indicator-background: null,\n    $disabled-indicator-outline: null,\n    $disabled-title-color: null,\n    $disabled-subtitle-color: null,\n\n    // Separator\n    $step-separator-color: null,\n    $complete-step-separator-color: null,\n\n    $step-separator-style: null,\n    $complete-step-separator-style: null,\n\n    // Border-radius\n    $border-radius-indicator: null,\n    $border-radius-step-header: null,\n) {\n    $name: 'igx-stepper';\n    $selector: 'igx-stepper';\n    $stepper-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $stepper-schema: map.get($schema, $name);\n    } @else {\n        $stepper-schema: $schema;\n    }\n\n    $theme: apply-palette($stepper-schema, $palette);\n\n    $border-radius-indicator: round-borders(\n        if($border-radius-indicator, $border-radius-indicator, map.get($stepper-schema, 'border-radius-indicator')), 0, 100px\n    );\n\n    $border-radius-step-header: round-borders(\n        if($border-radius-step-header, $border-radius-step-header, map.get($stepper-schema, 'border-radius-step-header')), 0, 100px\n    );\n\n    @if not($indicator-background) and $step-background {\n        $indicator-background: text-contrast($step-background);\n    }\n\n    @if not($indicator-color) and $indicator-background {\n        $indicator-color: text-contrast($indicator-background);\n    }\n\n    @if not($complete-indicator-color) and $complete-indicator-background {\n        $complete-indicator-color: text-contrast($complete-indicator-background);\n    }\n\n    @if not($invalid-indicator-color) and $invalid-indicator-background {\n        $invalid-indicator-color: text-contrast($invalid-indicator-background);\n    }\n\n    @if not($current-indicator-color) and $current-indicator-background {\n        $current-indicator-color: text-contrast($current-indicator-background);\n    }\n\n    @if not($title-color) and $step-background {\n        $title-color: text-contrast($step-background);\n    }\n\n    @if not($subtitle-color) and $step-background {\n        $subtitle-color: text-contrast($step-background);\n    }\n\n    @if not($title-hover-color) and $step-hover-background {\n        $title-hover-color: text-contrast($step-hover-background);\n    }\n\n    @if not($subtitle-hover-color) and $step-hover-background {\n        $subtitle-hover-color: text-contrast($step-hover-background);\n    }\n\n    @if not($title-focus-color) and $step-focus-background {\n        $title-focus-color: text-contrast($step-focus-background);\n    }\n\n    @if not($subtitle-focus-color) and $step-focus-background {\n        $subtitle-focus-color: text-contrast($step-focus-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        selector: $selector,\n\n        // Incomplete\n        step-background: $step-background,\n        step-hover-background: $step-hover-background,\n        step-focus-background: $step-focus-background,\n        indicator-color: $indicator-color,\n        indicator-background: $indicator-background,\n        indicator-outline: $indicator-outline,\n        title-color: $title-color,\n        title-hover-color: $title-hover-color,\n        title-focus-color: $title-focus-color,\n        subtitle-color: $subtitle-color,\n        subtitle-hover-color: $subtitle-hover-color,\n        subtitle-focus-color: $subtitle-focus-color,\n\n        // Invalid\n        invalid-step-background: $invalid-step-background,\n        invalid-step-hover-background: $invalid-step-hover-background,\n        invalid-step-focus-background: $invalid-step-focus-background,\n        invalid-indicator-color: $invalid-indicator-color,\n        invalid-indicator-background: $invalid-indicator-background,\n        invalid-indicator-outline: $invalid-indicator-outline,\n        invalid-title-color: $invalid-title-color,\n        invalid-title-hover-color: $invalid-title-hover-color,\n        invalid-title-focus-color: $invalid-title-focus-color,\n        invalid-subtitle-color: $invalid-subtitle-color,\n        invalid-subtitle-hover-color: $invalid-subtitle-hover-color,\n        invalid-subtitle-focus-color: $invalid-subtitle-focus-color,\n\n        // Current\n        current-step-background: $current-step-background,\n        current-step-hover-background: $current-step-hover-background,\n        current-step-focus-background: $current-step-focus-background,\n        current-indicator-color: $current-indicator-color,\n        current-indicator-background: $current-indicator-background,\n        current-indicator-outline: $current-indicator-outline,\n        current-title-color: $current-title-color,\n        current-title-hover-color: $current-title-hover-color,\n        current-title-focus-color: $current-title-focus-color,\n        current-subtitle-color: $current-subtitle-color,\n        current-subtitle-hover-color: $current-subtitle-hover-color,\n        current-subtitle-focus-color: $current-subtitle-focus-color,\n\n        // Complete\n        complete-step-background: $complete-step-background,\n        complete-step-hover-background: $complete-step-hover-background,\n        complete-step-focus-background: $complete-step-focus-background,\n        complete-indicator-color: $complete-indicator-color,\n        complete-indicator-background: $complete-indicator-background,\n        complete-indicator-outline: $complete-indicator-outline,\n        complete-title-color: $complete-title-color,\n        complete-title-hover-color: $complete-title-hover-color,\n        complete-title-focus-color: $complete-title-focus-color,\n        complete-subtitle-color: $complete-subtitle-color,\n        complete-subtitle-hover-color: $complete-subtitle-hover-color,\n        complete-subtitle-focus-color: $complete-subtitle-focus-color,\n\n        // Disabled\n        disabled-indicator-color: $disabled-indicator-color,\n        disabled-indicator-background: $disabled-indicator-background,\n        disabled-indicator-outline: $disabled-indicator-outline,\n        disabled-title-color: $disabled-title-color,\n        disabled-subtitle-color: $disabled-subtitle-color,\n\n        // Separator\n        step-separator-color: $step-separator-color,\n        complete-step-separator-color: $complete-step-separator-color,\n        step-separator-style: $step-separator-style,\n        complete-step-separator-style: $complete-step-separator-style,\n\n        // Border-radius\n        border-radius-indicator: $border-radius-indicator,\n        border-radius-step-header: $border-radius-step-header,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires em\n/// @requires var-get\n@mixin igx-stepper($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $indicator-size: map.get((\n        material: rem(24px),\n        fluent: rem(24px),\n        bootstrap: rem(40px),\n        indigo-design: rem(24px)\n    ), $variant);\n\n    $step-header-padding: map.get((\n        material: rem(24px),\n        fluent: rem(8px),\n        bootstrap: rem(24px),\n        indigo-design: rem(16px)\n    ), $variant);\n\n    $step-header-padding-simple: map.get((\n        material: rem(8px),\n        fluent: rem(8px),\n        bootstrap: rem(16px),\n        indigo-design: rem(8px)\n    ), $variant);\n\n    $step-body-padding: rem(16px);\n    $title-gap: rem(8px);\n    $indicator-gap: rem(4px);\n    $indicator-padding: rem(2px);\n    $v-line-indent: calc(#{$step-header-padding} + (#{$indicator-size} / 2));\n    $separator-position: 50%;\n\n    $outline-width: map.get((\n        material: rem(1px),\n        fluent: rem(1px),\n        bootstrap: rem(1px),\n        indigo-design: rem(2px)\n    ), $variant);\n\n    $separator-size: map.get((\n        material: rem(1px),\n        fluent: rem(1px),\n        bootstrap: rem(8px),\n        indigo-design: rem(2px)\n    ), $variant);\n\n    $separator-title-top: calc(100% - ((#{$indicator-size} / 2) + #{$step-header-padding} + (#{$separator-size} / 2)));\n    $separator-title-bottom: calc((#{$indicator-size} / 2) + #{$step-header-padding} - (#{$separator-size} / 2));\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    %stepper-display,\n    %igx-stepper__header,\n    %igx-stepper__body,\n    %igx-stepper__step {\n        display: flex;\n    }\n\n    %stepper-display {\n        flex-direction: column;\n        width: 100%;\n    }\n\n    %igx-stepper__header {\n        white-space: nowrap;\n        flex-direction: column;\n        width: 100%;\n    }\n\n    %igx-stepper__body {\n        position: relative\n    }\n\n    %stepper-display,\n    %igx-stepper__body,\n    %igx-stepper__step-header,\n    %igx-stepper__step-title-wrapper {\n        overflow: hidden;\n    }\n\n    %igx-stepper__step-title {\n        color: var-get($theme, 'title-color');\n    }\n\n    %igx-stepper__step-subtitle {\n        color: var-get($theme, 'subtitle-color');\n    }\n\n    %igx-stepper__step {\n        position: relative;\n        flex-direction: column;\n        align-content: center;\n        justify-content: center;\n        min-width: rem(100px);\n\n        &:focus {\n            outline: none;\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'title-focus-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'subtitle-focus-color');\n            }\n\n            %igx-stepper__step-header {\n                background: var-get($theme, 'step-focus-background');\n                color: var-get($theme, 'title-focus-color');\n\n                @if $variant == 'bootstrap' {\n                    box-shadow: inset 0 0 0 $outline-width var-get($theme, 'indicator-outline');\n                }\n            }\n\n            %igx-stepper__step-header--current {\n                background: var-get($theme, 'current-step-focus-background') !important;\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'current-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'current-subtitle-focus-color');\n                }\n            }\n\n            %igx-stepper__step-header--invalid {\n                background: var-get($theme, 'invalid-step-focus-background');\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'invalid-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'invalid-subtitle-focus-color');\n                }\n            }\n        }\n\n        &:first-of-type {\n            %igx-stepper__step-header {\n                &::before {\n                    visibility: hidden;\n                }\n            }\n        }\n\n        &:last-of-type {\n            %igx-stepper__step-content-wrapper {\n                &::before {\n                    display: none;\n                }\n            }\n\n            %igx-stepper__step-header {\n                &::after {\n                    visibility: hidden;\n                }\n            }\n        }\n    }\n\n    %igx-stepper__step-header {\n        display: flex;\n        padding: $step-header-padding;\n        position: relative;\n        line-height: normal;\n        flex-direction: column;\n        align-items: flex-start;\n        gap: $title-gap;\n        cursor: pointer;\n        background: var-get($theme, 'step-background');\n        border-radius: var-get($theme, 'border-radius-step-header');\n\n        &:hover {\n            background: var-get($theme, 'step-hover-background');\n            color: var-get($theme, 'title-hover-color');\n        }\n\n        @if $variant != material {\n            .igx-ripple__inner {\n                display: none;\n            }\n        }\n    }\n\n    %igx-stepper__step-indicator {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: relative;\n        font-size: rem(12px);\n        height: $indicator-size;\n        width: $indicator-size;\n        white-space: nowrap;\n        border-radius: var-get($theme, 'border-radius-indicator');\n        color: var-get($theme, 'indicator-color');\n        background: var-get($theme, 'indicator-background');\n        box-shadow: 0 0 0 $outline-width var-get($theme, 'indicator-outline');\n\n        @if $variant != 'bootstrap' {\n            > igx-icon {\n                width: calc(#{$indicator-size} - #{rem(6px)});\n                height: calc(#{$indicator-size} - #{rem(6px)});\n                font-size: calc(#{$indicator-size} - #{rem(6px)});\n                color: inherit;\n            }\n        }\n\n        div > igx-icon,\n        div > igx-avatar,\n        div > igx-circular-bar {\n            max-height: $indicator-size;\n            max-width: $indicator-size;\n        }\n    }\n\n    %igx-stepper__step-header--current {\n        background: var-get($theme, 'current-step-background') !important;\n        color: var-get($theme, 'current-title-color');\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'current-indicator-color') !important;\n            background: var-get($theme, 'current-indicator-background') !important;\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'current-indicator-outline') !important;\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'current-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'current-subtitle-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'current-step-hover-background') !important;\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'current-title-hover-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'current-subtitle-hover-color');\n            }\n        }\n    }\n\n    %igx-stepper__step--disabled {\n        color: var-get($theme, 'disabled-title-color');\n        pointer-events: none;\n        cursor: default;\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'disabled-indicator-color');\n            background: var-get($theme, 'disabled-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'disabled-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'disabled-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'disabled-subtitle-color');\n        }\n    }\n\n    %igx-stepper__step-header--invalid {\n        background: var-get($theme, 'invalid-step-background');\n        color: var-get($theme, 'invalid-title-color');\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'invalid-indicator-color');\n            background: var-get($theme, 'invalid-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'invalid-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'invalid-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'invalid-subtitle-color');\n        }\n\n        &:hover {\n            background: var-get($theme, 'invalid-step-hover-background');\n\n            %igx-stepper__step-title {\n                color: var-get($theme, 'invalid-title-hover-color');\n            }\n\n            %igx-stepper__step-subtitle {\n                color: var-get($theme, 'invalid-subtitle-hover-color');\n            }\n        }\n    }\n\n    %igx-stepper__body-content {\n        display: block;\n        position: absolute;\n        top: 0;\n        #{$left}: 0;\n        #{$right}: 0;\n        bottom: 0;\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        z-index: -1;\n    }\n\n    %igx-stepper__step-content-wrapper,\n    %igx-stepper__body-content {\n        padding: $step-body-padding;\n    }\n\n    %igx-stepper__body-content--active {\n        z-index: 1;\n        position: relative;\n    }\n\n    %igx-stepper__step-content-wrapper {\n        margin-#{$left}: $v-line-indent;\n        position: relative;\n        min-height: rem(32px);\n\n        &::before {\n            content: '';\n            position: absolute;\n            #{$left}: calc(-#{$separator-size} / 2);\n            top: calc(-#{$step-header-padding} + #{$title-gap});\n            bottom: calc(-#{$step-header-padding} + #{$title-gap});\n            width: $separator-size;\n            border-#{$left}: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n        }\n    }\n\n    %igx-stepper__step-title-wrapper {\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        min-width: rem(32px);\n\n        &:empty {\n            display: none;\n        }\n\n        > * {\n            display: block;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            overflow: hidden;\n        }\n    }\n\n    %igx-stepper__step--start,\n    %igx-stepper__step--end {\n        %igx-stepper__step-header {\n            flex-direction: row;\n            align-items: center;\n            //gap: $title-gap--horizontal;\n        }\n    }\n\n    %igx-stepper__step--start,\n    %igx-stepper__step--top {\n        %igx-stepper__step-title-wrapper {\n            order: -1;\n        }\n    }\n\n    %igx-stepper__step--completed {\n\n        %igx-stepper__step-header {\n            background: var-get($theme, 'complete-step-background');\n\n            &:hover {\n                background: var-get($theme, 'complete-step-hover-background');\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'complete-title-hover-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'complete-subtitle-hover-color');\n                }\n            }\n\n            &::after {\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n            }\n        }\n\n        %igx-stepper__step-indicator {\n            color: var-get($theme, 'complete-indicator-color');\n            background: var-get($theme, 'complete-indicator-background');\n            box-shadow: 0 0 0 $outline-width var-get($theme, 'complete-indicator-outline');\n        }\n\n        %igx-stepper__step-title {\n            color: var-get($theme, 'complete-title-color');\n        }\n\n        %igx-stepper__step-subtitle {\n            color: var-get($theme, 'complete-subtitle-color');\n        }\n\n        &:focus {\n            %igx-stepper__step-header {\n                background: var-get($theme, 'complete-step-focus-background');\n\n                %igx-stepper__step-title {\n                    color: var-get($theme, 'complete-title-focus-color');\n                }\n\n                %igx-stepper__step-subtitle {\n                    color: var-get($theme, 'complete-subtitle-focus-color');\n                }\n            }\n        }\n\n        %igx-stepper__step-content-wrapper {\n            &::before {\n                border-#{$left}-style: unquote(var-get($theme, 'complete-step-separator-style'));\n                border-#{$left}-color: var-get($theme, 'complete-step-separator-color');\n            }\n        }\n    }\n\n    %igx-stepper__step--completed + %igx-stepper__step {\n        &::before {\n            border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n            border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n        }\n\n        %igx-stepper__step-header {\n            &::before {\n                border-top-color: var-get($theme, 'complete-step-separator-color') !important;\n                border-top-style: unquote(var-get($theme, 'complete-step-separator-style')) !important;\n            }\n        }\n    }\n\n    %igx-stepper__step--simple {\n        %igx-stepper__step-indicator {\n            min-width: $indicator-size;\n            min-height: $indicator-size;\n            width: initial;\n            height: initial;\n\n            div > igx-icon,\n            div > igx-avatar,\n            div > igx-circular-bar {\n                max-width: initial;\n                max-height: initial;\n            }\n        }\n    }\n\n    // HORIZONTAL MODE START\n    %igx-stepper--horizontal {\n        %igx-stepper__header {\n            flex-direction: row;\n        }\n\n        %igx-stepper__step {\n            overflow: hidden;\n            flex-direction: row;\n            flex-grow: 1;\n\n            &::before {\n                content: '';\n                width: auto;\n                min-width: rem(10px);\n                height: $separator-size;\n                flex: 1;\n                position: relative;\n                z-index: -1;\n                top: $separator-title-bottom;\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n            }\n\n            &:first-of-type {\n                flex-grow: 0;\n                min-width: 0;\n\n                &::before {\n                    display: none;\n                }\n            }\n        }\n\n        %igx-stepper__step-header {\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: center;\n\n            &::before,\n            &::after {\n                content: '';\n                position: absolute;\n                z-index: -1;\n                height: $separator-size;\n                width: calc(50% - (#{$indicator-size} - #{$indicator-gap}));\n                top: $separator-title-bottom;\n                flex: 1;\n                border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n            }\n\n            &::before {\n                #{$left}: 0;\n            }\n\n            &::after {\n                #{$right}: 0;\n            }\n        }\n\n        %igx-stepper__step--simple {\n            text-align: center;\n\n            %igx-stepper__step-header {\n                align-self: center;\n                padding: $step-header-padding-simple;\n                height: auto;\n\n                &::before,\n                &::after {\n                    display: none;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    top: calc(50% - (#{$separator-size} / 2));\n                }\n            }\n        }\n\n        %igx-stepper__step-title-wrapper {\n            width: 100%;\n        }\n\n        %igx-stepper__step--top {\n            %igx-stepper__step-header {\n                justify-content: flex-end;\n\n                &::before,\n                &::after {\n                    top: $separator-title-top;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    border-top: $separator-size unquote(var-get($theme, 'step-separator-style')) var-get($theme, 'step-separator-color');\n                    top: $separator-title-top;\n                }\n            }\n        }\n\n        %igx-stepper__step--bottom {\n            %igx-stepper__step-header {\n                justify-content: flex-start;\n            }\n        }\n\n        %igx-stepper__step--top,\n        %igx-stepper__step--bottom {\n            %igx-stepper__step-title-wrapper {\n                text-align: center;\n            }\n\n            %igx-stepper__step-header {\n                flex-direction: column;\n            }\n        }\n\n        %igx-stepper__step--start {\n            %igx-stepper__step-title-wrapper {\n                text-align: #{$right};\n            }\n        }\n\n        %igx-stepper__step--start,\n        %igx-stepper__step--end {\n            %igx-stepper__step-indicator {\n                flex: 1 0 auto;\n            }\n\n            %igx-stepper__step-header {\n                @if $variant != 'fluent' {\n                    padding: calc(#{$step-header-padding} / 2);\n                }\n\n                &::before,\n                &::after {\n                    display: none;\n                }\n            }\n\n            &%igx-stepper__step {\n                &::before {\n                    top: calc(50% - (#{$separator-size} / 2));\n                }\n            }\n        }\n\n        %igx-stepper__step-content {\n            &:focus {\n                outline: none;\n            }\n\n            &::before {\n                display: none;\n            }\n        }\n\n        %igx-stepper__step-content-wrapper {\n            text-align: center;\n        }\n    }\n    // HORIZONTAL MODE END\n}\n\n/// Adds typography styles for the igx-stepper component.\n/// Uses the 'body-2' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(title: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-stepper-typography(\n    $type-scale,\n    $categories: (\n        title: 'body-2',\n        subtitle: 'caption'\n    )\n) {\n    $title: map.get($categories, 'title');\n    $subtitle: map.get($categories, 'subtitle');\n\n    %igx-stepper__step-title {\n        @include igx-type-style($type-scale, $title) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-stepper__step-subtitle {\n        @include igx-type-style($type-scale, $subtitle) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n\n    %igx-stepper__step-header--current {\n        %igx-stepper__step-title {\n            font-weight: 600;\n        }\n    }\n}\n\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified,\n/// the text-color will be assigned automatically to a contrasting color.\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color used for the toast.\n/// @param {Color} $text-color [null] - The text-color used for the toast.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the toast component.\n/// @param {box-shadow} $shadow [null] - Sets a shadow to be used for the toast.\n///\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires extend\n/// @requires round-borders\n/// @requires igx-elevation\n///\n/// @example scss Set a custom background color\n///   $my-toast-theme: igx-toast-theme($background: green);\n///   // Pass the theme to the igx-toast component mixin\n///   @include igx-toast($my-toast-theme);\n@function igx-toast-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null,\n    $shadow: null,\n) {\n    $name: 'igx-toast';\n    $toast-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $toast-schema: map.get($schema, $name);\n    } @else {\n        $toast-schema: $schema;\n    }\n\n    $theme: apply-palette($toast-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($toast-schema, 'border-radius')), 0, 26px\n    );\n\n    @if not($shadow) {\n        $elevation: map.get($toast-schema, 'elevation');\n        $shadow: igx-elevation($elevation: $elevation);\n    }\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n        shadow: $shadow\n    ));\n}\n\n/// Toast Component\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-toast($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, variant);\n\n    $palette: map.get($theme, 'palette');\n    $width: 52px;\n    $margin: rem(42px) auto;\n\n    $padding: map.get((\n        'material': rem(16px) rem(24px),\n        'fluent': rem(16px) rem(24px),\n        'bootstrap': rem(12px),\n        'indigo-design': rem(14px) rem(24px)\n    ), $variant);\n\n    $border: map.get((\n        'material': none,\n        'fluent': none,\n        'bootstrap': 1px solid igx-color($palette, 'grays', 300),\n        'indigo-design': none\n    ), $variant);\n\n    %igx-toast-display {\n        display: inline-flex;\n        justify-content: center;\n        align-items: center;\n        margin: $margin;\n        padding: $padding;\n        min-width: $width;\n        color: var-get($theme, 'text-color');\n        background: var-get($theme, 'background');\n        border: $border;\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: map.get($theme, 'shadow');\n        backdrop-filter: blur(10px);\n    }\n}\n\n/// Adds typography styles for the igx-toast component.\n/// Uses the 'body-2'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-toast-typography($type-scale, $categories: (text: 'body-2')) {\n    $text: map.get($categories, 'text');\n\n    %igx-toast-display > *{\n        @include igx-type-style($type-scale, $text) {\n            margin: 0;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/simeonoff\" target=\"_blank\">Simeon Simeonoff</a>\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the tooltip directive.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n///\n/// @param {Color} $background [null] - The background color of the tooltip.\n/// @param {Color} $text-color [null] - The text color of the tooltip.\n///\n/// @param {border-radius} $border-radius [null] - The border radius used for the tooltip component.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the tooltip background\n///   $my-tooltip-theme: igx-tooltip-theme($background: magenta);\n///   // Pass the theme to the igx-tooltip component mixin\n///   @include igx-tooltip($my-checkbox-theme);\n@function igx-tooltip-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background: null,\n    $text-color: null\n) {\n    $name: 'igx-tooltip';\n    $selector: '.igx-tooltip--desktop, .igx-tooptip--mobile';\n\n    $tooltip-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tooltip-schema: map.get($schema, $name);\n    } @else {\n        $tooltip-schema: $schema;\n    }\n\n    $theme: apply-palette($tooltip-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($tooltip-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($text-color) and $background {\n        $text-color: text-contrast($background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        background: $background,\n        border-radius: $border-radius,\n        text-color: $text-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n@mixin igx-tooltip($theme) {\n    @include igx-css-vars($theme);\n\n    %tooltip-display {\n        display: inline-flex;\n        justify-content: center;\n        flex-flow: column wrap;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'text-color');\n        border-radius: var-get($theme, 'border-radius');\n        margin: 0 auto;\n    }\n\n    %tooltip--desktop {\n        padding: 0 rem(8px);\n        min-height: rem(24px);\n    }\n\n    %tooltip--mobile {\n        padding: 0 rem(16px);\n        min-height: rem(32px);\n    }\n\n    %tooltip--hidden {\n        display: none;\n    }\n}\n\n/// Adds typography styles for the igx-tooltip component.\n/// Uses the 'body-2' category from the typographic scale for mobile tooltips and custom typography for desktop tooltips.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(text-desktop: null, text-mobile: 'body-2')] - The categories from the typographic scale used for type styles.\n/// @requires rem\n/// @requires {mixin} igx-type-style\n@mixin igx-tooltip-typography(\n    $type-scale,\n    $categories: (text-desktop: null, text-mobile: 'body-2')\n) {\n    $text-desktop: map.get($categories, 'text-desktop');\n    $text-mobile: map.get($categories, 'text-mobile');\n\n    %tooltip--mobile {\n        @include igx-type-style($type-scale, $text-mobile);\n    }\n\n    @if $text-desktop != null {\n        %tooltip--desktop {\n            @include igx-type-style($type-scale, $text-desktop);\n        }\n    } @else {\n        %tooltip--desktop {\n            font-size: rem(10px);\n            font-weight: 600;\n        }\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// If only background color is specified, text/icon color\n/// will be assigned automatically to a contrasting color.\n/// Does ___not___ apply for disabled state colors.\n///\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Map} $elevations [null] - The elevations (shadows) map to be used.\n///\n/// @param {Color} $text-color [null] - The text color of a open time picker.\n/// @param {Color} $hover-text-color [null] - The hover text color of a open time picker.\n/// @param {Color} $selected-text-color [null] -  The text color of a selected item in time picker.\n/// @param {Color} $active-item-background [null] - The background color for current item in focused column inside the time picker.\n/// @param {Color} $disabled-text-color [null] - The text color for disabled values.\n/// @param {Color} $disabled-item-background [null] - The background color for disabled values .\n/// @param {Color} $header-background [null] - The header background color of a time picker.\n/// @param {Color} $header-hour-text-color [null] - The header hour text color of a time picker.\n/// @param {Color} $header-time-period-color [null] - The header AM/PM text color of a time picker.\n/// @param {Color} $background-color [null] - The time-picker panel background color.\n/// @param {box-shadow} $modal-shadow [null] - The custom shadow to be used for the time picker in modal mode.\n/// @param {box-shadow} $dropdown-shadow [null] - The custom shadow to be used for the time picker in dropdown mode.\n/// @param {border-radius} $border-radius [null] - The border radius used for the outline of the picker.\n/// @param {border-radius} $active-item-border-radius [null] - The border radius used for the outline of the currently active item (hours, minutes, AM/PM).\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires text-contrast\n/// @requires igx-elevation\n/// @requires extend\n/// @requires round-borders\n///\n/// @example scss Change the background and text colors in  time picker\n///   $my-time-picker-theme: igx-time-picker-theme(\n///     $text-color: white,\n///     $background-color: black\n///   );\n///   // Pass the theme to the igx-time-picker component mixin\n///   @include igx-time-picker($my-time-picker-theme);\n@function igx-time-picker-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $elevations: null,\n\n    $border-radius: null,\n    $active-item-border-radius: null,\n\n    $text-color: null,\n    $hover-text-color: null,\n    $selected-text-color: null,\n    $active-item-background: null,\n    $disabled-text-color: null,\n    $disabled-item-background: null,\n    $header-background: null,\n    $header-hour-text-color: null,\n    $header-time-period-color: null,\n    $background-color: null,\n    $modal-shadow: null,\n    $dropdown-shadow: null\n) {\n    $name: 'igx-time-picker';\n    $selector: '.igx-time-picker';\n\n    $time-picker-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $time-picker-schema: map.get($schema, $name);\n    } @else {\n        $time-picker-schema: $schema;\n    }\n\n    $theme: apply-palette($time-picker-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($time-picker-schema, 'border-radius')), 0, 20px\n    );\n\n    $active-item-border-radius: round-borders(\n        if($active-item-border-radius, $active-item-border-radius, map.get($time-picker-schema, 'active-item-border-radius')), 0, 20px\n    );\n\n    @if not($text-color) and $background-color {\n        $text-color: text-contrast($background-color);\n    }\n\n    @if not($header-hour-text-color) and $header-background {\n        $header-hour-text-color: text-contrast($header-background);\n    }\n\n    @if not($header-time-period-color) and $header-background {\n        @if meta.type-of($header-background) == 'color' {\n            $header-time-period-color: rgba(text-contrast($header-background), .8);\n        }\n    }\n\n    @if not($selected-text-color) and $active-item-background {\n        $selected-text-color: text-contrast($active-item-background);\n    }\n\n    @if not($active-item-background) and $background-color {\n        @if meta.type-of($background-color) == 'color' {\n            $active-item-background: rgba(text-contrast($background-color), .12);\n        }\n    }\n\n    @if not($disabled-text-color) and $disabled-item-background {\n        @if meta.type-of($disabled-item-background) == 'color' {\n            $disabled-text-color: rgba(text-contrast($disabled-item-background), .6);\n        }\n    }\n\n    @if not($modal-shadow) {\n        $elevation: map.get($time-picker-schema, 'modal-elevation');\n        $modal-shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @if not($dropdown-shadow) {\n        $elevation: map.get($time-picker-schema, 'dropdown-elevation');\n        $dropdown-shadow: igx-elevation($elevations, $elevation);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        selector: $selector,\n        palette: $palette,\n        text-color: $text-color,\n        hover-text-color: $hover-text-color,\n        selected-text-color: $selected-text-color,\n        active-item-background: $active-item-background,\n        disabled-text-color: $disabled-text-color,\n        disabled-item-background: $disabled-item-background,\n        header-background: $header-background,\n        header-hour-text-color: $header-hour-text-color,\n        header-time-period-color: $header-time-period-color,\n        background-color: $background-color,\n        modal-shadow: $modal-shadow,\n        dropdown-shadow: $dropdown-shadow,\n        border-radius: $border-radius,\n        active-item-border-radius: $active-item-border-radius,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires rem\n/// @requires var-get\n@mixin igx-time-picker($theme) {\n    @include igx-css-vars($theme);\n\n    $variant: map.get($theme, 'variant');\n    $not-bootstrap-theme: $variant != 'bootstrap';\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $vertical-header-width: rem(168px);\n\n    $picker-buttons-padding: map.get((\n        material: rem(8px),\n        fluent: rem(8px),\n        bootstrap: rem(16px)\n    ), $variant);\n\n    %time-picker-display {\n        display: flex;\n        flex-flow: column nowrap;\n        max-width: rem(340px);\n        min-width: rem(320px);\n        border-radius: var-get($theme, 'border-radius');\n        box-shadow: var-get($theme, 'modal-shadow');\n        overflow: hidden;\n    }\n\n    %time-picker-display--vertical {\n        flex-flow: row nowrap;\n        min-width: rem(540px);\n    }\n\n    %time-picker__main {\n        background: var-get($theme, 'background-color');\n        flex: 1 1 auto;\n    }\n\n    %time-picker--dropdown {\n        min-width: rem(200px);\n        box-shadow: var-get($theme, 'dropdown-shadow');\n    }\n\n    %time-picker__body {\n        display: flex;\n        padding: rem(10px) 0;\n        justify-content: center;\n    }\n\n    %time-picker-content {\n        width: 100%;\n        padding: 0;\n        color: inherit;\n        line-height: initial;\n    }\n\n    %time-picker-dialog-title {\n        display: none;\n    }\n\n    %time-picker-dialog-actions {\n        margin: 0;\n    }\n\n    %time-picker__hourList {\n        text-align: #{$right};\n\n        @include if-rtl() {\n            order: 2;\n        }\n    }\n\n    %time-picker__minuteList {\n        text-align: center;\n        @include if-rtl() {\n            order: 1;\n        }\n    }\n\n    %time-picker__secondsList {\n        text-align: center;\n    }\n\n    %time-picker__ampmList {\n        display: flex;\n        flex-direction: column;\n        padding-top: rem(48px);\n\n        @include if-rtl() {\n            order: 3;\n        }\n    }\n\n    %time-picker__column {\n        max-width: rem(64px);\n        height: rem(325px);\n        padding: 0;\n        cursor: pointer;\n        display: flex;\n        flex-flow: column nowrap;\n        justify-content: space-between;\n        align-items: center;\n        color: var-get($theme, 'text-color');\n        overflow: hidden;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n    }\n\n    %time-picker__item {\n        width: rem(54px);\n        padding: rem(5px) rem(10px);\n        border-radius: var-get($theme, 'active-item-border-radius');\n        height: rem(48px);\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        &:focus,\n        &:active {\n            outline: none;\n        }\n\n        &:hover {\n            color: var-get($theme, 'hover-text-color');\n        }\n    }\n\n    %time-picker__item--selected {\n        font-size: rem(24px);\n        color: var-get($theme, 'selected-text-color');\n    }\n\n    %time-picker__item--active {\n        background: var-get($theme, 'active-item-background');\n    }\n\n    %time-picker__item--disabled {\n        color: var-get($theme, 'disabled-text-color');\n        background: var-get($theme, 'disabled-item-background');\n        pointer-events: none;\n    }\n\n    %time-picker__header {\n        background: var-get($theme, 'header-background');\n        padding: rem(24px) rem(16px);\n    }\n\n    %time-picker__header-ampm {\n        color: var-get($theme, 'header-time-period-color');\n    }\n\n    %time-picker__header--vertical {\n        width: $vertical-header-width;\n    }\n\n    %time-picker__header-hour {\n        display: flex;\n        color: var-get($theme, 'header-hour-text-color');\n\n        @include if-rtl() {\n            flex-direction: row-reverse;\n            justify-content: flex-end;\n        }\n    }\n\n    %time-picker__header-ampm,\n    %time-picker__header-hour {\n        margin: 0;\n    }\n\n    %time-picker__buttons {\n        display: flex;\n        justify-content: flex-end;\n        @if $not-bootstrap-theme {\n            height: rem(52px);\n        }\n\n        padding: $picker-buttons-padding;\n\n        [igxButton] + [igxButton] {\n            margin-#{$left}: rem(8px);\n        }\n    }\n}\n\n/// Adds typography styles for the igx-calendar component.\n/// Uses the 'h4', 'subtitle-1' and 'body-1'\n/// category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(header-time-period: 'subtitle-1', header-hour: 'h4', content: 'body-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-time-picker-typography($type-scale, $categories: (\n    header-time-period: 'subtitle-1',\n    header-hour: 'h4',\n    content: 'body-1')\n) {\n    $time-period: map.get($categories, 'header-time-period');\n    $header-hour: map.get($categories, 'header-hour');\n    $content: map.get($categories, 'content');\n\n    %time-picker__header-ampm {\n        @include igx-type-style($type-scale, $time-period);\n    }\n\n    %time-picker__header-hour {\n        @include igx-type-style($type-scale, $header-hour) {\n            margin-top: 0;\n        }\n    }\n\n    %time-picker__column {\n        @include igx-type-style($type-scale, $content) {\n            margin-top: 0;\n            margin-bottom: 0;\n        }\n    }\n}\n\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use '../../typography/base' as *;\n@use 'sass:map';\n@use 'sass:meta';\n\n////\n/// @group themes\n/// @access public\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming of the tree component.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Color} background [null] - The background color used for the tree node.\n/// @param {Color} foreground [null] - The color used for the tree node content.\n/// @param {Color} background-selected [null] - The background color used for the selected tree node.\n/// @param {Color} foreground-selected [null] - The color used for the content of the selected tree node.\n/// @param {Color} background-active [null] - The background color used for the active tree node.\n/// @param {Color} foreground-active [null] - The color used for the content of the active tree node.\n/// @param {Color} background-active-selected [null] - The background color used for the active selected tree node.\n/// @param {Color} foreground-active-selected [null] - The color used for the content of the active selected tree node.\n/// @param {Color} background-disabled [null] - The background color used for the tree node in disabled state.\n/// @param {Color} foreground-disabled [null] - The color used for the content of the disabled tree node.\n/// @param {Color} drop-area-color [null] - The background color used for the tree node drop aria.\n/// @param {Color} border-color [null] - The outline shadow color used for tree node in focus state.\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @example scss Change the tree background\n///   $my-tree-theme: igx-tree-theme($background: magenta);\n///   // Pass the theme to the igx-tree component mixin\n///   @include igx-tree($my-tree-theme);\n@function igx-tree-theme(\n    $palette: null,\n    $schema: $light-schema,\n    $background: null,\n    $background-selected: null,\n    $background-active: null,\n    $background-active-selected: null,\n    $background-disabled: null,\n    $foreground: null,\n    $foreground-selected: null,\n    $foreground-active: null,\n    $foreground-active-selected: null,\n    $foreground-disabled: null,\n    $drop-area-color: null,\n    $border-color: null,\n) {\n    $name: 'igx-tree';\n    $tree-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $tree-schema: map.get($schema, $name);\n    } @else {\n        $tree-schema: $schema;\n    }\n\n    $theme: apply-palette($tree-schema, $palette);\n\n    @if not($foreground) and $background {\n        $foreground: text-contrast($background);\n    }\n\n    @if not($foreground-selected) and $background-selected {\n        $foreground-selected: text-contrast($background-selected);\n    }\n\n    @if not($foreground-active) and $background-active {\n        $foreground-active: text-contrast($background-active);\n    }\n\n    @if not($foreground-active-selected) and $background-active-selected {\n        $foreground-active-selected: text-contrast($background-active-selected);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background: $background,\n        foreground: $foreground,\n        background-selected: $background-selected,\n        foreground-selected: $foreground-selected,\n        background-active: $background-active,\n        foreground-active: $foreground-active,\n        background-active-selected: $background-active-selected,\n        foreground-active-selected: $foreground-active-selected,\n        background-disabled: $background-disabled,\n        foreground-disabled: $foreground-disabled,\n        drop-area-color: $drop-area-color,\n        border-color: $border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n@mixin igx-tree($theme) {\n    @include igx-css-vars($theme);\n\n    $left: if-ltr(left, right);\n    $right: if-ltr(right, left);\n\n    $variant: map.get($theme, variant);\n    $indigo-theme: $variant == 'indigo-design';\n\n    $node-indent: (\n        comfortable: rem(24px),\n        cosy: rem(16px),\n        compact: rem(12px)\n    );\n\n    $node-height: (\n        comfortable: rem(50px),\n        cosy: rem(40px),\n        compact: rem(32px)\n    );\n\n    $icon-size: rem(24px);\n    $icon-space: rem(8px);\n\n    $drop-indicator-width: (\n        comfortable: calc(100% - ((#{map.get($node-indent, 'comfortable')} * 2) + (#{$icon-size} + #{$icon-space}))),\n        cosy: calc(100% - ((#{map.get($node-indent, 'cosy')} * 2) + (#{$icon-size} + #{$icon-space}))),\n        compact: calc(100% - ((#{map.get($node-indent, 'compact')} * 2) + (#{$icon-size} + #{$icon-space})))\n    );\n\n    %tree-display {\n        display: block;\n        z-index: 0;\n    }\n\n    %tree-node,\n    %node-wrapper,\n    %node-toggle-button,\n    %node-content,\n    %node-select {\n        display: flex;\n    }\n\n    %tree-node {\n        flex-direction: column;\n    }\n\n    %node-wrapper,\n    %node-toggle-button,\n    %node-select {\n        align-items: center;\n    }\n\n    %node-toggle-button,\n    %node-select {\n        margin-#{$right}: $icon-space;\n    }\n\n    %node-content,\n    %node-toggle-button,\n    %node-select {\n        z-index: 1;\n    }\n\n    %node-toggle-button--hidden {\n        visibility: hidden;\n    }\n\n    %node-wrapper {\n        min-height: map.get($node-height, 'comfortable');\n        padding: 0 map.get($node-indent, 'comfortable');\n        position: relative;\n        background: var-get($theme, 'background');\n        color: var-get($theme, 'foreground');\n\n        // We need this here, since we count on it to calculate the width of the tree drop indicator\n        igx-icon {\n            width: $icon-size;\n            height: $icon-size;\n            font-size: $icon-size;\n        }\n\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: transparent;\n            z-index: 0;\n        }\n\n        &:hover {\n            &::after {\n                background: var-get($theme, 'hover-color');\n            }\n        }\n\n        &:focus {\n            outline-width: 0;\n        }\n\n        igx-circular-bar {\n            width: $icon-size;\n            height: $icon-size;\n        }\n\n        &--cosy {\n            min-height: map.get($node-height, 'cosy');\n            padding: 0 map.get($node-indent, 'cosy');\n\n            %node-spacer {\n                width: map.get($node-indent, 'cosy')\n            }\n\n            %node-drop-indicator {\n                #{$right}: map.get($node-indent, 'cosy');\n                width: map.get($drop-indicator-width, 'cosy');\n            }\n\n            igx-circular-bar {\n                width: calc(#{$icon-size} - 4px);\n                height: calc(#{$icon-size} - 4px);\n            }\n        }\n\n        &--compact {\n            min-height: map.get($node-height, 'compact');\n            padding: 0 map.get($node-indent, 'compact');\n\n            %node-spacer {\n                width: map.get($node-indent, 'compact')\n            }\n\n            %node-drop-indicator {\n                #{$right}: map.get($node-indent, 'compact');\n                width: map.get($drop-indicator-width, 'compact');\n            }\n\n            igx-circular-bar {\n                width: calc(#{$icon-size} - 6px);\n                height: calc(#{$icon-size} - 6px);\n            }\n        }\n    }\n\n    %node-wrapper--selected {\n        background: var-get($theme, 'background-selected');\n        color: var-get($theme, 'foreground-selected');\n    }\n\n    %node-wrapper--active {\n        background: var-get($theme, 'background-active');\n        color: var-get($theme, 'foreground-active');\n    }\n\n    %indigo-opacity {\n        $bg-active: map.get($theme, 'background-active');\n\n        @if ($indigo-theme) {\n            @if meta.type-of($bg-active) == 'color' and lightness($bg-active) < 50 {\n                opacity: .8;\n            } @else {\n                opacity: .3;\n            }\n        }\n    }\n\n    %node-wrapper--active-selected {\n        background: var-get($theme, 'background-active-selected');\n        color: var-get($theme, 'foreground-active-selected');\n    }\n\n    %node-wrapper--focused {\n        box-shadow: inset 0 0 0 1px var-get($theme, 'border-color');\n    }\n\n    %node-wrapper--disabled {\n        background: var-get($theme, 'background-disabled') !important;\n        color: var-get($theme, 'foreground-disabled') !important;\n\n        box-shadow: none !important;\n\n        pointer-events: none;\n\n        &::after {\n            display: none;\n        }\n\n        %node-toggle-button {\n            color: var-get($theme, 'foreground-disabled') !important;\n        }\n    }\n\n    %node-spacer {\n        display: inline-block;\n        width: map.get($node-indent, 'comfortable');\n    }\n\n    %node-content {\n        display: block;\n        align-items: center;\n        flex: 1;\n        @include ellipsis();\n    }\n\n    %node-toggle-button {\n        justify-content: center;\n        cursor: pointer;\n        user-select: none;\n        min-width: $icon-size\n    }\n\n    %node-drop-indicator {\n        display: flex;\n        visibility: hidden;\n        position: absolute;\n        #{$right}: map.get($node-indent, 'comfortable');\n        bottom: 0;\n        width: map.get($drop-indicator-width, 'comfortable');\n\n        > div {\n            flex: 1;\n            height: rem(1px);\n            background: var-get($theme, 'drop-area-color');\n        }\n    }\n\n    %node-group {\n        overflow: hidden;\n    }\n}\n\n/// Adds typography styles for the igx-tree component.\n/// Uses the 'subtitle-1' category from the typographic scale.\n/// @group typography\n/// @param {Map} $type-scale - A typographic scale as produced by igx-type-scale.\n/// @param {Map} $categories [(label: 'subtitle-1')] - The categories from the typographic scale used for type styles.\n/// @requires {mixin} igx-type-style\n@mixin igx-tree-typography(\n    $type-scale,\n    $categories: (label: 'body-2')\n) {\n    $text: map.get($categories, 'label');\n\n    %node-content {\n        @include igx-type-style($type-scale, $text)\n    }\n}\n","@use '../../base' as *;\n@use '../../themes/schemas' as *;\n@use 'sass:map';\n\n////\n/// @group themes\n/// @access privet\n/// @author <a href=\"https://github.com/desig9stein\" target=\"_blank\">Marin Popov</a>\n////\n\n/// Returns a map containing all style properties related to the theming the watermark directive.\n/// @param {Map} $palette [null] - The palette used as basis for styling the component.\n/// @param {Map} $schema [$light-schema] - The schema used as basis for styling the component.\n/// @param {Number} $border-radius [null] - The border radius used for the link.\n/// @param {Color} $border-color [null] - The border color used for the  link.\n/// @param {Color} $link-background [null] - The background color used for the link.\n/// @param {Color} $color [null] - The color used for the link text.\n///\n/// @requires $default-palette\n/// @requires $light-schema\n/// @requires apply-palette\n/// @requires extend\n/// @requires text-contrast\n/// @requires round-borders\n///\n/// @example scss Change the watermark link background\n///   $my-watermark-theme: igx-watermark-theme($link-background: magenta);\n///   // Pass the theme to the igx-watermark component mixin\n///   @include igx-watermark($my-watermark-theme);\n@function igx-watermark-theme(\n    $palette: null,\n    $schema: $light-schema,\n\n    $border-radius: null,\n    $background-image: null,\n    $link-background: null,\n    $color: null,\n    $border-color: null,\n) {\n    $name: 'igx-watermark';\n    $watermark-schema: ();\n\n    @if map.has-key($schema, $name) {\n        $watermark-schema: map.get($schema, $name);\n    } @else {\n        $watermark-schema: $schema;\n    }\n\n    $theme: apply-palette($watermark-schema, $palette);\n\n    $border-radius: round-borders(\n        if($border-radius, $border-radius, map.get($watermark-schema, 'border-radius')), 0, 16px\n    );\n\n    @if not($color) and $link-background {\n        $color: text-contrast($link-background);\n    }\n\n    @return extend($theme, (\n        name: $name,\n        palette: $palette,\n        background-image: $background-image,\n        link-background: $link-background,\n        border-radius: $border-radius,\n        color: $color,\n        border-color: $border-color,\n    ));\n}\n\n/// @param {Map} $theme - The theme used to style the component.\n/// @requires {mixin} igx-css-vars\n/// @requires var-get\n@mixin igx-watermark($theme) {\n    @include igx-css-vars($theme);\n\n    %igx-watermark {\n        display: block;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 10000;\n        pointer-events: none;\n    }\n\n    %igx-watermark__link {\n        display: inline-flex;\n        align-items: center;\n        position: absolute;\n        bottom: 0;\n        right: 0;\n        font-size: rem(14px);\n        padding: rem(2px) rem(4px);\n        line-height: normal;\n        border-radius: var-get($theme, 'border-radius');\n        border: 1px solid var-get($theme, 'border-color');\n        color: var-get($theme, 'color');\n        z-index: 10002;\n        background-color: var-get($theme, 'link-background');\n        pointer-events: all;\n        text-decoration: none;\n    }\n\n    %igx-watermark__background-img {\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 10001;\n        pointer-events: none;\n        background-image: var-get($theme, 'background-image');\n        background-repeat: repeat;\n        background-position: rem(16px) rem(16px);\n        // Target only IE 10,11.\n        @media all and (-ms-high-contrast: none)\n        {\n            background-image: none;\n        }\n    }\n}\n\n"],"names":[],"sourceRoot":"webpack:///"}