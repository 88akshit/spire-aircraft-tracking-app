{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/count-down/count-down.component.ts","./src/app/count-down/count-down.component.html","./src/app/maps/geo-map-type-scatter-symbol-series/map-type-scatter-symbol-series.component.ts","./src/app/maps/geo-map-type-scatter-symbol-series/map-type-scatter-symbol-series.component.html","./src/app/tracking-service.ts","./src/main.ts","./src/polyfills.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"app-root\",\r\n    styleUrls: [\"./app.component.scss\"],\r\n    templateUrl: \"./app.component.html\"\r\n})\r\nexport class AppComponent {}","<nav class=\"navbar navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">\n      <!-- <img src=\"../assets/Screenshot 2022-02-26 at 10.03.53 PM.png\" alt=\"\" width=\"400\" height=\"120\" class=\"d-inline-block align-text-top nav-icon\">       -->\n      <img src=\"https://camo.githubusercontent.com/3569ff448cad7c757e568aa595bae8afaf1e3075412dc08bab976eaa2a51f96b/68747470733a2f2f6175746f6d617465642d656d61696c732d7075626c69632d7265736f75726365732e73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f4c4f474f5f53706972655f4176696174696f6e5f436f6c6f722e706e67\" alt=\"\" width=\"400\" height=\"120\" class=\"d-inline-block align-text-top nav-icon\"> \n    </a>\n\n  </div>\n</nav>\n<br>\n<div>\n    <app-map-type-scatter-symbol-series></app-map-type-scatter-symbol-series>\n</div>\n","import { NgModule } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { MapTypeScatterSymbolSeriesComponent } from \"./maps/geo-map-type-scatter-symbol-series/map-type-scatter-symbol-series.component\";\r\nimport { IgxGeographicMapModule } from \"igniteui-angular-maps\";\r\nimport { IgxDataChartInteractivityModule } from \"igniteui-angular-charts\";\r\nimport { CountDownComponent } from './count-down/count-down.component';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport { TrackingService } from \"./tracking-service\";\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\n\r\n@NgModule({\r\n  bootstrap: [AppComponent],\r\n  declarations: [\r\n\tAppComponent,\r\n\tMapTypeScatterSymbolSeriesComponent,\r\n CountDownComponent\r\n],\r\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxGeographicMapModule,\r\n  IgxDataChartInteractivityModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatProgressBarModule,\r\n  HttpClientModule,\r\n  MatDividerModule,\r\n  MatChipsModule\r\n],\r\n  providers: [TrackingService],\r\n  entryComponents: [],\r\n  schemas: []\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit, OnDestroy, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription, interval } from 'rxjs';\nimport { TrackingService } from '../tracking-service';\n\n@Component({\n  selector: 'app-count-down',\n  templateUrl: './count-down.component.html',\n  styleUrls: ['./count-down.component.scss']\n})\nexport class CountDownComponent implements OnInit, OnDestroy, OnChanges {\n\n  private subscription: Subscription;\n\n  public dateNow = new Date();\n  public dDay = new Date('Feb 26 2022 13:00:00');\n  milliSecondsInASecond = 1000;\n  hoursInADay = 24;\n  minutesInAnHour = 60;\n  SecondsInAMinute = 60;\n\n  //public timeDifference;\n  public secondsToDday;\n  public minutesToDday;\n  public hoursToDday;\n  public daysToDday;\n\n  @Input() timeDifference: number;\n\n\n  constructor(private trackingService: TrackingService) {\n\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.allocateTimeUnits(changes['timeDifference'].currentValue)\n  }\n\n\n  ngOnInit() {\n\n  }\n\n  private allocateTimeUnits(timeDifference) {\n    this.secondsToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond) % this.SecondsInAMinute);\n    this.minutesToDday = Math.floor((timeDifference) / (this.milliSecondsInASecond * this.minutesInAnHour) % this.SecondsInAMinute);\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n}","\n<mat-card class=\"timer\">\n    <mat-card-title>Next Update</mat-card-title>\n    <mat-card-actions *ngIf=\"timeDifference>0;else other_content\">\n        <button mat-button>{{minutesToDday}} Min</button>\n        <button mat-button>{{secondsToDday}} Seconds</button>\n      </mat-card-actions>\n     <ng-template #other_content>\n        <mat-divider inset></mat-divider>\n        <br>\n         <div>Processing Data Please wait</div>\n         <br>\n        </ng-template>\n        \n    <mat-card-footer>\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </mat-card-footer>\n</mat-card>\n\n","import { AfterViewInit, Component, TemplateRef, ViewChild } from \"@angular/core\";\r\nimport { MarkerType } from \"igniteui-angular-charts\";\r\nimport { IgxGeographicMapComponent } from \"igniteui-angular-maps\";\r\nimport { IgxGeographicSymbolSeriesComponent\r\n} from \"igniteui-angular-maps\";\r\nimport { interval, Subscription } from \"rxjs\";\r\nimport { TrackingService } from \"src/app/tracking-service\";\r\n\r\n@Component({\r\n  selector: \"app-map-type-scatter-symbol-series\",\r\n  styleUrls: [\"./map-type-scatter-symbol-series.component.scss\"],\r\n  templateUrl: \"./map-type-scatter-symbol-series.component.html\"\r\n})\r\n\r\nexport class MapTypeScatterSymbolSeriesComponent implements AfterViewInit {\r\n\r\n    @ViewChild(\"map\", {static: true})\r\n    public map: IgxGeographicMapComponent;\r\n    @ViewChild(\"template\", {static: true})\r\n    public tooltip: TemplateRef<object>;\r\n\r\n    public dDay = new Date('Feb 26 2022 21:00:00');\r\n    public timeDifference =0;\r\n    private subscription: Subscription;\r\n    public totalNumberOfAircraft =0\r\n    public leastTargetUpdatesAircraft = ''\r\n    public mostTargetUpdatesAircraft = ''\r\n    public averageTargetUpdatesPerAircraft = 0\r\n    public updatesAvailable = false\r\n    public sendRequest = false\r\n    public symbolSeries = new IgxGeographicSymbolSeriesComponent ();\r\n    public symbolMaxSeries = new IgxGeographicSymbolSeriesComponent ();\r\n    public symbolMinSeries = new IgxGeographicSymbolSeriesComponent ();\r\n    constructor(private trackingService: TrackingService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n   \r\n      this.trackingService.getTrackingData().subscribe((data: any[])=>{\r\n     \r\n        console.log(data)\r\n        if (data['updates_available']){\r\n\r\n          this.updatesAvailable = true\r\n          \r\n          this.totalNumberOfAircraft = data['details'].total_number_of_aircrafts\r\n          let minAircraft = data['details'].minimum_target_updates_aircraft\r\n          this.leastTargetUpdatesAircraft = minAircraft[0]['name']\r\n          let maxAircraft =  data['details'].maximum_target_updates_aircraft\r\n          this.mostTargetUpdatesAircraft = maxAircraft[0]['name']\r\n          this.averageTargetUpdatesPerAircraft = data['details'].average_target_updates_per_aircraft\r\n         \r\n          this.addSeriesWith(data['details'].aircraft_details, \"rgb(32, 146, 252)\", this.symbolSeries);\r\n          this.addSeriesWith(data['details'].minimum_target_updates_aircraft, \"red\",this.symbolMinSeries);\r\n          this.addSeriesWith(data['details'].maximum_target_updates_aircraft, \"green\" , this.symbolMaxSeries);\r\n        }\r\n        this.dDay = new Date(data['next_update']);\r\n     \r\n        console.log(this.dDay.toUTCString());\r\n\r\n\r\n       \r\n\r\n      }, error =>{\r\n        this.subscription.unsubscribe();\r\n      } );\r\n      \r\n      \r\n    }\r\n\r\n    private getTimeDifference() {\r\n      let currentTime = new Date().getTime()\r\n      this.timeDifference = this.dDay.getTime() - new Date().getTime();\r\n      if(this.timeDifference<0 && !this.sendRequest){\r\n        this.sendRequest = true\r\n        this.trackingService.getTrackingData().subscribe((data: any[])=>{\r\n\r\n          this.sendRequest = true\r\n          if (data['updates_available']){\r\n            this.sendRequest = false\r\n            this.updatesAvailable = true\r\n            console.log(data['next_update']);\r\n            console.log(data)\r\n            console.log(data['details'].total_number_of_aircrafts)\r\n\r\n            this.totalNumberOfAircraft = data['details'].total_number_of_aircrafts\r\n            let minAircraft = data['details'].minimum_target_updates_aircraft\r\n            this.leastTargetUpdatesAircraft = minAircraft[0]['name']\r\n            let maxAircraft =  data['details'].maximum_target_updates_aircraft\r\n            this.mostTargetUpdatesAircraft = maxAircraft[0]['name']\r\n            this.averageTargetUpdatesPerAircraft = data['details'].average_target_updates_per_aircraft\r\n          \r\n  \r\n            this.addSeriesWith(data['details'].aircraft_details, \"rgb(32, 146, 252)\", this.symbolSeries);\r\n            this.addSeriesWith(data['details'].minimum_target_updates_aircraft, \"red\",this.symbolMinSeries);\r\n            this.addSeriesWith(data['details'].maximum_target_updates_aircraft, \"green\" , this.symbolMaxSeries);\r\n\r\n          }\r\n          this.dDay = new Date(data['next_update']);\r\n          console.log(\"Response : \"+this.dDay.toUTCString());\r\n          \r\n\r\n         \r\n        },error =>{\r\n          this.subscription.unsubscribe();\r\n        });\r\n        \r\n      }\r\n    }\r\n    public ngAfterViewInit(): void {\r\n\r\n      this.subscription = interval(1000)\r\n        .subscribe(x => { \r\n          this.getTimeDifference();\r\n          \r\n        });\r\n    }\r\n\r\n    public addSeriesWith(locations: any[], brush: string , series: IgxGeographicSymbolSeriesComponent) {\r\n\r\n        series.dataSource = locations;\r\n        series.markerType = MarkerType.Circle;\r\n        series.latitudeMemberPath = \"lat\";\r\n        series.longitudeMemberPath = \"lon\";\r\n        series.markerBrush  = \"White\";\r\n        series.markerOutline = brush;\r\n        series.tooltipTemplate = this.tooltip;\r\n        this.map.series.add(series);\r\n    }\r\n}\r\n","\r\n<div class=\"container\">\r\n    <div class=\"row\">     \r\n      <div class=\"col-sm-8\">\r\n        <div class=\"container sample\">\r\n            <igx-geographic-map #map\r\n                width=\"1300px\"\r\n                height=\"800px\"\r\n                zoomable=\"true\" >\r\n            </igx-geographic-map>\r\n        \r\n            <ng-template let-series=\"series\" let-item=\"item\" #template>\r\n                <div>\r\n                    <div *ngIf=\"item.org;then hasOrg; else notOrg\" ></div>\r\n                    <span [style.color]=\"series.brush\">{{item.name}}</span><br/>\r\n                </div>\r\n                <ng-template #hasOrg>\r\n                </ng-template>\r\n                    <ng-template #notOrg>\r\n                    <span></span>\r\n                    </ng-template>\r\n            </ng-template>\r\n        \r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-4\">\r\n          <div class=\"count-down\">\r\n            <app-count-down [timeDifference]=timeDifference> </app-count-down>       \r\n          </div>\r\n          <br>\r\n\r\n          <div class=\"detail-card\"  *ngIf=\"updatesAvailable\">\r\n            <mat-card class=\"timer\">\r\n                <mat-card-title>Aircraft Tracking Stats</mat-card-title>\r\n                <mat-divider inset></mat-divider>\r\n                <br>\r\n                <mat-card-content>\r\n                   <div class=\"details-data\">\r\n                    <span> Total Number of Aircraft<button mat-button color=\"primary\">{{totalNumberOfAircraft}}</button> </span> \r\n                   </div>\r\n                   <div class=\"details-data\">\r\n                    <span>Average Number of Target Updates Per Aircraft<button mat-button color=\"primary\">{{averageTargetUpdatesPerAircraft}}</button> </span> \r\n                   </div>\r\n                   <div class=\"details-data\">\r\n                    <span> Aircraft with Least Target Updates<button mat-button color=\"primary\">{{leastTargetUpdatesAircraft }}</button> </span> \r\n                   </div>\r\n                   <div class=\"details-data\">\r\n                    <span> Aircraft with Most Target Updates<button mat-button  color=\"primary\">{{mostTargetUpdatesAircraft}}</button> </span> \r\n                  </div>\r\n                  \r\n                  </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n        \r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n ","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackingService {\n\n  constructor(private http: HttpClient) { }\n  \n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('An error occurred:', error.error.message);\n    } else {\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n\n  getTrackingData(): Observable<any> {\n\n    let endpoint = \"http://127.0.0.1:8000/v1/targets/aircrafts\"\n    return this.http.get(endpoint).pipe(catchError(this.handleError));\n  }\n\n}\n","import './polyfills';\r\n\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;\r\n\r\n  // Otherwise, log the boot error\r\n}).catch(err => console.error(err));\r\n","/**\r\n * This file includes polyfills needed by Angular and is loaded before the app.\r\n * You can add your own extra polyfills to this file.\r\n *\r\n * This file is divided into 2 sections:\r\n *   1. Browser polyfills. These are applied before loading ZoneJS and are sorted by browsers.\r\n *   2. Application imports. Files imported after ZoneJS that should be loaded before your main\r\n *      file.\r\n *\r\n * The current setup is for so-called \"evergreen\" browsers; the last versions of browsers that\r\n * automatically update themselves. This includes Safari >= 10, Chrome >= 55 (including Opera),\r\n * Edge >= 13 on the desktop, and iOS 10 and Chrome on mobile.\r\n *\r\n * Learn more in https://angular.io/guide/browser-support\r\n */\r\n\r\n/***************************************************************************************************\r\n* BROWSER POLYFILLS\r\n*/\r\n\r\nimport \"core-js/es7/object\";  // Run `npm install --save classlist.js`.\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\nimport \"core-js/es6/reflect\";\r\n\r\n/* Evergreen browsers require these. */\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\nimport \"core-js/es7/reflect\";  // Run `npm install --save web-animations-js`.\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by Angular itself.\r\n */\r\nimport \"hammerjs/hammer\";\r\nimport \"zone.js\";  // Included with Angular CLI.\r\n\r\n/***************************************************************************************************\r\n * @angular/animations polyfill\r\n */\r\nif (!Element.prototype.matches) {\r\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\r\n}\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\n/**\r\n * Date, currency, decimal and percent pipes.\r\n * Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\r\n */\r\n// import \"intl\";  // Run `npm install --save intl`.\r\n// import \"intl/locale-data/jsonp/de\";\r\n/**\r\n * Need to import at least one locale-data with intl.\r\n */\r\n// import \"intl/locale-data/jsonp/en\";\r\n"],"names":[],"sourceRoot":"webpack:///"}